// 
// Decompiled by Procyon v0.5.36
// 

package org.apache.hadoop.yarn.proto;

import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.RepeatedFieldBuilder;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Collection;
import java.util.List;
import com.google.protobuf.UnmodifiableLazyStringList;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.AbstractMessageLite;
import com.google.protobuf.AbstractMessage;
import com.google.protobuf.SingleFieldBuilder;
import com.google.protobuf.AbstractParser;
import com.google.protobuf.Message;
import java.io.InputStream;
import java.io.ObjectStreamException;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ByteString;
import java.io.IOException;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.MessageLite;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.Parser;
import com.google.protobuf.UnknownFieldSet;
import com.google.protobuf.Internal;
import com.google.protobuf.ProtocolMessageEnum;
import org.apache.hadoop.security.proto.SecurityProtos;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.GeneratedMessage;
import com.google.protobuf.Descriptors;

public final class YarnProtos
{
    private static Descriptors.Descriptor internal_static_hadoop_yarn_SerializedExceptionProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_SerializedExceptionProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ApplicationIdProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ApplicationIdProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ApplicationAttemptIdProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ApplicationAttemptIdProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerIdProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerIdProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ResourceProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ResourceProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ResourceOptionProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ResourceOptionProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_NodeResourceMapProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_NodeResourceMapProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_PriorityProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_PriorityProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerReportProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerReportProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_URLProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_URLProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_LocalResourceProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_LocalResourceProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ApplicationReportProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ApplicationReportProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ApplicationAttemptReportProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ApplicationAttemptReportProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_NodeIdProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_NodeIdProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_NodeReportProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_NodeReportProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_NodeIdToLabelsProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_NodeIdToLabelsProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ResourceRequestProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ResourceRequestProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_PreemptionMessageProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_PreemptionMessageProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_StrictPreemptionContractProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_StrictPreemptionContractProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_PreemptionContractProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_PreemptionContractProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_PreemptionContainerProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_PreemptionContainerProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_PreemptionResourceRequestProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_PreemptionResourceRequestProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ResourceBlacklistRequestProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ResourceBlacklistRequestProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ApplicationSubmissionContextProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ApplicationSubmissionContextProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_LogAggregationContextProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_LogAggregationContextProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ApplicationACLMapProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ApplicationACLMapProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_YarnClusterMetricsProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_YarnClusterMetricsProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_QueueInfoProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_QueueInfoProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_QueueUserACLInfoProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_QueueUserACLInfoProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ReservationIdProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ReservationIdProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ReservationRequestProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ReservationRequestProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ReservationRequestsProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ReservationRequestsProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ReservationDefinitionProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ReservationDefinitionProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerLaunchContextProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerLaunchContextProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerStatusProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerStatusProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerResourceIncreaseProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerResourceIncreaseProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_ContainerResourceDecreaseProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_ContainerResourceDecreaseProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_StringLocalResourceMapProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_StringLocalResourceMapProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_StringStringMapProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_StringStringMapProto_fieldAccessorTable;
    private static Descriptors.Descriptor internal_static_hadoop_yarn_StringBytesMapProto_descriptor;
    private static GeneratedMessage.FieldAccessorTable internal_static_hadoop_yarn_StringBytesMapProto_fieldAccessorTable;
    private static Descriptors.FileDescriptor descriptor;
    
    private YarnProtos() {
    }
    
    public static void registerAllExtensions(final ExtensionRegistry registry) {
    }
    
    public static Descriptors.FileDescriptor getDescriptor() {
        return YarnProtos.descriptor;
    }
    
    static {
        final String[] descriptorData = { "\n\u0011yarn_protos.proto\u0012\u000bhadoop.yarn\u001a\u000eSecurity.proto\"\u0084\u0001\n\u0018SerializedExceptionProto\u0012\u000f\n\u0007message\u0018\u0001 \u0001(\t\u0012\r\n\u0005trace\u0018\u0002 \u0001(\t\u0012\u0012\n\nclass_name\u0018\u0003 \u0001(\t\u00124\n\u0005cause\u0018\u0004 \u0001(\u000b2%.hadoop.yarn.SerializedExceptionProto\";\n\u0012ApplicationIdProto\u0012\n\n\u0002id\u0018\u0001 \u0001(\u0005\u0012\u0019\n\u0011cluster_timestamp\u0018\u0002 \u0001(\u0003\"g\n\u0019ApplicationAttemptIdProto\u00127\n\u000eapplication_id\u0018\u0001 \u0001(\u000b2\u001f.hadoop.yarn.ApplicationIdProto\u0012\u0011\n\tattemptId\u0018\u0002 \u0001(\u0005\"\u008f\u0001\n\u0010ContainerIdProto\u0012/\n\u0006app_id\u0018\u0001 \u0001(\u000b2\u001f.hadoop.yarn", ".ApplicationIdProto\u0012>\n\u000eapp_attempt_id\u0018\u0002 \u0001(\u000b2&.hadoop.yarn.ApplicationAttemptIdProto\u0012\n\n\u0002id\u0018\u0003 \u0001(\u0003\"6\n\rResourceProto\u0012\u000e\n\u0006memory\u0018\u0001 \u0001(\u0005\u0012\u0015\n\rvirtual_cores\u0018\u0002 \u0001(\u0005\"`\n\u0013ResourceOptionProto\u0012,\n\bresource\u0018\u0001 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012\u001b\n\u0013over_commit_timeout\u0018\u0002 \u0001(\u0005\"|\n\u0014NodeResourceMapProto\u0012)\n\u0007node_id\u0018\u0001 \u0001(\u000b2\u0018.hadoop.yarn.NodeIdProto\u00129\n\u000fresource_option\u0018\u0002 \u0001(\u000b2 .hadoop.yarn.ResourceOptionProto\"!\n\rPriorityProto\u0012\u0010\n\bprio", "rity\u0018\u0001 \u0001(\u0005\"\u0090\u0002\n\u000eContainerProto\u0012)\n\u0002id\u0018\u0001 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\u0012(\n\u0006nodeId\u0018\u0002 \u0001(\u000b2\u0018.hadoop.yarn.NodeIdProto\u0012\u0019\n\u0011node_http_address\u0018\u0003 \u0001(\t\u0012,\n\bresource\u0018\u0004 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012,\n\bpriority\u0018\u0005 \u0001(\u000b2\u001a.hadoop.yarn.PriorityProto\u00122\n\u000fcontainer_token\u0018\u0006 \u0001(\u000b2\u0019.hadoop.common.TokenProto\"\u0088\u0003\n\u0014ContainerReportProto\u00123\n\fcontainer_id\u0018\u0001 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\u0012,\n\bresource\u0018\u0002 \u0001(\u000b2\u001a.hadoop.yarn.Reso", "urceProto\u0012)\n\u0007node_id\u0018\u0003 \u0001(\u000b2\u0018.hadoop.yarn.NodeIdProto\u0012,\n\bpriority\u0018\u0004 \u0001(\u000b2\u001a.hadoop.yarn.PriorityProto\u0012\u0015\n\rcreation_time\u0018\u0005 \u0001(\u0003\u0012\u0013\n\u000bfinish_time\u0018\u0006 \u0001(\u0003\u0012\u001d\n\u0010diagnostics_info\u0018\u0007 \u0001(\t:\u0003N/A\u0012\u000f\n\u0007log_url\u0018\b \u0001(\t\u0012\u001d\n\u0015container_exit_status\u0018\t \u0001(\u0005\u00129\n\u000fcontainer_state\u0018\n \u0001(\u000e2 .hadoop.yarn.ContainerStateProto\"V\n\bURLProto\u0012\u000e\n\u0006scheme\u0018\u0001 \u0001(\t\u0012\f\n\u0004host\u0018\u0002 \u0001(\t\u0012\f\n\u0004port\u0018\u0003 \u0001(\u0005\u0012\f\n\u0004file\u0018\u0004 \u0001(\t\u0012\u0010\n\buserInfo\u0018\u0005 \u0001(\t\"\u00e1\u0001\n\u0012LocalResourceProto\u0012'\n\bresou", "rce\u0018\u0001 \u0001(\u000b2\u0015.hadoop.yarn.URLProto\u0012\f\n\u0004size\u0018\u0002 \u0001(\u0003\u0012\u0011\n\ttimestamp\u0018\u0003 \u0001(\u0003\u00121\n\u0004type\u0018\u0004 \u0001(\u000e2#.hadoop.yarn.LocalResourceTypeProto\u0012=\n\nvisibility\u0018\u0005 \u0001(\u000e2).hadoop.yarn.LocalResourceVisibilityProto\u0012\u000f\n\u0007pattern\u0018\u0006 \u0001(\t\"´\u0002\n#ApplicationResourceUsageReportProto\u0012\u001b\n\u0013num_used_containers\u0018\u0001 \u0001(\u0005\u0012\u001f\n\u0017num_reserved_containers\u0018\u0002 \u0001(\u0005\u00122\n\u000eused_resources\u0018\u0003 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u00126\n\u0012reserved_resources\u0018\u0004 \u0001(\u000b2\u001a.hadoop.yarn.Resourc", "eProto\u00124\n\u0010needed_resources\u0018\u0005 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012\u0016\n\u000ememory_seconds\u0018\u0006 \u0001(\u0003\u0012\u0015\n\rvcore_seconds\u0018\u0007 \u0001(\u0003\"\u00e8\u0005\n\u0016ApplicationReportProto\u00126\n\rapplicationId\u0018\u0001 \u0001(\u000b2\u001f.hadoop.yarn.ApplicationIdProto\u0012\f\n\u0004user\u0018\u0002 \u0001(\t\u0012\r\n\u0005queue\u0018\u0003 \u0001(\t\u0012\f\n\u0004name\u0018\u0004 \u0001(\t\u0012\f\n\u0004host\u0018\u0005 \u0001(\t\u0012\u0010\n\brpc_port\u0018\u0006 \u0001(\u0005\u00125\n\u0012client_to_am_token\u0018\u0007 \u0001(\u000b2\u0019.hadoop.common.TokenProto\u0012F\n\u0016yarn_application_state\u0018\b \u0001(\u000e2&.hadoop.yarn.YarnApplicationStateProto\u0012\u0013\n\u000btrac", "kingUrl\u0018\t \u0001(\t\u0012\u0018\n\u000bdiagnostics\u0018\n \u0001(\t:\u0003N/A\u0012\u0011\n\tstartTime\u0018\u000b \u0001(\u0003\u0012\u0012\n\nfinishTime\u0018\f \u0001(\u0003\u0012J\n\u0018final_application_status\u0018\r \u0001(\u000e2(.hadoop.yarn.FinalApplicationStatusProto\u0012L\n\u0012app_resource_Usage\u0018\u000e \u0001(\u000b20.hadoop.yarn.ApplicationResourceUsageReportProto\u0012\u001b\n\u0013originalTrackingUrl\u0018\u000f \u0001(\t\u0012K\n\u001bcurrentApplicationAttemptId\u0018\u0010 \u0001(\u000b2&.hadoop.yarn.ApplicationAttemptIdProto\u0012\u0010\n\bprogress\u0018\u0011 \u0001(\u0002\u0012\u0017\n\u000fapplicationType\u0018\u0012 \u0001(\t\u0012.\n\u000bam_rm_token\u0018\u0013 \u0001", "(\u000b2\u0019.hadoop.common.TokenProto\u0012\u0017\n\u000fapplicationTags\u0018\u0014 \u0003(\t\"\u00e5\u0002\n\u001dApplicationAttemptReportProto\u0012F\n\u0016application_attempt_id\u0018\u0001 \u0001(\u000b2&.hadoop.yarn.ApplicationAttemptIdProto\u0012\f\n\u0004host\u0018\u0002 \u0001(\t\u0012\u0010\n\brpc_port\u0018\u0003 \u0001(\u0005\u0012\u0014\n\ftracking_url\u0018\u0004 \u0001(\t\u0012\u0018\n\u000bdiagnostics\u0018\u0005 \u0001(\t:\u0003N/A\u0012U\n\u001eyarn_application_attempt_state\u0018\u0006 \u0001(\u000e2-.hadoop.yarn.YarnApplicationAttemptStateProto\u00126\n\u000fam_container_id\u0018\u0007 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\u0012\u001d\n\u0015original_trac", "king_url\u0018\b \u0001(\t\")\n\u000bNodeIdProto\u0012\f\n\u0004host\u0018\u0001 \u0001(\t\u0012\f\n\u0004port\u0018\u0002 \u0001(\u0005\"\u00d1\u0002\n\u000fNodeReportProto\u0012(\n\u0006nodeId\u0018\u0001 \u0001(\u000b2\u0018.hadoop.yarn.NodeIdProto\u0012\u0013\n\u000bhttpAddress\u0018\u0002 \u0001(\t\u0012\u0010\n\brackName\u0018\u0003 \u0001(\t\u0012(\n\u0004used\u0018\u0004 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012.\n\ncapability\u0018\u0005 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012\u0015\n\rnumContainers\u0018\u0006 \u0001(\u0005\u0012/\n\nnode_state\u0018\u0007 \u0001(\u000e2\u001b.hadoop.yarn.NodeStateProto\u0012\u0015\n\rhealth_report\u0018\b \u0001(\t\u0012\u001f\n\u0017last_health_report_time\u0018\t \u0001(\u0003\u0012\u0013\n\u000bnode_labels\u0018\n \u0003(\t\"S\n", "\u0013NodeIdToLabelsProto\u0012(\n\u0006nodeId\u0018\u0001 \u0001(\u000b2\u0018.hadoop.yarn.NodeIdProto\u0012\u0012\n\nnodeLabels\u0018\u0002 \u0003(\t\"\u00e0\u0001\n\u0014ResourceRequestProto\u0012,\n\bpriority\u0018\u0001 \u0001(\u000b2\u001a.hadoop.yarn.PriorityProto\u0012\u0015\n\rresource_name\u0018\u0002 \u0001(\t\u0012.\n\ncapability\u0018\u0003 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012\u0016\n\u000enum_containers\u0018\u0004 \u0001(\u0005\u0012\u001c\n\u000erelax_locality\u0018\u0005 \u0001(\b:\u0004true\u0012\u001d\n\u0015node_label_expression\u0018\u0006 \u0001(\t\"\u0094\u0001\n\u0016PreemptionMessageProto\u0012B\n\u000estrictContract\u0018\u0001 \u0001(\u000b2*.hadoop.yarn.StrictPreemptionContractP", "roto\u00126\n\bcontract\u0018\u0002 \u0001(\u000b2$.hadoop.yarn.PreemptionContractProto\"Y\n\u001dStrictPreemptionContractProto\u00128\n\tcontainer\u0018\u0001 \u0003(\u000b2%.hadoop.yarn.PreemptionContainerProto\"\u0092\u0001\n\u0017PreemptionContractProto\u0012=\n\bresource\u0018\u0001 \u0003(\u000b2+.hadoop.yarn.PreemptionResourceRequestProto\u00128\n\tcontainer\u0018\u0002 \u0003(\u000b2%.hadoop.yarn.PreemptionContainerProto\"E\n\u0018PreemptionContainerProto\u0012)\n\u0002id\u0018\u0001 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\"U\n\u001ePreemptionResourceRequest", "Proto\u00123\n\bresource\u0018\u0001 \u0001(\u000b2!.hadoop.yarn.ResourceRequestProto\"X\n\u001dResourceBlacklistRequestProto\u0012\u001b\n\u0013blacklist_additions\u0018\u0001 \u0003(\t\u0012\u001a\n\u0012blacklist_removals\u0018\u0002 \u0003(\t\"§\u0006\n!ApplicationSubmissionContextProto\u00127\n\u000eapplication_id\u0018\u0001 \u0001(\u000b2\u001f.hadoop.yarn.ApplicationIdProto\u0012\u001d\n\u0010application_name\u0018\u0002 \u0001(\t:\u0003N/A\u0012\u0016\n\u0005queue\u0018\u0003 \u0001(\t:\u0007default\u0012,\n\bpriority\u0018\u0004 \u0001(\u000b2\u001a.hadoop.yarn.PriorityProto\u0012C\n\u0011am_container_spec\u0018\u0005 \u0001(\u000b2(.hadoop.yarn.ContainerLaunc", "hContextProto\u0012)\n\u001bcancel_tokens_when_complete\u0018\u0006 \u0001(\b:\u0004true\u0012\u001b\n\funmanaged_am\u0018\u0007 \u0001(\b:\u0005false\u0012\u0019\n\u000emaxAppAttempts\u0018\b \u0001(\u0005:\u00010\u0012,\n\bresource\u0018\t \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012\u001d\n\u000fapplicationType\u0018\n \u0001(\t:\u0004YARN\u0012:\n+keep_containers_across_application_attempts\u0018\u000b \u0001(\b:\u0005false\u0012\u0017\n\u000fapplicationTags\u0018\f \u0003(\t\u0012.\n\"attempt_failures_validity_interval\u0018\r \u0001(\u0003:\u0002-1\u0012H\n\u0017log_aggregation_context\u0018\u000e \u0001(\u000b2'.hadoop.yarn.LogAggregationContextProto\u00127\n\u000e", "reservation_id\u0018\u000f \u0001(\u000b2\u001f.hadoop.yarn.ReservationIdProto\u0012\u001d\n\u0015node_label_expression\u0018\u0010 \u0001(\t\u0012H\n\u001dam_container_resource_request\u0018\u0011 \u0001(\u000b2!.hadoop.yarn.ResourceRequestProto\"T\n\u001aLogAggregationContextProto\u0012\u001b\n\u000finclude_pattern\u0018\u0001 \u0001(\t:\u0002.*\u0012\u0019\n\u000fexclude_pattern\u0018\u0002 \u0001(\t:\u0000\"e\n\u0016ApplicationACLMapProto\u0012;\n\naccessType\u0018\u0001 \u0001(\u000e2'.hadoop.yarn.ApplicationAccessTypeProto\u0012\u000e\n\u0003acl\u0018\u0002 \u0001(\t:\u0001 \"4\n\u0017YarnClusterMetricsProto\u0012\u0019\n\u0011num_node_managers\u0018\u0001 \u0001(", "\u0005\"\u00c3\u0002\n\u000eQueueInfoProto\u0012\u0011\n\tqueueName\u0018\u0001 \u0001(\t\u0012\u0010\n\bcapacity\u0018\u0002 \u0001(\u0002\u0012\u0017\n\u000fmaximumCapacity\u0018\u0003 \u0001(\u0002\u0012\u0017\n\u000fcurrentCapacity\u0018\u0004 \u0001(\u0002\u0012+\n\u0005state\u0018\u0005 \u0001(\u000e2\u001c.hadoop.yarn.QueueStateProto\u00120\n\u000bchildQueues\u0018\u0006 \u0003(\u000b2\u001b.hadoop.yarn.QueueInfoProto\u00129\n\fapplications\u0018\u0007 \u0003(\u000b2#.hadoop.yarn.ApplicationReportProto\u0012\u001c\n\u0014accessibleNodeLabels\u0018\b \u0003(\t\u0012\"\n\u001adefaultNodeLabelExpression\u0018\t \u0001(\t\"X\n\u0015QueueUserACLInfoProto\u0012\u0011\n\tqueueName\u0018\u0001 \u0001(\t\u0012,\n\buserAcls\u0018\u0002 \u0003(\u000e2\u001a.hadoop.y", "arn.QueueACLProto\";\n\u0012ReservationIdProto\u0012\n\n\u0002id\u0018\u0001 \u0001(\u0003\u0012\u0019\n\u0011cluster_timestamp\u0018\u0002 \u0001(\u0003\"\u0092\u0001\n\u0017ReservationRequestProto\u0012.\n\ncapability\u0018\u0001 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u0012\u0019\n\u000enum_containers\u0018\u0002 \u0001(\u0005:\u00011\u0012\u0016\n\u000bconcurrency\u0018\u0003 \u0001(\u0005:\u00011\u0012\u0014\n\bduration\u0018\u0004 \u0001(\u0003:\u0002-1\"¬\u0001\n\u0018ReservationRequestsProto\u0012C\n\u0015reservation_resources\u0018\u0001 \u0003(\u000b2$.hadoop.yarn.ReservationRequestProto\u0012K\n\u000binterpreter\u0018\u0002 \u0001(\u000e2/.hadoop.yarn.ReservationRequestInterpreterProto:\u0005R_A", "LL\"\u009e\u0001\n\u001aReservationDefinitionProto\u0012C\n\u0014reservation_requests\u0018\u0001 \u0001(\u000b2%.hadoop.yarn.ReservationRequestsProto\u0012\u000f\n\u0007arrival\u0018\u0002 \u0001(\u0003\u0012\u0010\n\bdeadline\u0018\u0003 \u0001(\u0003\u0012\u0018\n\u0010reservation_name\u0018\u0004 \u0001(\t\"¯\u0002\n\u001bContainerLaunchContextProto\u0012@\n\u000elocalResources\u0018\u0001 \u0003(\u000b2(.hadoop.yarn.StringLocalResourceMapProto\u0012\u000e\n\u0006tokens\u0018\u0002 \u0001(\f\u00126\n\fservice_data\u0018\u0003 \u0003(\u000b2 .hadoop.yarn.StringBytesMapProto\u00126\n\u000benvironment\u0018\u0004 \u0003(\u000b2!.hadoop.yarn.StringStringMapProto\u0012\u000f\n\u0007command", "\u0018\u0005 \u0003(\t\u0012=\n\u0010application_ACLs\u0018\u0006 \u0003(\u000b2#.hadoop.yarn.ApplicationACLMapProto\"²\u0001\n\u0014ContainerStatusProto\u00123\n\fcontainer_id\u0018\u0001 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\u0012/\n\u0005state\u0018\u0002 \u0001(\u000e2 .hadoop.yarn.ContainerStateProto\u0012\u0018\n\u000bdiagnostics\u0018\u0003 \u0001(\t:\u0003N/A\u0012\u001a\n\u000bexit_status\u0018\u0004 \u0001(\u0005:\u0005-1000\"\u008c\u0001\n%ContainerResourceIncreaseRequestProto\u00123\n\fcontainer_id\u0018\u0001 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\u0012.\n\ncapability\u0018\u0002 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\"¹\u0001\n\u001eCo", "ntainerResourceIncreaseProto\u00123\n\fcontainer_id\u0018\u0001 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\u0012.\n\ncapability\u0018\u0002 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\u00122\n\u000fcontainer_token\u0018\u0003 \u0001(\u000b2\u0019.hadoop.common.TokenProto\"\u0085\u0001\n\u001eContainerResourceDecreaseProto\u00123\n\fcontainer_id\u0018\u0001 \u0001(\u000b2\u001d.hadoop.yarn.ContainerIdProto\u0012.\n\ncapability\u0018\u0002 \u0001(\u000b2\u001a.hadoop.yarn.ResourceProto\"Z\n\u001bStringLocalResourceMapProto\u0012\u000b\n\u0003key\u0018\u0001 \u0001(\t\u0012.\n\u0005value\u0018\u0002 \u0001(\u000b2\u001f.hadoop.yarn.LocalReso", "urceProto\"2\n\u0014StringStringMapProto\u0012\u000b\n\u0003key\u0018\u0001 \u0001(\t\u0012\r\n\u0005value\u0018\u0002 \u0001(\t\"1\n\u0013StringBytesMapProto\u0012\u000b\n\u0003key\u0018\u0001 \u0001(\t\u0012\r\n\u0005value\u0018\u0002 \u0001(\f*?\n\u0013ContainerStateProto\u0012\t\n\u0005C_NEW\u0010\u0001\u0012\r\n\tC_RUNNING\u0010\u0002\u0012\u000e\n\nC_COMPLETE\u0010\u0003*\u0084\u0001\n\u0019YarnApplicationStateProto\u0012\u0007\n\u0003NEW\u0010\u0001\u0012\u000e\n\nNEW_SAVING\u0010\u0002\u0012\r\n\tSUBMITTED\u0010\u0003\u0012\f\n\bACCEPTED\u0010\u0004\u0012\u000b\n\u0007RUNNING\u0010\u0005\u0012\f\n\bFINISHED\u0010\u0006\u0012\n\n\u0006FAILED\u0010\u0007\u0012\n\n\u0006KILLED\u0010\b*\u00c2\u0002\n YarnApplicationAttemptStateProto\u0012\u0013\n\u000fAPP_ATTEMPT_NEW\u0010\u0001\u0012\u0019\n\u0015APP_ATTEMPT_SUBMITTED\u0010\u0002\u0012\u0019\n", "\u0015APP_ATTEMPT_SCHEDULED\u0010\u0003\u0012 \n\u001cAPP_ATTEMPT_ALLOCATED_SAVING\u0010\u0004\u0012\u0019\n\u0015APP_ATTEMPT_ALLOCATED\u0010\u0005\u0012\u0018\n\u0014APP_ATTEMPT_LAUNCHED\u0010\u0006\u0012\u0016\n\u0012APP_ATTEMPT_FAILED\u0010\u0007\u0012\u0017\n\u0013APP_ATTEMPT_RUNNING\u0010\b\u0012\u0019\n\u0015APP_ATTEMPT_FINISHING\u0010\t\u0012\u0018\n\u0014APP_ATTEMPT_FINISHED\u0010\n\u0012\u0016\n\u0012APP_ATTEMPT_KILLED\u0010\u000b*c\n\u001bFinalApplicationStatusProto\u0012\u0011\n\rAPP_UNDEFINED\u0010\u0000\u0012\u0011\n\rAPP_SUCCEEDED\u0010\u0001\u0012\u000e\n\nAPP_FAILED\u0010\u0002\u0012\u000e\n\nAPP_KILLED\u0010\u0003*H\n\u001cLocalResourceVisibilityProto\u0012\n\n\u0006PUBLIC\u0010\u0001\u0012\u000b\n\u0007PRIVATE\u0010\u0002\u0012\u000f\n\u000bA", "PPLICATION\u0010\u0003*<\n\u0016LocalResourceTypeProto\u0012\u000b\n\u0007ARCHIVE\u0010\u0001\u0012\b\n\u0004FILE\u0010\u0002\u0012\u000b\n\u0007PATTERN\u0010\u0003*s\n\u000eNodeStateProto\u0012\n\n\u0006NS_NEW\u0010\u0001\u0012\u000e\n\nNS_RUNNING\u0010\u0002\u0012\u0010\n\fNS_UNHEALTHY\u0010\u0003\u0012\u0015\n\u0011NS_DECOMMISSIONED\u0010\u0004\u0012\u000b\n\u0007NS_LOST\u0010\u0005\u0012\u000f\n\u000bNS_REBOOTED\u0010\u0006*0\n\u000eAMCommandProto\u0012\r\n\tAM_RESYNC\u0010\u0001\u0012\u000f\n\u000bAM_SHUTDOWN\u0010\u0002*N\n\u001aApplicationAccessTypeProto\u0012\u0016\n\u0012APPACCESS_VIEW_APP\u0010\u0001\u0012\u0018\n\u0014APPACCESS_MODIFY_APP\u0010\u0002*/\n\u000fQueueStateProto\u0012\r\n\tQ_STOPPED\u0010\u0001\u0012\r\n\tQ_RUNNING\u0010\u0002*H\n\rQueueACLProto\u0012\u001c\n\u0018QACL_SUBM", "IT_APPLICATIONS\u0010\u0001\u0012\u0019\n\u0015QACL_ADMINISTER_QUEUE\u0010\u0002*[\n\"ReservationRequestInterpreterProto\u0012\t\n\u0005R_ANY\u0010\u0000\u0012\t\n\u0005R_ALL\u0010\u0001\u0012\u000b\n\u0007R_ORDER\u0010\u0002\u0012\u0012\n\u000eR_ORDER_NO_GAP\u0010\u0003*n\n\u0018ContainerExitStatusProto\u0012\u000b\n\u0007SUCCESS\u0010\u0000\u0012\u0014\n\u0007INVALID\u0010\u0098\u00f8\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u0001\u0012\u0014\n\u0007ABORTED\u0010\u009c\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u0001\u0012\u0019\n\fDISKS_FAILED\u0010\u009b\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u0001B0\n\u001corg.apache.hadoop.yarn.protoB\nYarnProtos\u0088\u0001\u0001 \u0001\u0001" };
        final Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            @Override
            public ExtensionRegistry assignDescriptors(final Descriptors.FileDescriptor root) {
                YarnProtos.descriptor = root;
                YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(0);
                YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_descriptor, new String[] { "Message", "Trace", "ClassName", "Cause" });
                YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(1);
                YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_descriptor, new String[] { "Id", "ClusterTimestamp" });
                YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(2);
                YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_descriptor, new String[] { "ApplicationId", "AttemptId" });
                YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(3);
                YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_descriptor, new String[] { "AppId", "AppAttemptId", "Id" });
                YarnProtos.internal_static_hadoop_yarn_ResourceProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(4);
                YarnProtos.internal_static_hadoop_yarn_ResourceProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ResourceProto_descriptor, new String[] { "Memory", "VirtualCores" });
                YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(5);
                YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_descriptor, new String[] { "Resource", "OverCommitTimeout" });
                YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(6);
                YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_descriptor, new String[] { "NodeId", "ResourceOption" });
                YarnProtos.internal_static_hadoop_yarn_PriorityProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(7);
                YarnProtos.internal_static_hadoop_yarn_PriorityProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_PriorityProto_descriptor, new String[] { "Priority" });
                YarnProtos.internal_static_hadoop_yarn_ContainerProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(8);
                YarnProtos.internal_static_hadoop_yarn_ContainerProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerProto_descriptor, new String[] { "Id", "NodeId", "NodeHttpAddress", "Resource", "Priority", "ContainerToken" });
                YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(9);
                YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_descriptor, new String[] { "ContainerId", "Resource", "NodeId", "Priority", "CreationTime", "FinishTime", "DiagnosticsInfo", "LogUrl", "ContainerExitStatus", "ContainerState" });
                YarnProtos.internal_static_hadoop_yarn_URLProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(10);
                YarnProtos.internal_static_hadoop_yarn_URLProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_URLProto_descriptor, new String[] { "Scheme", "Host", "Port", "File", "UserInfo" });
                YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(11);
                YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_descriptor, new String[] { "Resource", "Size", "Timestamp", "Type", "Visibility", "Pattern" });
                YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(12);
                YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_descriptor, new String[] { "NumUsedContainers", "NumReservedContainers", "UsedResources", "ReservedResources", "NeededResources", "MemorySeconds", "VcoreSeconds" });
                YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(13);
                YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_descriptor, new String[] { "ApplicationId", "User", "Queue", "Name", "Host", "RpcPort", "ClientToAmToken", "YarnApplicationState", "TrackingUrl", "Diagnostics", "StartTime", "FinishTime", "FinalApplicationStatus", "AppResourceUsage", "OriginalTrackingUrl", "CurrentApplicationAttemptId", "Progress", "ApplicationType", "AmRmToken", "ApplicationTags" });
                YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(14);
                YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_descriptor, new String[] { "ApplicationAttemptId", "Host", "RpcPort", "TrackingUrl", "Diagnostics", "YarnApplicationAttemptState", "AmContainerId", "OriginalTrackingUrl" });
                YarnProtos.internal_static_hadoop_yarn_NodeIdProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(15);
                YarnProtos.internal_static_hadoop_yarn_NodeIdProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_NodeIdProto_descriptor, new String[] { "Host", "Port" });
                YarnProtos.internal_static_hadoop_yarn_NodeReportProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(16);
                YarnProtos.internal_static_hadoop_yarn_NodeReportProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_NodeReportProto_descriptor, new String[] { "NodeId", "HttpAddress", "RackName", "Used", "Capability", "NumContainers", "NodeState", "HealthReport", "LastHealthReportTime", "NodeLabels" });
                YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(17);
                YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_descriptor, new String[] { "NodeId", "NodeLabels" });
                YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(18);
                YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_descriptor, new String[] { "Priority", "ResourceName", "Capability", "NumContainers", "RelaxLocality", "NodeLabelExpression" });
                YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(19);
                YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_descriptor, new String[] { "StrictContract", "Contract" });
                YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(20);
                YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_descriptor, new String[] { "Container" });
                YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(21);
                YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_descriptor, new String[] { "Resource", "Container" });
                YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(22);
                YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_descriptor, new String[] { "Id" });
                YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(23);
                YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_descriptor, new String[] { "Resource" });
                YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(24);
                YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_descriptor, new String[] { "BlacklistAdditions", "BlacklistRemovals" });
                YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(25);
                YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_descriptor, new String[] { "ApplicationId", "ApplicationName", "Queue", "Priority", "AmContainerSpec", "CancelTokensWhenComplete", "UnmanagedAm", "MaxAppAttempts", "Resource", "ApplicationType", "KeepContainersAcrossApplicationAttempts", "ApplicationTags", "AttemptFailuresValidityInterval", "LogAggregationContext", "ReservationId", "NodeLabelExpression", "AmContainerResourceRequest" });
                YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(26);
                YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_descriptor, new String[] { "IncludePattern", "ExcludePattern" });
                YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(27);
                YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_descriptor, new String[] { "AccessType", "Acl" });
                YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(28);
                YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_descriptor, new String[] { "NumNodeManagers" });
                YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(29);
                YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_descriptor, new String[] { "QueueName", "Capacity", "MaximumCapacity", "CurrentCapacity", "State", "ChildQueues", "Applications", "AccessibleNodeLabels", "DefaultNodeLabelExpression" });
                YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(30);
                YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_descriptor, new String[] { "QueueName", "UserAcls" });
                YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(31);
                YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_descriptor, new String[] { "Id", "ClusterTimestamp" });
                YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(32);
                YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_descriptor, new String[] { "Capability", "NumContainers", "Concurrency", "Duration" });
                YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(33);
                YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_descriptor, new String[] { "ReservationResources", "Interpreter" });
                YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(34);
                YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_descriptor, new String[] { "ReservationRequests", "Arrival", "Deadline", "ReservationName" });
                YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(35);
                YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_descriptor, new String[] { "LocalResources", "Tokens", "ServiceData", "Environment", "Command", "ApplicationACLs" });
                YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(36);
                YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_descriptor, new String[] { "ContainerId", "State", "Diagnostics", "ExitStatus" });
                YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(37);
                YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_descriptor, new String[] { "ContainerId", "Capability" });
                YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(38);
                YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_descriptor, new String[] { "ContainerId", "Capability", "ContainerToken" });
                YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(39);
                YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_descriptor, new String[] { "ContainerId", "Capability" });
                YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(40);
                YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_descriptor, new String[] { "Key", "Value" });
                YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(41);
                YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_descriptor, new String[] { "Key", "Value" });
                YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_descriptor = YarnProtos.getDescriptor().getMessageTypes().get(42);
                YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_fieldAccessorTable = new GeneratedMessage.FieldAccessorTable(YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_descriptor, new String[] { "Key", "Value" });
                return null;
            }
        };
        Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[] { SecurityProtos.getDescriptor() }, assigner);
    }
    
    public enum ContainerStateProto implements ProtocolMessageEnum
    {
        C_NEW(0, 1), 
        C_RUNNING(1, 2), 
        C_COMPLETE(2, 3);
        
        public static final int C_NEW_VALUE = 1;
        public static final int C_RUNNING_VALUE = 2;
        public static final int C_COMPLETE_VALUE = 3;
        private static Internal.EnumLiteMap<ContainerStateProto> internalValueMap;
        private static final ContainerStateProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static ContainerStateProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return ContainerStateProto.C_NEW;
                }
                case 2: {
                    return ContainerStateProto.C_RUNNING;
                }
                case 3: {
                    return ContainerStateProto.C_COMPLETE;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<ContainerStateProto> internalGetValueMap() {
            return ContainerStateProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(0);
        }
        
        public static ContainerStateProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return ContainerStateProto.VALUES[desc.getIndex()];
        }
        
        private ContainerStateProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            ContainerStateProto.internalValueMap = new Internal.EnumLiteMap<ContainerStateProto>() {
                @Override
                public ContainerStateProto findValueByNumber(final int number) {
                    return ContainerStateProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum YarnApplicationStateProto implements ProtocolMessageEnum
    {
        NEW(0, 1), 
        NEW_SAVING(1, 2), 
        SUBMITTED(2, 3), 
        ACCEPTED(3, 4), 
        RUNNING(4, 5), 
        FINISHED(5, 6), 
        FAILED(6, 7), 
        KILLED(7, 8);
        
        public static final int NEW_VALUE = 1;
        public static final int NEW_SAVING_VALUE = 2;
        public static final int SUBMITTED_VALUE = 3;
        public static final int ACCEPTED_VALUE = 4;
        public static final int RUNNING_VALUE = 5;
        public static final int FINISHED_VALUE = 6;
        public static final int FAILED_VALUE = 7;
        public static final int KILLED_VALUE = 8;
        private static Internal.EnumLiteMap<YarnApplicationStateProto> internalValueMap;
        private static final YarnApplicationStateProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static YarnApplicationStateProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return YarnApplicationStateProto.NEW;
                }
                case 2: {
                    return YarnApplicationStateProto.NEW_SAVING;
                }
                case 3: {
                    return YarnApplicationStateProto.SUBMITTED;
                }
                case 4: {
                    return YarnApplicationStateProto.ACCEPTED;
                }
                case 5: {
                    return YarnApplicationStateProto.RUNNING;
                }
                case 6: {
                    return YarnApplicationStateProto.FINISHED;
                }
                case 7: {
                    return YarnApplicationStateProto.FAILED;
                }
                case 8: {
                    return YarnApplicationStateProto.KILLED;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<YarnApplicationStateProto> internalGetValueMap() {
            return YarnApplicationStateProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(1);
        }
        
        public static YarnApplicationStateProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return YarnApplicationStateProto.VALUES[desc.getIndex()];
        }
        
        private YarnApplicationStateProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            YarnApplicationStateProto.internalValueMap = new Internal.EnumLiteMap<YarnApplicationStateProto>() {
                @Override
                public YarnApplicationStateProto findValueByNumber(final int number) {
                    return YarnApplicationStateProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum YarnApplicationAttemptStateProto implements ProtocolMessageEnum
    {
        APP_ATTEMPT_NEW(0, 1), 
        APP_ATTEMPT_SUBMITTED(1, 2), 
        APP_ATTEMPT_SCHEDULED(2, 3), 
        APP_ATTEMPT_ALLOCATED_SAVING(3, 4), 
        APP_ATTEMPT_ALLOCATED(4, 5), 
        APP_ATTEMPT_LAUNCHED(5, 6), 
        APP_ATTEMPT_FAILED(6, 7), 
        APP_ATTEMPT_RUNNING(7, 8), 
        APP_ATTEMPT_FINISHING(8, 9), 
        APP_ATTEMPT_FINISHED(9, 10), 
        APP_ATTEMPT_KILLED(10, 11);
        
        public static final int APP_ATTEMPT_NEW_VALUE = 1;
        public static final int APP_ATTEMPT_SUBMITTED_VALUE = 2;
        public static final int APP_ATTEMPT_SCHEDULED_VALUE = 3;
        public static final int APP_ATTEMPT_ALLOCATED_SAVING_VALUE = 4;
        public static final int APP_ATTEMPT_ALLOCATED_VALUE = 5;
        public static final int APP_ATTEMPT_LAUNCHED_VALUE = 6;
        public static final int APP_ATTEMPT_FAILED_VALUE = 7;
        public static final int APP_ATTEMPT_RUNNING_VALUE = 8;
        public static final int APP_ATTEMPT_FINISHING_VALUE = 9;
        public static final int APP_ATTEMPT_FINISHED_VALUE = 10;
        public static final int APP_ATTEMPT_KILLED_VALUE = 11;
        private static Internal.EnumLiteMap<YarnApplicationAttemptStateProto> internalValueMap;
        private static final YarnApplicationAttemptStateProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static YarnApplicationAttemptStateProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_NEW;
                }
                case 2: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_SUBMITTED;
                }
                case 3: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_SCHEDULED;
                }
                case 4: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_ALLOCATED_SAVING;
                }
                case 5: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_ALLOCATED;
                }
                case 6: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_LAUNCHED;
                }
                case 7: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_FAILED;
                }
                case 8: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_RUNNING;
                }
                case 9: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_FINISHING;
                }
                case 10: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_FINISHED;
                }
                case 11: {
                    return YarnApplicationAttemptStateProto.APP_ATTEMPT_KILLED;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<YarnApplicationAttemptStateProto> internalGetValueMap() {
            return YarnApplicationAttemptStateProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(2);
        }
        
        public static YarnApplicationAttemptStateProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return YarnApplicationAttemptStateProto.VALUES[desc.getIndex()];
        }
        
        private YarnApplicationAttemptStateProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            YarnApplicationAttemptStateProto.internalValueMap = new Internal.EnumLiteMap<YarnApplicationAttemptStateProto>() {
                @Override
                public YarnApplicationAttemptStateProto findValueByNumber(final int number) {
                    return YarnApplicationAttemptStateProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum FinalApplicationStatusProto implements ProtocolMessageEnum
    {
        APP_UNDEFINED(0, 0), 
        APP_SUCCEEDED(1, 1), 
        APP_FAILED(2, 2), 
        APP_KILLED(3, 3);
        
        public static final int APP_UNDEFINED_VALUE = 0;
        public static final int APP_SUCCEEDED_VALUE = 1;
        public static final int APP_FAILED_VALUE = 2;
        public static final int APP_KILLED_VALUE = 3;
        private static Internal.EnumLiteMap<FinalApplicationStatusProto> internalValueMap;
        private static final FinalApplicationStatusProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static FinalApplicationStatusProto valueOf(final int value) {
            switch (value) {
                case 0: {
                    return FinalApplicationStatusProto.APP_UNDEFINED;
                }
                case 1: {
                    return FinalApplicationStatusProto.APP_SUCCEEDED;
                }
                case 2: {
                    return FinalApplicationStatusProto.APP_FAILED;
                }
                case 3: {
                    return FinalApplicationStatusProto.APP_KILLED;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<FinalApplicationStatusProto> internalGetValueMap() {
            return FinalApplicationStatusProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(3);
        }
        
        public static FinalApplicationStatusProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return FinalApplicationStatusProto.VALUES[desc.getIndex()];
        }
        
        private FinalApplicationStatusProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            FinalApplicationStatusProto.internalValueMap = new Internal.EnumLiteMap<FinalApplicationStatusProto>() {
                @Override
                public FinalApplicationStatusProto findValueByNumber(final int number) {
                    return FinalApplicationStatusProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum LocalResourceVisibilityProto implements ProtocolMessageEnum
    {
        PUBLIC(0, 1), 
        PRIVATE(1, 2), 
        APPLICATION(2, 3);
        
        public static final int PUBLIC_VALUE = 1;
        public static final int PRIVATE_VALUE = 2;
        public static final int APPLICATION_VALUE = 3;
        private static Internal.EnumLiteMap<LocalResourceVisibilityProto> internalValueMap;
        private static final LocalResourceVisibilityProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static LocalResourceVisibilityProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return LocalResourceVisibilityProto.PUBLIC;
                }
                case 2: {
                    return LocalResourceVisibilityProto.PRIVATE;
                }
                case 3: {
                    return LocalResourceVisibilityProto.APPLICATION;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<LocalResourceVisibilityProto> internalGetValueMap() {
            return LocalResourceVisibilityProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(4);
        }
        
        public static LocalResourceVisibilityProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return LocalResourceVisibilityProto.VALUES[desc.getIndex()];
        }
        
        private LocalResourceVisibilityProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            LocalResourceVisibilityProto.internalValueMap = new Internal.EnumLiteMap<LocalResourceVisibilityProto>() {
                @Override
                public LocalResourceVisibilityProto findValueByNumber(final int number) {
                    return LocalResourceVisibilityProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum LocalResourceTypeProto implements ProtocolMessageEnum
    {
        ARCHIVE(0, 1), 
        FILE(1, 2), 
        PATTERN(2, 3);
        
        public static final int ARCHIVE_VALUE = 1;
        public static final int FILE_VALUE = 2;
        public static final int PATTERN_VALUE = 3;
        private static Internal.EnumLiteMap<LocalResourceTypeProto> internalValueMap;
        private static final LocalResourceTypeProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static LocalResourceTypeProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return LocalResourceTypeProto.ARCHIVE;
                }
                case 2: {
                    return LocalResourceTypeProto.FILE;
                }
                case 3: {
                    return LocalResourceTypeProto.PATTERN;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<LocalResourceTypeProto> internalGetValueMap() {
            return LocalResourceTypeProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(5);
        }
        
        public static LocalResourceTypeProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return LocalResourceTypeProto.VALUES[desc.getIndex()];
        }
        
        private LocalResourceTypeProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            LocalResourceTypeProto.internalValueMap = new Internal.EnumLiteMap<LocalResourceTypeProto>() {
                @Override
                public LocalResourceTypeProto findValueByNumber(final int number) {
                    return LocalResourceTypeProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum NodeStateProto implements ProtocolMessageEnum
    {
        NS_NEW(0, 1), 
        NS_RUNNING(1, 2), 
        NS_UNHEALTHY(2, 3), 
        NS_DECOMMISSIONED(3, 4), 
        NS_LOST(4, 5), 
        NS_REBOOTED(5, 6);
        
        public static final int NS_NEW_VALUE = 1;
        public static final int NS_RUNNING_VALUE = 2;
        public static final int NS_UNHEALTHY_VALUE = 3;
        public static final int NS_DECOMMISSIONED_VALUE = 4;
        public static final int NS_LOST_VALUE = 5;
        public static final int NS_REBOOTED_VALUE = 6;
        private static Internal.EnumLiteMap<NodeStateProto> internalValueMap;
        private static final NodeStateProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static NodeStateProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return NodeStateProto.NS_NEW;
                }
                case 2: {
                    return NodeStateProto.NS_RUNNING;
                }
                case 3: {
                    return NodeStateProto.NS_UNHEALTHY;
                }
                case 4: {
                    return NodeStateProto.NS_DECOMMISSIONED;
                }
                case 5: {
                    return NodeStateProto.NS_LOST;
                }
                case 6: {
                    return NodeStateProto.NS_REBOOTED;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<NodeStateProto> internalGetValueMap() {
            return NodeStateProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(6);
        }
        
        public static NodeStateProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return NodeStateProto.VALUES[desc.getIndex()];
        }
        
        private NodeStateProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            NodeStateProto.internalValueMap = new Internal.EnumLiteMap<NodeStateProto>() {
                @Override
                public NodeStateProto findValueByNumber(final int number) {
                    return NodeStateProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum AMCommandProto implements ProtocolMessageEnum
    {
        AM_RESYNC(0, 1), 
        AM_SHUTDOWN(1, 2);
        
        public static final int AM_RESYNC_VALUE = 1;
        public static final int AM_SHUTDOWN_VALUE = 2;
        private static Internal.EnumLiteMap<AMCommandProto> internalValueMap;
        private static final AMCommandProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static AMCommandProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return AMCommandProto.AM_RESYNC;
                }
                case 2: {
                    return AMCommandProto.AM_SHUTDOWN;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<AMCommandProto> internalGetValueMap() {
            return AMCommandProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(7);
        }
        
        public static AMCommandProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return AMCommandProto.VALUES[desc.getIndex()];
        }
        
        private AMCommandProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            AMCommandProto.internalValueMap = new Internal.EnumLiteMap<AMCommandProto>() {
                @Override
                public AMCommandProto findValueByNumber(final int number) {
                    return AMCommandProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum ApplicationAccessTypeProto implements ProtocolMessageEnum
    {
        APPACCESS_VIEW_APP(0, 1), 
        APPACCESS_MODIFY_APP(1, 2);
        
        public static final int APPACCESS_VIEW_APP_VALUE = 1;
        public static final int APPACCESS_MODIFY_APP_VALUE = 2;
        private static Internal.EnumLiteMap<ApplicationAccessTypeProto> internalValueMap;
        private static final ApplicationAccessTypeProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static ApplicationAccessTypeProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return ApplicationAccessTypeProto.APPACCESS_VIEW_APP;
                }
                case 2: {
                    return ApplicationAccessTypeProto.APPACCESS_MODIFY_APP;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<ApplicationAccessTypeProto> internalGetValueMap() {
            return ApplicationAccessTypeProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(8);
        }
        
        public static ApplicationAccessTypeProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return ApplicationAccessTypeProto.VALUES[desc.getIndex()];
        }
        
        private ApplicationAccessTypeProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            ApplicationAccessTypeProto.internalValueMap = new Internal.EnumLiteMap<ApplicationAccessTypeProto>() {
                @Override
                public ApplicationAccessTypeProto findValueByNumber(final int number) {
                    return ApplicationAccessTypeProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum QueueStateProto implements ProtocolMessageEnum
    {
        Q_STOPPED(0, 1), 
        Q_RUNNING(1, 2);
        
        public static final int Q_STOPPED_VALUE = 1;
        public static final int Q_RUNNING_VALUE = 2;
        private static Internal.EnumLiteMap<QueueStateProto> internalValueMap;
        private static final QueueStateProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static QueueStateProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return QueueStateProto.Q_STOPPED;
                }
                case 2: {
                    return QueueStateProto.Q_RUNNING;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<QueueStateProto> internalGetValueMap() {
            return QueueStateProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(9);
        }
        
        public static QueueStateProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return QueueStateProto.VALUES[desc.getIndex()];
        }
        
        private QueueStateProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            QueueStateProto.internalValueMap = new Internal.EnumLiteMap<QueueStateProto>() {
                @Override
                public QueueStateProto findValueByNumber(final int number) {
                    return QueueStateProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum QueueACLProto implements ProtocolMessageEnum
    {
        QACL_SUBMIT_APPLICATIONS(0, 1), 
        QACL_ADMINISTER_QUEUE(1, 2);
        
        public static final int QACL_SUBMIT_APPLICATIONS_VALUE = 1;
        public static final int QACL_ADMINISTER_QUEUE_VALUE = 2;
        private static Internal.EnumLiteMap<QueueACLProto> internalValueMap;
        private static final QueueACLProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static QueueACLProto valueOf(final int value) {
            switch (value) {
                case 1: {
                    return QueueACLProto.QACL_SUBMIT_APPLICATIONS;
                }
                case 2: {
                    return QueueACLProto.QACL_ADMINISTER_QUEUE;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<QueueACLProto> internalGetValueMap() {
            return QueueACLProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(10);
        }
        
        public static QueueACLProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return QueueACLProto.VALUES[desc.getIndex()];
        }
        
        private QueueACLProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            QueueACLProto.internalValueMap = new Internal.EnumLiteMap<QueueACLProto>() {
                @Override
                public QueueACLProto findValueByNumber(final int number) {
                    return QueueACLProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum ReservationRequestInterpreterProto implements ProtocolMessageEnum
    {
        R_ANY(0, 0), 
        R_ALL(1, 1), 
        R_ORDER(2, 2), 
        R_ORDER_NO_GAP(3, 3);
        
        public static final int R_ANY_VALUE = 0;
        public static final int R_ALL_VALUE = 1;
        public static final int R_ORDER_VALUE = 2;
        public static final int R_ORDER_NO_GAP_VALUE = 3;
        private static Internal.EnumLiteMap<ReservationRequestInterpreterProto> internalValueMap;
        private static final ReservationRequestInterpreterProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static ReservationRequestInterpreterProto valueOf(final int value) {
            switch (value) {
                case 0: {
                    return ReservationRequestInterpreterProto.R_ANY;
                }
                case 1: {
                    return ReservationRequestInterpreterProto.R_ALL;
                }
                case 2: {
                    return ReservationRequestInterpreterProto.R_ORDER;
                }
                case 3: {
                    return ReservationRequestInterpreterProto.R_ORDER_NO_GAP;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<ReservationRequestInterpreterProto> internalGetValueMap() {
            return ReservationRequestInterpreterProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(11);
        }
        
        public static ReservationRequestInterpreterProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return ReservationRequestInterpreterProto.VALUES[desc.getIndex()];
        }
        
        private ReservationRequestInterpreterProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            ReservationRequestInterpreterProto.internalValueMap = new Internal.EnumLiteMap<ReservationRequestInterpreterProto>() {
                @Override
                public ReservationRequestInterpreterProto findValueByNumber(final int number) {
                    return ReservationRequestInterpreterProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public enum ContainerExitStatusProto implements ProtocolMessageEnum
    {
        SUCCESS(0, 0), 
        INVALID(1, -1000), 
        ABORTED(2, -100), 
        DISKS_FAILED(3, -101);
        
        public static final int SUCCESS_VALUE = 0;
        public static final int INVALID_VALUE = -1000;
        public static final int ABORTED_VALUE = -100;
        public static final int DISKS_FAILED_VALUE = -101;
        private static Internal.EnumLiteMap<ContainerExitStatusProto> internalValueMap;
        private static final ContainerExitStatusProto[] VALUES;
        private final int index;
        private final int value;
        
        @Override
        public final int getNumber() {
            return this.value;
        }
        
        public static ContainerExitStatusProto valueOf(final int value) {
            switch (value) {
                case 0: {
                    return ContainerExitStatusProto.SUCCESS;
                }
                case -1000: {
                    return ContainerExitStatusProto.INVALID;
                }
                case -100: {
                    return ContainerExitStatusProto.ABORTED;
                }
                case -101: {
                    return ContainerExitStatusProto.DISKS_FAILED;
                }
                default: {
                    return null;
                }
            }
        }
        
        public static Internal.EnumLiteMap<ContainerExitStatusProto> internalGetValueMap() {
            return ContainerExitStatusProto.internalValueMap;
        }
        
        @Override
        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return getDescriptor().getValues().get(this.index);
        }
        
        @Override
        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }
        
        public static final Descriptors.EnumDescriptor getDescriptor() {
            return YarnProtos.getDescriptor().getEnumTypes().get(12);
        }
        
        public static ContainerExitStatusProto valueOf(final Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            return ContainerExitStatusProto.VALUES[desc.getIndex()];
        }
        
        private ContainerExitStatusProto(final int index, final int value) {
            this.index = index;
            this.value = value;
        }
        
        static {
            ContainerExitStatusProto.internalValueMap = new Internal.EnumLiteMap<ContainerExitStatusProto>() {
                @Override
                public ContainerExitStatusProto findValueByNumber(final int number) {
                    return ContainerExitStatusProto.valueOf(number);
                }
            };
            VALUES = values();
        }
    }
    
    public static final class SerializedExceptionProto extends GeneratedMessage implements SerializedExceptionProtoOrBuilder
    {
        private static final SerializedExceptionProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<SerializedExceptionProto> PARSER;
        private int bitField0_;
        public static final int MESSAGE_FIELD_NUMBER = 1;
        private Object message_;
        public static final int TRACE_FIELD_NUMBER = 2;
        private Object trace_;
        public static final int CLASS_NAME_FIELD_NUMBER = 3;
        private Object className_;
        public static final int CAUSE_FIELD_NUMBER = 4;
        private SerializedExceptionProto cause_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private SerializedExceptionProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private SerializedExceptionProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static SerializedExceptionProto getDefaultInstance() {
            return SerializedExceptionProto.defaultInstance;
        }
        
        @Override
        public SerializedExceptionProto getDefaultInstanceForType() {
            return SerializedExceptionProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private SerializedExceptionProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.message_ = input.readBytes();
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.trace_ = input.readBytes();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x4;
                            this.className_ = input.readBytes();
                            continue;
                        }
                        case 34: {
                            Builder subBuilder = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                subBuilder = this.cause_.toBuilder();
                            }
                            this.cause_ = input.readMessage(SerializedExceptionProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.cause_);
                                this.cause_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_fieldAccessorTable.ensureFieldAccessorsInitialized(SerializedExceptionProto.class, Builder.class);
        }
        
        @Override
        public Parser<SerializedExceptionProto> getParserForType() {
            return SerializedExceptionProto.PARSER;
        }
        
        @Override
        public boolean hasMessage() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getMessage() {
            final Object ref = this.message_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.message_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getMessageBytes() {
            final Object ref = this.message_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.message_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasTrace() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getTrace() {
            final Object ref = this.trace_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.trace_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getTraceBytes() {
            final Object ref = this.trace_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.trace_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasClassName() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public String getClassName() {
            final Object ref = this.className_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.className_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getClassNameBytes() {
            final Object ref = this.className_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.className_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasCause() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public SerializedExceptionProto getCause() {
            return this.cause_;
        }
        
        @Override
        public SerializedExceptionProtoOrBuilder getCauseOrBuilder() {
            return this.cause_;
        }
        
        private void initFields() {
            this.message_ = "";
            this.trace_ = "";
            this.className_ = "";
            this.cause_ = getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getMessageBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getTraceBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeBytes(3, this.getClassNameBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeMessage(4, this.cause_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getMessageBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getTraceBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeBytesSize(3, this.getClassNameBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeMessageSize(4, this.cause_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof SerializedExceptionProto)) {
                return super.equals(obj);
            }
            final SerializedExceptionProto other = (SerializedExceptionProto)obj;
            boolean result = true;
            result = (result && this.hasMessage() == other.hasMessage());
            if (this.hasMessage()) {
                result = (result && this.getMessage().equals(other.getMessage()));
            }
            result = (result && this.hasTrace() == other.hasTrace());
            if (this.hasTrace()) {
                result = (result && this.getTrace().equals(other.getTrace()));
            }
            result = (result && this.hasClassName() == other.hasClassName());
            if (this.hasClassName()) {
                result = (result && this.getClassName().equals(other.getClassName()));
            }
            result = (result && this.hasCause() == other.hasCause());
            if (this.hasCause()) {
                result = (result && this.getCause().equals(other.getCause()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasMessage()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getMessage().hashCode();
            }
            if (this.hasTrace()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getTrace().hashCode();
            }
            if (this.hasClassName()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getClassName().hashCode();
            }
            if (this.hasCause()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getCause().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static SerializedExceptionProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return SerializedExceptionProto.PARSER.parseFrom(data);
        }
        
        public static SerializedExceptionProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return SerializedExceptionProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static SerializedExceptionProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return SerializedExceptionProto.PARSER.parseFrom(data);
        }
        
        public static SerializedExceptionProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return SerializedExceptionProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static SerializedExceptionProto parseFrom(final InputStream input) throws IOException {
            return SerializedExceptionProto.PARSER.parseFrom(input);
        }
        
        public static SerializedExceptionProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return SerializedExceptionProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static SerializedExceptionProto parseDelimitedFrom(final InputStream input) throws IOException {
            return SerializedExceptionProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static SerializedExceptionProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return SerializedExceptionProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static SerializedExceptionProto parseFrom(final CodedInputStream input) throws IOException {
            return SerializedExceptionProto.PARSER.parseFrom(input);
        }
        
        public static SerializedExceptionProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return SerializedExceptionProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final SerializedExceptionProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            SerializedExceptionProto.PARSER = new AbstractParser<SerializedExceptionProto>() {
                @Override
                public SerializedExceptionProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new SerializedExceptionProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new SerializedExceptionProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements SerializedExceptionProtoOrBuilder
        {
            private int bitField0_;
            private Object message_;
            private Object trace_;
            private Object className_;
            private SerializedExceptionProto cause_;
            private SingleFieldBuilder<SerializedExceptionProto, Builder, SerializedExceptionProtoOrBuilder> causeBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_fieldAccessorTable.ensureFieldAccessorsInitialized(SerializedExceptionProto.class, Builder.class);
            }
            
            private Builder() {
                this.message_ = "";
                this.trace_ = "";
                this.className_ = "";
                this.cause_ = SerializedExceptionProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.message_ = "";
                this.trace_ = "";
                this.className_ = "";
                this.cause_ = SerializedExceptionProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (SerializedExceptionProto.alwaysUseFieldBuilders) {
                    this.getCauseFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.message_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.trace_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.className_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.causeBuilder_ == null) {
                    this.cause_ = SerializedExceptionProto.getDefaultInstance();
                }
                else {
                    this.causeBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_SerializedExceptionProto_descriptor;
            }
            
            @Override
            public SerializedExceptionProto getDefaultInstanceForType() {
                return SerializedExceptionProto.getDefaultInstance();
            }
            
            @Override
            public SerializedExceptionProto build() {
                final SerializedExceptionProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public SerializedExceptionProto buildPartial() {
                final SerializedExceptionProto result = new SerializedExceptionProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.message_ = this.message_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.trace_ = this.trace_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.className_ = this.className_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                if (this.causeBuilder_ == null) {
                    result.cause_ = this.cause_;
                }
                else {
                    result.cause_ = this.causeBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof SerializedExceptionProto) {
                    return this.mergeFrom((SerializedExceptionProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final SerializedExceptionProto other) {
                if (other == SerializedExceptionProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasMessage()) {
                    this.bitField0_ |= 0x1;
                    this.message_ = other.message_;
                    this.onChanged();
                }
                if (other.hasTrace()) {
                    this.bitField0_ |= 0x2;
                    this.trace_ = other.trace_;
                    this.onChanged();
                }
                if (other.hasClassName()) {
                    this.bitField0_ |= 0x4;
                    this.className_ = other.className_;
                    this.onChanged();
                }
                if (other.hasCause()) {
                    this.mergeCause(other.getCause());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                SerializedExceptionProto parsedMessage = null;
                try {
                    parsedMessage = SerializedExceptionProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (SerializedExceptionProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasMessage() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getMessage() {
                final Object ref = this.message_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.message_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getMessageBytes() {
                final Object ref = this.message_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.message_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setMessage(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.message_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearMessage() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.message_ = SerializedExceptionProto.getDefaultInstance().getMessage();
                this.onChanged();
                return this;
            }
            
            public Builder setMessageBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.message_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasTrace() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getTrace() {
                final Object ref = this.trace_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.trace_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getTraceBytes() {
                final Object ref = this.trace_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.trace_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setTrace(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.trace_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearTrace() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.trace_ = SerializedExceptionProto.getDefaultInstance().getTrace();
                this.onChanged();
                return this;
            }
            
            public Builder setTraceBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.trace_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasClassName() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public String getClassName() {
                final Object ref = this.className_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.className_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getClassNameBytes() {
                final Object ref = this.className_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.className_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setClassName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.className_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearClassName() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.className_ = SerializedExceptionProto.getDefaultInstance().getClassName();
                this.onChanged();
                return this;
            }
            
            public Builder setClassNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.className_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasCause() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public SerializedExceptionProto getCause() {
                if (this.causeBuilder_ == null) {
                    return this.cause_;
                }
                return this.causeBuilder_.getMessage();
            }
            
            public Builder setCause(final SerializedExceptionProto value) {
                if (this.causeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.cause_ = value;
                    this.onChanged();
                }
                else {
                    this.causeBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setCause(final Builder builderForValue) {
                if (this.causeBuilder_ == null) {
                    this.cause_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.causeBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergeCause(final SerializedExceptionProto value) {
                if (this.causeBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 0x8 && this.cause_ != SerializedExceptionProto.getDefaultInstance()) {
                        this.cause_ = SerializedExceptionProto.newBuilder(this.cause_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.cause_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.causeBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder clearCause() {
                if (this.causeBuilder_ == null) {
                    this.cause_ = SerializedExceptionProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.causeBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public Builder getCauseBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return this.getCauseFieldBuilder().getBuilder();
            }
            
            @Override
            public SerializedExceptionProtoOrBuilder getCauseOrBuilder() {
                if (this.causeBuilder_ != null) {
                    return this.causeBuilder_.getMessageOrBuilder();
                }
                return this.cause_;
            }
            
            private SingleFieldBuilder<SerializedExceptionProto, Builder, SerializedExceptionProtoOrBuilder> getCauseFieldBuilder() {
                if (this.causeBuilder_ == null) {
                    this.causeBuilder_ = new SingleFieldBuilder<SerializedExceptionProto, Builder, SerializedExceptionProtoOrBuilder>(this.cause_, this.getParentForChildren(), this.isClean());
                    this.cause_ = null;
                }
                return this.causeBuilder_;
            }
        }
    }
    
    public static final class ApplicationIdProto extends GeneratedMessage implements ApplicationIdProtoOrBuilder
    {
        private static final ApplicationIdProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ApplicationIdProto> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private int id_;
        public static final int CLUSTER_TIMESTAMP_FIELD_NUMBER = 2;
        private long clusterTimestamp_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ApplicationIdProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ApplicationIdProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ApplicationIdProto getDefaultInstance() {
            return ApplicationIdProto.defaultInstance;
        }
        
        @Override
        public ApplicationIdProto getDefaultInstanceForType() {
            return ApplicationIdProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ApplicationIdProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            this.bitField0_ |= 0x1;
                            this.id_ = input.readInt32();
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.clusterTimestamp_ = input.readInt64();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationIdProto.class, Builder.class);
        }
        
        @Override
        public Parser<ApplicationIdProto> getParserForType() {
            return ApplicationIdProto.PARSER;
        }
        
        @Override
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public int getId() {
            return this.id_;
        }
        
        @Override
        public boolean hasClusterTimestamp() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public long getClusterTimestamp() {
            return this.clusterTimestamp_;
        }
        
        private void initFields() {
            this.id_ = 0;
            this.clusterTimestamp_ = 0L;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeInt32(1, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt64(2, this.clusterTimestamp_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeInt32Size(1, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt64Size(2, this.clusterTimestamp_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ApplicationIdProto)) {
                return super.equals(obj);
            }
            final ApplicationIdProto other = (ApplicationIdProto)obj;
            boolean result = true;
            result = (result && this.hasId() == other.hasId());
            if (this.hasId()) {
                result = (result && this.getId() == other.getId());
            }
            result = (result && this.hasClusterTimestamp() == other.hasClusterTimestamp());
            if (this.hasClusterTimestamp()) {
                result = (result && this.getClusterTimestamp() == other.getClusterTimestamp());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getId();
            }
            if (this.hasClusterTimestamp()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + AbstractMessage.hashLong(this.getClusterTimestamp());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ApplicationIdProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ApplicationIdProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationIdProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationIdProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ApplicationIdProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationIdProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationIdProto parseFrom(final InputStream input) throws IOException {
            return ApplicationIdProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationIdProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ApplicationIdProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ApplicationIdProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ApplicationIdProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationIdProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ApplicationIdProto parseFrom(final CodedInputStream input) throws IOException {
            return ApplicationIdProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationIdProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ApplicationIdProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ApplicationIdProto.PARSER = new AbstractParser<ApplicationIdProto>() {
                @Override
                public ApplicationIdProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ApplicationIdProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ApplicationIdProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ApplicationIdProtoOrBuilder
        {
            private int bitField0_;
            private int id_;
            private long clusterTimestamp_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationIdProto.class, Builder.class);
            }
            
            private Builder() {
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ApplicationIdProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.id_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.clusterTimestamp_ = 0L;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationIdProto_descriptor;
            }
            
            @Override
            public ApplicationIdProto getDefaultInstanceForType() {
                return ApplicationIdProto.getDefaultInstance();
            }
            
            @Override
            public ApplicationIdProto build() {
                final ApplicationIdProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ApplicationIdProto buildPartial() {
                final ApplicationIdProto result = new ApplicationIdProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.id_ = this.id_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.clusterTimestamp_ = this.clusterTimestamp_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ApplicationIdProto) {
                    return this.mergeFrom((ApplicationIdProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ApplicationIdProto other) {
                if (other == ApplicationIdProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasId()) {
                    this.setId(other.getId());
                }
                if (other.hasClusterTimestamp()) {
                    this.setClusterTimestamp(other.getClusterTimestamp());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ApplicationIdProto parsedMessage = null;
                try {
                    parsedMessage = ApplicationIdProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ApplicationIdProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public int getId() {
                return this.id_;
            }
            
            public Builder setId(final int value) {
                this.bitField0_ |= 0x1;
                this.id_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasClusterTimestamp() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public long getClusterTimestamp() {
                return this.clusterTimestamp_;
            }
            
            public Builder setClusterTimestamp(final long value) {
                this.bitField0_ |= 0x2;
                this.clusterTimestamp_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearClusterTimestamp() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.clusterTimestamp_ = 0L;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ApplicationAttemptIdProto extends GeneratedMessage implements ApplicationAttemptIdProtoOrBuilder
    {
        private static final ApplicationAttemptIdProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ApplicationAttemptIdProto> PARSER;
        private int bitField0_;
        public static final int APPLICATION_ID_FIELD_NUMBER = 1;
        private ApplicationIdProto applicationId_;
        public static final int ATTEMPTID_FIELD_NUMBER = 2;
        private int attemptId_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ApplicationAttemptIdProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ApplicationAttemptIdProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ApplicationAttemptIdProto getDefaultInstance() {
            return ApplicationAttemptIdProto.defaultInstance;
        }
        
        @Override
        public ApplicationAttemptIdProto getDefaultInstanceForType() {
            return ApplicationAttemptIdProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ApplicationAttemptIdProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ApplicationIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.applicationId_.toBuilder();
                            }
                            this.applicationId_ = input.readMessage(ApplicationIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.applicationId_);
                                this.applicationId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.attemptId_ = input.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationAttemptIdProto.class, Builder.class);
        }
        
        @Override
        public Parser<ApplicationAttemptIdProto> getParserForType() {
            return ApplicationAttemptIdProto.PARSER;
        }
        
        @Override
        public boolean hasApplicationId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ApplicationIdProto getApplicationId() {
            return this.applicationId_;
        }
        
        @Override
        public ApplicationIdProtoOrBuilder getApplicationIdOrBuilder() {
            return this.applicationId_;
        }
        
        @Override
        public boolean hasAttemptId() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public int getAttemptId() {
            return this.attemptId_;
        }
        
        private void initFields() {
            this.applicationId_ = ApplicationIdProto.getDefaultInstance();
            this.attemptId_ = 0;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.applicationId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt32(2, this.attemptId_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.applicationId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt32Size(2, this.attemptId_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ApplicationAttemptIdProto)) {
                return super.equals(obj);
            }
            final ApplicationAttemptIdProto other = (ApplicationAttemptIdProto)obj;
            boolean result = true;
            result = (result && this.hasApplicationId() == other.hasApplicationId());
            if (this.hasApplicationId()) {
                result = (result && this.getApplicationId().equals(other.getApplicationId()));
            }
            result = (result && this.hasAttemptId() == other.hasAttemptId());
            if (this.hasAttemptId()) {
                result = (result && this.getAttemptId() == other.getAttemptId());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasApplicationId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getApplicationId().hashCode();
            }
            if (this.hasAttemptId()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getAttemptId();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ApplicationAttemptIdProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationAttemptIdProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationAttemptIdProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationAttemptIdProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationAttemptIdProto parseFrom(final InputStream input) throws IOException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationAttemptIdProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ApplicationAttemptIdProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ApplicationAttemptIdProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ApplicationAttemptIdProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationAttemptIdProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ApplicationAttemptIdProto parseFrom(final CodedInputStream input) throws IOException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationAttemptIdProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationAttemptIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ApplicationAttemptIdProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ApplicationAttemptIdProto.PARSER = new AbstractParser<ApplicationAttemptIdProto>() {
                @Override
                public ApplicationAttemptIdProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ApplicationAttemptIdProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ApplicationAttemptIdProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ApplicationAttemptIdProtoOrBuilder
        {
            private int bitField0_;
            private ApplicationIdProto applicationId_;
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> applicationIdBuilder_;
            private int attemptId_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationAttemptIdProto.class, Builder.class);
            }
            
            private Builder() {
                this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ApplicationAttemptIdProto.alwaysUseFieldBuilders) {
                    this.getApplicationIdFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                }
                else {
                    this.applicationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.attemptId_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptIdProto_descriptor;
            }
            
            @Override
            public ApplicationAttemptIdProto getDefaultInstanceForType() {
                return ApplicationAttemptIdProto.getDefaultInstance();
            }
            
            @Override
            public ApplicationAttemptIdProto build() {
                final ApplicationAttemptIdProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ApplicationAttemptIdProto buildPartial() {
                final ApplicationAttemptIdProto result = new ApplicationAttemptIdProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.applicationIdBuilder_ == null) {
                    result.applicationId_ = this.applicationId_;
                }
                else {
                    result.applicationId_ = this.applicationIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.attemptId_ = this.attemptId_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ApplicationAttemptIdProto) {
                    return this.mergeFrom((ApplicationAttemptIdProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ApplicationAttemptIdProto other) {
                if (other == ApplicationAttemptIdProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasApplicationId()) {
                    this.mergeApplicationId(other.getApplicationId());
                }
                if (other.hasAttemptId()) {
                    this.setAttemptId(other.getAttemptId());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ApplicationAttemptIdProto parsedMessage = null;
                try {
                    parsedMessage = ApplicationAttemptIdProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ApplicationAttemptIdProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasApplicationId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ApplicationIdProto getApplicationId() {
                if (this.applicationIdBuilder_ == null) {
                    return this.applicationId_;
                }
                return this.applicationIdBuilder_.getMessage();
            }
            
            public Builder setApplicationId(final ApplicationIdProto value) {
                if (this.applicationIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.applicationId_ = value;
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setApplicationId(final ApplicationIdProto.Builder builderForValue) {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeApplicationId(final ApplicationIdProto value) {
                if (this.applicationIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.applicationId_ != ApplicationIdProto.getDefaultInstance()) {
                        this.applicationId_ = ApplicationIdProto.newBuilder(this.applicationId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.applicationId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearApplicationId() {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ApplicationIdProto.Builder getApplicationIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getApplicationIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationIdProtoOrBuilder getApplicationIdOrBuilder() {
                if (this.applicationIdBuilder_ != null) {
                    return this.applicationIdBuilder_.getMessageOrBuilder();
                }
                return this.applicationId_;
            }
            
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> getApplicationIdFieldBuilder() {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationIdBuilder_ = new SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder>(this.applicationId_, this.getParentForChildren(), this.isClean());
                    this.applicationId_ = null;
                }
                return this.applicationIdBuilder_;
            }
            
            @Override
            public boolean hasAttemptId() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public int getAttemptId() {
                return this.attemptId_;
            }
            
            public Builder setAttemptId(final int value) {
                this.bitField0_ |= 0x2;
                this.attemptId_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearAttemptId() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.attemptId_ = 0;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ContainerIdProto extends GeneratedMessage implements ContainerIdProtoOrBuilder
    {
        private static final ContainerIdProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerIdProto> PARSER;
        private int bitField0_;
        public static final int APP_ID_FIELD_NUMBER = 1;
        private ApplicationIdProto appId_;
        public static final int APP_ATTEMPT_ID_FIELD_NUMBER = 2;
        private ApplicationAttemptIdProto appAttemptId_;
        public static final int ID_FIELD_NUMBER = 3;
        private long id_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerIdProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerIdProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerIdProto getDefaultInstance() {
            return ContainerIdProto.defaultInstance;
        }
        
        @Override
        public ContainerIdProto getDefaultInstanceForType() {
            return ContainerIdProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerIdProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ApplicationIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.appId_.toBuilder();
                            }
                            this.appId_ = input.readMessage(ApplicationIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.appId_);
                                this.appId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            ApplicationAttemptIdProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.appAttemptId_.toBuilder();
                            }
                            this.appAttemptId_ = input.readMessage(ApplicationAttemptIdProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.appAttemptId_);
                                this.appAttemptId_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x4;
                            this.id_ = input.readInt64();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerIdProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerIdProto> getParserForType() {
            return ContainerIdProto.PARSER;
        }
        
        @Override
        public boolean hasAppId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ApplicationIdProto getAppId() {
            return this.appId_;
        }
        
        @Override
        public ApplicationIdProtoOrBuilder getAppIdOrBuilder() {
            return this.appId_;
        }
        
        @Override
        public boolean hasAppAttemptId() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ApplicationAttemptIdProto getAppAttemptId() {
            return this.appAttemptId_;
        }
        
        @Override
        public ApplicationAttemptIdProtoOrBuilder getAppAttemptIdOrBuilder() {
            return this.appAttemptId_;
        }
        
        @Override
        public boolean hasId() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public long getId() {
            return this.id_;
        }
        
        private void initFields() {
            this.appId_ = ApplicationIdProto.getDefaultInstance();
            this.appAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
            this.id_ = 0L;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.appId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.appAttemptId_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeInt64(3, this.id_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.appId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.appAttemptId_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeInt64Size(3, this.id_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerIdProto)) {
                return super.equals(obj);
            }
            final ContainerIdProto other = (ContainerIdProto)obj;
            boolean result = true;
            result = (result && this.hasAppId() == other.hasAppId());
            if (this.hasAppId()) {
                result = (result && this.getAppId().equals(other.getAppId()));
            }
            result = (result && this.hasAppAttemptId() == other.hasAppAttemptId());
            if (this.hasAppAttemptId()) {
                result = (result && this.getAppAttemptId().equals(other.getAppAttemptId()));
            }
            result = (result && this.hasId() == other.hasId());
            if (this.hasId()) {
                result = (result && this.getId() == other.getId());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasAppId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getAppId().hashCode();
            }
            if (this.hasAppAttemptId()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getAppAttemptId().hashCode();
            }
            if (this.hasId()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + AbstractMessage.hashLong(this.getId());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerIdProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerIdProto.PARSER.parseFrom(data);
        }
        
        public static ContainerIdProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerIdProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerIdProto.PARSER.parseFrom(data);
        }
        
        public static ContainerIdProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerIdProto parseFrom(final InputStream input) throws IOException {
            return ContainerIdProto.PARSER.parseFrom(input);
        }
        
        public static ContainerIdProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerIdProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerIdProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerIdProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerIdProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerIdProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerIdProto.PARSER.parseFrom(input);
        }
        
        public static ContainerIdProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerIdProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerIdProto.PARSER = new AbstractParser<ContainerIdProto>() {
                @Override
                public ContainerIdProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerIdProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerIdProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerIdProtoOrBuilder
        {
            private int bitField0_;
            private ApplicationIdProto appId_;
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> appIdBuilder_;
            private ApplicationAttemptIdProto appAttemptId_;
            private SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder> appAttemptIdBuilder_;
            private long id_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerIdProto.class, Builder.class);
            }
            
            private Builder() {
                this.appId_ = ApplicationIdProto.getDefaultInstance();
                this.appAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.appId_ = ApplicationIdProto.getDefaultInstance();
                this.appAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerIdProto.alwaysUseFieldBuilders) {
                    this.getAppIdFieldBuilder();
                    this.getAppAttemptIdFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.appIdBuilder_ == null) {
                    this.appId_ = ApplicationIdProto.getDefaultInstance();
                }
                else {
                    this.appIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.appAttemptIdBuilder_ == null) {
                    this.appAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                }
                else {
                    this.appAttemptIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                this.id_ = 0L;
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerIdProto_descriptor;
            }
            
            @Override
            public ContainerIdProto getDefaultInstanceForType() {
                return ContainerIdProto.getDefaultInstance();
            }
            
            @Override
            public ContainerIdProto build() {
                final ContainerIdProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerIdProto buildPartial() {
                final ContainerIdProto result = new ContainerIdProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.appIdBuilder_ == null) {
                    result.appId_ = this.appId_;
                }
                else {
                    result.appId_ = this.appIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.appAttemptIdBuilder_ == null) {
                    result.appAttemptId_ = this.appAttemptId_;
                }
                else {
                    result.appAttemptId_ = this.appAttemptIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.id_ = this.id_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerIdProto) {
                    return this.mergeFrom((ContainerIdProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerIdProto other) {
                if (other == ContainerIdProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasAppId()) {
                    this.mergeAppId(other.getAppId());
                }
                if (other.hasAppAttemptId()) {
                    this.mergeAppAttemptId(other.getAppAttemptId());
                }
                if (other.hasId()) {
                    this.setId(other.getId());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerIdProto parsedMessage = null;
                try {
                    parsedMessage = ContainerIdProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerIdProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasAppId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ApplicationIdProto getAppId() {
                if (this.appIdBuilder_ == null) {
                    return this.appId_;
                }
                return this.appIdBuilder_.getMessage();
            }
            
            public Builder setAppId(final ApplicationIdProto value) {
                if (this.appIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.appId_ = value;
                    this.onChanged();
                }
                else {
                    this.appIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setAppId(final ApplicationIdProto.Builder builderForValue) {
                if (this.appIdBuilder_ == null) {
                    this.appId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.appIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeAppId(final ApplicationIdProto value) {
                if (this.appIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.appId_ != ApplicationIdProto.getDefaultInstance()) {
                        this.appId_ = ApplicationIdProto.newBuilder(this.appId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.appId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.appIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearAppId() {
                if (this.appIdBuilder_ == null) {
                    this.appId_ = ApplicationIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.appIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ApplicationIdProto.Builder getAppIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getAppIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationIdProtoOrBuilder getAppIdOrBuilder() {
                if (this.appIdBuilder_ != null) {
                    return this.appIdBuilder_.getMessageOrBuilder();
                }
                return this.appId_;
            }
            
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> getAppIdFieldBuilder() {
                if (this.appIdBuilder_ == null) {
                    this.appIdBuilder_ = new SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder>(this.appId_, this.getParentForChildren(), this.isClean());
                    this.appId_ = null;
                }
                return this.appIdBuilder_;
            }
            
            @Override
            public boolean hasAppAttemptId() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ApplicationAttemptIdProto getAppAttemptId() {
                if (this.appAttemptIdBuilder_ == null) {
                    return this.appAttemptId_;
                }
                return this.appAttemptIdBuilder_.getMessage();
            }
            
            public Builder setAppAttemptId(final ApplicationAttemptIdProto value) {
                if (this.appAttemptIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.appAttemptId_ = value;
                    this.onChanged();
                }
                else {
                    this.appAttemptIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setAppAttemptId(final ApplicationAttemptIdProto.Builder builderForValue) {
                if (this.appAttemptIdBuilder_ == null) {
                    this.appAttemptId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.appAttemptIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeAppAttemptId(final ApplicationAttemptIdProto value) {
                if (this.appAttemptIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.appAttemptId_ != ApplicationAttemptIdProto.getDefaultInstance()) {
                        this.appAttemptId_ = ApplicationAttemptIdProto.newBuilder(this.appAttemptId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.appAttemptId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.appAttemptIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearAppAttemptId() {
                if (this.appAttemptIdBuilder_ == null) {
                    this.appAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.appAttemptIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public ApplicationAttemptIdProto.Builder getAppAttemptIdBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getAppAttemptIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationAttemptIdProtoOrBuilder getAppAttemptIdOrBuilder() {
                if (this.appAttemptIdBuilder_ != null) {
                    return this.appAttemptIdBuilder_.getMessageOrBuilder();
                }
                return this.appAttemptId_;
            }
            
            private SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder> getAppAttemptIdFieldBuilder() {
                if (this.appAttemptIdBuilder_ == null) {
                    this.appAttemptIdBuilder_ = new SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder>(this.appAttemptId_, this.getParentForChildren(), this.isClean());
                    this.appAttemptId_ = null;
                }
                return this.appAttemptIdBuilder_;
            }
            
            @Override
            public boolean hasId() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public long getId() {
                return this.id_;
            }
            
            public Builder setId(final long value) {
                this.bitField0_ |= 0x4;
                this.id_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.id_ = 0L;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ResourceProto extends GeneratedMessage implements ResourceProtoOrBuilder
    {
        private static final ResourceProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ResourceProto> PARSER;
        private int bitField0_;
        public static final int MEMORY_FIELD_NUMBER = 1;
        private int memory_;
        public static final int VIRTUAL_CORES_FIELD_NUMBER = 2;
        private int virtualCores_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ResourceProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ResourceProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ResourceProto getDefaultInstance() {
            return ResourceProto.defaultInstance;
        }
        
        @Override
        public ResourceProto getDefaultInstanceForType() {
            return ResourceProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ResourceProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            this.bitField0_ |= 0x1;
                            this.memory_ = input.readInt32();
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.virtualCores_ = input.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceProto.class, Builder.class);
        }
        
        @Override
        public Parser<ResourceProto> getParserForType() {
            return ResourceProto.PARSER;
        }
        
        @Override
        public boolean hasMemory() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public int getMemory() {
            return this.memory_;
        }
        
        @Override
        public boolean hasVirtualCores() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public int getVirtualCores() {
            return this.virtualCores_;
        }
        
        private void initFields() {
            this.memory_ = 0;
            this.virtualCores_ = 0;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeInt32(1, this.memory_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt32(2, this.virtualCores_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeInt32Size(1, this.memory_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt32Size(2, this.virtualCores_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ResourceProto)) {
                return super.equals(obj);
            }
            final ResourceProto other = (ResourceProto)obj;
            boolean result = true;
            result = (result && this.hasMemory() == other.hasMemory());
            if (this.hasMemory()) {
                result = (result && this.getMemory() == other.getMemory());
            }
            result = (result && this.hasVirtualCores() == other.hasVirtualCores());
            if (this.hasVirtualCores()) {
                result = (result && this.getVirtualCores() == other.getVirtualCores());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasMemory()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getMemory();
            }
            if (this.hasVirtualCores()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getVirtualCores();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ResourceProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ResourceProto.PARSER.parseFrom(data);
        }
        
        public static ResourceProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ResourceProto.PARSER.parseFrom(data);
        }
        
        public static ResourceProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceProto parseFrom(final InputStream input) throws IOException {
            return ResourceProto.PARSER.parseFrom(input);
        }
        
        public static ResourceProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ResourceProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ResourceProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ResourceProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ResourceProto parseFrom(final CodedInputStream input) throws IOException {
            return ResourceProto.PARSER.parseFrom(input);
        }
        
        public static ResourceProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ResourceProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ResourceProto.PARSER = new AbstractParser<ResourceProto>() {
                @Override
                public ResourceProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ResourceProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ResourceProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ResourceProtoOrBuilder
        {
            private int bitField0_;
            private int memory_;
            private int virtualCores_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceProto.class, Builder.class);
            }
            
            private Builder() {
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ResourceProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.memory_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.virtualCores_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceProto_descriptor;
            }
            
            @Override
            public ResourceProto getDefaultInstanceForType() {
                return ResourceProto.getDefaultInstance();
            }
            
            @Override
            public ResourceProto build() {
                final ResourceProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ResourceProto buildPartial() {
                final ResourceProto result = new ResourceProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.memory_ = this.memory_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.virtualCores_ = this.virtualCores_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ResourceProto) {
                    return this.mergeFrom((ResourceProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ResourceProto other) {
                if (other == ResourceProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasMemory()) {
                    this.setMemory(other.getMemory());
                }
                if (other.hasVirtualCores()) {
                    this.setVirtualCores(other.getVirtualCores());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ResourceProto parsedMessage = null;
                try {
                    parsedMessage = ResourceProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ResourceProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasMemory() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public int getMemory() {
                return this.memory_;
            }
            
            public Builder setMemory(final int value) {
                this.bitField0_ |= 0x1;
                this.memory_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearMemory() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.memory_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasVirtualCores() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public int getVirtualCores() {
                return this.virtualCores_;
            }
            
            public Builder setVirtualCores(final int value) {
                this.bitField0_ |= 0x2;
                this.virtualCores_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearVirtualCores() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.virtualCores_ = 0;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ResourceOptionProto extends GeneratedMessage implements ResourceOptionProtoOrBuilder
    {
        private static final ResourceOptionProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ResourceOptionProto> PARSER;
        private int bitField0_;
        public static final int RESOURCE_FIELD_NUMBER = 1;
        private ResourceProto resource_;
        public static final int OVER_COMMIT_TIMEOUT_FIELD_NUMBER = 2;
        private int overCommitTimeout_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ResourceOptionProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ResourceOptionProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ResourceOptionProto getDefaultInstance() {
            return ResourceOptionProto.defaultInstance;
        }
        
        @Override
        public ResourceOptionProto getDefaultInstanceForType() {
            return ResourceOptionProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ResourceOptionProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ResourceProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.resource_.toBuilder();
                            }
                            this.resource_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.resource_);
                                this.resource_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.overCommitTimeout_ = input.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceOptionProto.class, Builder.class);
        }
        
        @Override
        public Parser<ResourceOptionProto> getParserForType() {
            return ResourceOptionProto.PARSER;
        }
        
        @Override
        public boolean hasResource() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ResourceProto getResource() {
            return this.resource_;
        }
        
        @Override
        public ResourceProtoOrBuilder getResourceOrBuilder() {
            return this.resource_;
        }
        
        @Override
        public boolean hasOverCommitTimeout() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public int getOverCommitTimeout() {
            return this.overCommitTimeout_;
        }
        
        private void initFields() {
            this.resource_ = ResourceProto.getDefaultInstance();
            this.overCommitTimeout_ = 0;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.resource_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt32(2, this.overCommitTimeout_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.resource_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt32Size(2, this.overCommitTimeout_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ResourceOptionProto)) {
                return super.equals(obj);
            }
            final ResourceOptionProto other = (ResourceOptionProto)obj;
            boolean result = true;
            result = (result && this.hasResource() == other.hasResource());
            if (this.hasResource()) {
                result = (result && this.getResource().equals(other.getResource()));
            }
            result = (result && this.hasOverCommitTimeout() == other.hasOverCommitTimeout());
            if (this.hasOverCommitTimeout()) {
                result = (result && this.getOverCommitTimeout() == other.getOverCommitTimeout());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasResource()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getResource().hashCode();
            }
            if (this.hasOverCommitTimeout()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getOverCommitTimeout();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ResourceOptionProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ResourceOptionProto.PARSER.parseFrom(data);
        }
        
        public static ResourceOptionProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceOptionProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceOptionProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ResourceOptionProto.PARSER.parseFrom(data);
        }
        
        public static ResourceOptionProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceOptionProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceOptionProto parseFrom(final InputStream input) throws IOException {
            return ResourceOptionProto.PARSER.parseFrom(input);
        }
        
        public static ResourceOptionProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceOptionProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ResourceOptionProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ResourceOptionProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ResourceOptionProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceOptionProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ResourceOptionProto parseFrom(final CodedInputStream input) throws IOException {
            return ResourceOptionProto.PARSER.parseFrom(input);
        }
        
        public static ResourceOptionProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceOptionProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ResourceOptionProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ResourceOptionProto.PARSER = new AbstractParser<ResourceOptionProto>() {
                @Override
                public ResourceOptionProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ResourceOptionProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ResourceOptionProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ResourceOptionProtoOrBuilder
        {
            private int bitField0_;
            private ResourceProto resource_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> resourceBuilder_;
            private int overCommitTimeout_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceOptionProto.class, Builder.class);
            }
            
            private Builder() {
                this.resource_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.resource_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ResourceOptionProto.alwaysUseFieldBuilders) {
                    this.getResourceFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.overCommitTimeout_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceOptionProto_descriptor;
            }
            
            @Override
            public ResourceOptionProto getDefaultInstanceForType() {
                return ResourceOptionProto.getDefaultInstance();
            }
            
            @Override
            public ResourceOptionProto build() {
                final ResourceOptionProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ResourceOptionProto buildPartial() {
                final ResourceOptionProto result = new ResourceOptionProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.resourceBuilder_ == null) {
                    result.resource_ = this.resource_;
                }
                else {
                    result.resource_ = this.resourceBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.overCommitTimeout_ = this.overCommitTimeout_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ResourceOptionProto) {
                    return this.mergeFrom((ResourceOptionProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ResourceOptionProto other) {
                if (other == ResourceOptionProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasResource()) {
                    this.mergeResource(other.getResource());
                }
                if (other.hasOverCommitTimeout()) {
                    this.setOverCommitTimeout(other.getOverCommitTimeout());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ResourceOptionProto parsedMessage = null;
                try {
                    parsedMessage = ResourceOptionProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ResourceOptionProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasResource() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ResourceProto getResource() {
                if (this.resourceBuilder_ == null) {
                    return this.resource_;
                }
                return this.resourceBuilder_.getMessage();
            }
            
            public Builder setResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.resource_ = value;
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setResource(final ResourceProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.resource_ != ResourceProto.getDefaultInstance()) {
                        this.resource_ = ResourceProto.newBuilder(this.resource_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.resource_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearResource() {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ResourceProto.Builder getResourceBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getResourceFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getResourceOrBuilder() {
                if (this.resourceBuilder_ != null) {
                    return this.resourceBuilder_.getMessageOrBuilder();
                }
                return this.resource_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getResourceFieldBuilder() {
                if (this.resourceBuilder_ == null) {
                    this.resourceBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.resource_, this.getParentForChildren(), this.isClean());
                    this.resource_ = null;
                }
                return this.resourceBuilder_;
            }
            
            @Override
            public boolean hasOverCommitTimeout() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public int getOverCommitTimeout() {
                return this.overCommitTimeout_;
            }
            
            public Builder setOverCommitTimeout(final int value) {
                this.bitField0_ |= 0x2;
                this.overCommitTimeout_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearOverCommitTimeout() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.overCommitTimeout_ = 0;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class NodeResourceMapProto extends GeneratedMessage implements NodeResourceMapProtoOrBuilder
    {
        private static final NodeResourceMapProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<NodeResourceMapProto> PARSER;
        private int bitField0_;
        public static final int NODE_ID_FIELD_NUMBER = 1;
        private NodeIdProto nodeId_;
        public static final int RESOURCE_OPTION_FIELD_NUMBER = 2;
        private ResourceOptionProto resourceOption_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private NodeResourceMapProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private NodeResourceMapProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static NodeResourceMapProto getDefaultInstance() {
            return NodeResourceMapProto.defaultInstance;
        }
        
        @Override
        public NodeResourceMapProto getDefaultInstanceForType() {
            return NodeResourceMapProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private NodeResourceMapProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            NodeIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.nodeId_.toBuilder();
                            }
                            this.nodeId_ = input.readMessage(NodeIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.nodeId_);
                                this.nodeId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            ResourceOptionProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.resourceOption_.toBuilder();
                            }
                            this.resourceOption_ = input.readMessage(ResourceOptionProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.resourceOption_);
                                this.resourceOption_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeResourceMapProto.class, Builder.class);
        }
        
        @Override
        public Parser<NodeResourceMapProto> getParserForType() {
            return NodeResourceMapProto.PARSER;
        }
        
        @Override
        public boolean hasNodeId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public NodeIdProto getNodeId() {
            return this.nodeId_;
        }
        
        @Override
        public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
            return this.nodeId_;
        }
        
        @Override
        public boolean hasResourceOption() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ResourceOptionProto getResourceOption() {
            return this.resourceOption_;
        }
        
        @Override
        public ResourceOptionProtoOrBuilder getResourceOptionOrBuilder() {
            return this.resourceOption_;
        }
        
        private void initFields() {
            this.nodeId_ = NodeIdProto.getDefaultInstance();
            this.resourceOption_ = ResourceOptionProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.nodeId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.resourceOption_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.nodeId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.resourceOption_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof NodeResourceMapProto)) {
                return super.equals(obj);
            }
            final NodeResourceMapProto other = (NodeResourceMapProto)obj;
            boolean result = true;
            result = (result && this.hasNodeId() == other.hasNodeId());
            if (this.hasNodeId()) {
                result = (result && this.getNodeId().equals(other.getNodeId()));
            }
            result = (result && this.hasResourceOption() == other.hasResourceOption());
            if (this.hasResourceOption()) {
                result = (result && this.getResourceOption().equals(other.getResourceOption()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasNodeId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getNodeId().hashCode();
            }
            if (this.hasResourceOption()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getResourceOption().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static NodeResourceMapProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return NodeResourceMapProto.PARSER.parseFrom(data);
        }
        
        public static NodeResourceMapProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeResourceMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeResourceMapProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return NodeResourceMapProto.PARSER.parseFrom(data);
        }
        
        public static NodeResourceMapProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeResourceMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeResourceMapProto parseFrom(final InputStream input) throws IOException {
            return NodeResourceMapProto.PARSER.parseFrom(input);
        }
        
        public static NodeResourceMapProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeResourceMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static NodeResourceMapProto parseDelimitedFrom(final InputStream input) throws IOException {
            return NodeResourceMapProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static NodeResourceMapProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeResourceMapProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static NodeResourceMapProto parseFrom(final CodedInputStream input) throws IOException {
            return NodeResourceMapProto.PARSER.parseFrom(input);
        }
        
        public static NodeResourceMapProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeResourceMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final NodeResourceMapProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            NodeResourceMapProto.PARSER = new AbstractParser<NodeResourceMapProto>() {
                @Override
                public NodeResourceMapProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new NodeResourceMapProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new NodeResourceMapProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements NodeResourceMapProtoOrBuilder
        {
            private int bitField0_;
            private NodeIdProto nodeId_;
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> nodeIdBuilder_;
            private ResourceOptionProto resourceOption_;
            private SingleFieldBuilder<ResourceOptionProto, ResourceOptionProto.Builder, ResourceOptionProtoOrBuilder> resourceOptionBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeResourceMapProto.class, Builder.class);
            }
            
            private Builder() {
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.resourceOption_ = ResourceOptionProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.resourceOption_ = ResourceOptionProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (NodeResourceMapProto.alwaysUseFieldBuilders) {
                    this.getNodeIdFieldBuilder();
                    this.getResourceOptionFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.resourceOptionBuilder_ == null) {
                    this.resourceOption_ = ResourceOptionProto.getDefaultInstance();
                }
                else {
                    this.resourceOptionBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_NodeResourceMapProto_descriptor;
            }
            
            @Override
            public NodeResourceMapProto getDefaultInstanceForType() {
                return NodeResourceMapProto.getDefaultInstance();
            }
            
            @Override
            public NodeResourceMapProto build() {
                final NodeResourceMapProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public NodeResourceMapProto buildPartial() {
                final NodeResourceMapProto result = new NodeResourceMapProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.nodeIdBuilder_ == null) {
                    result.nodeId_ = this.nodeId_;
                }
                else {
                    result.nodeId_ = this.nodeIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.resourceOptionBuilder_ == null) {
                    result.resourceOption_ = this.resourceOption_;
                }
                else {
                    result.resourceOption_ = this.resourceOptionBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof NodeResourceMapProto) {
                    return this.mergeFrom((NodeResourceMapProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final NodeResourceMapProto other) {
                if (other == NodeResourceMapProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasNodeId()) {
                    this.mergeNodeId(other.getNodeId());
                }
                if (other.hasResourceOption()) {
                    this.mergeResourceOption(other.getResourceOption());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                NodeResourceMapProto parsedMessage = null;
                try {
                    parsedMessage = NodeResourceMapProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (NodeResourceMapProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasNodeId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public NodeIdProto getNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    return this.nodeId_;
                }
                return this.nodeIdBuilder_.getMessage();
            }
            
            public Builder setNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.nodeId_ = value;
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setNodeId(final NodeIdProto.Builder builderForValue) {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.nodeId_ != NodeIdProto.getDefaultInstance()) {
                        this.nodeId_ = NodeIdProto.newBuilder(this.nodeId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.nodeId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public NodeIdProto.Builder getNodeIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getNodeIdFieldBuilder().getBuilder();
            }
            
            @Override
            public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
                if (this.nodeIdBuilder_ != null) {
                    return this.nodeIdBuilder_.getMessageOrBuilder();
                }
                return this.nodeId_;
            }
            
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> getNodeIdFieldBuilder() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeIdBuilder_ = new SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder>(this.nodeId_, this.getParentForChildren(), this.isClean());
                    this.nodeId_ = null;
                }
                return this.nodeIdBuilder_;
            }
            
            @Override
            public boolean hasResourceOption() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ResourceOptionProto getResourceOption() {
                if (this.resourceOptionBuilder_ == null) {
                    return this.resourceOption_;
                }
                return this.resourceOptionBuilder_.getMessage();
            }
            
            public Builder setResourceOption(final ResourceOptionProto value) {
                if (this.resourceOptionBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.resourceOption_ = value;
                    this.onChanged();
                }
                else {
                    this.resourceOptionBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setResourceOption(final ResourceOptionProto.Builder builderForValue) {
                if (this.resourceOptionBuilder_ == null) {
                    this.resourceOption_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.resourceOptionBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeResourceOption(final ResourceOptionProto value) {
                if (this.resourceOptionBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.resourceOption_ != ResourceOptionProto.getDefaultInstance()) {
                        this.resourceOption_ = ResourceOptionProto.newBuilder(this.resourceOption_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.resourceOption_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.resourceOptionBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearResourceOption() {
                if (this.resourceOptionBuilder_ == null) {
                    this.resourceOption_ = ResourceOptionProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.resourceOptionBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public ResourceOptionProto.Builder getResourceOptionBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getResourceOptionFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceOptionProtoOrBuilder getResourceOptionOrBuilder() {
                if (this.resourceOptionBuilder_ != null) {
                    return this.resourceOptionBuilder_.getMessageOrBuilder();
                }
                return this.resourceOption_;
            }
            
            private SingleFieldBuilder<ResourceOptionProto, ResourceOptionProto.Builder, ResourceOptionProtoOrBuilder> getResourceOptionFieldBuilder() {
                if (this.resourceOptionBuilder_ == null) {
                    this.resourceOptionBuilder_ = new SingleFieldBuilder<ResourceOptionProto, ResourceOptionProto.Builder, ResourceOptionProtoOrBuilder>(this.resourceOption_, this.getParentForChildren(), this.isClean());
                    this.resourceOption_ = null;
                }
                return this.resourceOptionBuilder_;
            }
        }
    }
    
    public static final class PriorityProto extends GeneratedMessage implements PriorityProtoOrBuilder
    {
        private static final PriorityProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<PriorityProto> PARSER;
        private int bitField0_;
        public static final int PRIORITY_FIELD_NUMBER = 1;
        private int priority_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private PriorityProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private PriorityProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static PriorityProto getDefaultInstance() {
            return PriorityProto.defaultInstance;
        }
        
        @Override
        public PriorityProto getDefaultInstanceForType() {
            return PriorityProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private PriorityProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            this.bitField0_ |= 0x1;
                            this.priority_ = input.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_PriorityProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_PriorityProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PriorityProto.class, Builder.class);
        }
        
        @Override
        public Parser<PriorityProto> getParserForType() {
            return PriorityProto.PARSER;
        }
        
        @Override
        public boolean hasPriority() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public int getPriority() {
            return this.priority_;
        }
        
        private void initFields() {
            this.priority_ = 0;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeInt32(1, this.priority_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeInt32Size(1, this.priority_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PriorityProto)) {
                return super.equals(obj);
            }
            final PriorityProto other = (PriorityProto)obj;
            boolean result = true;
            result = (result && this.hasPriority() == other.hasPriority());
            if (this.hasPriority()) {
                result = (result && this.getPriority() == other.getPriority());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasPriority()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getPriority();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static PriorityProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return PriorityProto.PARSER.parseFrom(data);
        }
        
        public static PriorityProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PriorityProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PriorityProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return PriorityProto.PARSER.parseFrom(data);
        }
        
        public static PriorityProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PriorityProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PriorityProto parseFrom(final InputStream input) throws IOException {
            return PriorityProto.PARSER.parseFrom(input);
        }
        
        public static PriorityProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PriorityProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static PriorityProto parseDelimitedFrom(final InputStream input) throws IOException {
            return PriorityProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static PriorityProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PriorityProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static PriorityProto parseFrom(final CodedInputStream input) throws IOException {
            return PriorityProto.PARSER.parseFrom(input);
        }
        
        public static PriorityProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PriorityProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final PriorityProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            PriorityProto.PARSER = new AbstractParser<PriorityProto>() {
                @Override
                public PriorityProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new PriorityProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new PriorityProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PriorityProtoOrBuilder
        {
            private int bitField0_;
            private int priority_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_PriorityProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_PriorityProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PriorityProto.class, Builder.class);
            }
            
            private Builder() {
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (PriorityProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.priority_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_PriorityProto_descriptor;
            }
            
            @Override
            public PriorityProto getDefaultInstanceForType() {
                return PriorityProto.getDefaultInstance();
            }
            
            @Override
            public PriorityProto build() {
                final PriorityProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public PriorityProto buildPartial() {
                final PriorityProto result = new PriorityProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.priority_ = this.priority_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof PriorityProto) {
                    return this.mergeFrom((PriorityProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final PriorityProto other) {
                if (other == PriorityProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasPriority()) {
                    this.setPriority(other.getPriority());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                PriorityProto parsedMessage = null;
                try {
                    parsedMessage = PriorityProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PriorityProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasPriority() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public int getPriority() {
                return this.priority_;
            }
            
            public Builder setPriority(final int value) {
                this.bitField0_ |= 0x1;
                this.priority_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearPriority() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.priority_ = 0;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ContainerProto extends GeneratedMessage implements ContainerProtoOrBuilder
    {
        private static final ContainerProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerProto> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private ContainerIdProto id_;
        public static final int NODEID_FIELD_NUMBER = 2;
        private NodeIdProto nodeId_;
        public static final int NODE_HTTP_ADDRESS_FIELD_NUMBER = 3;
        private Object nodeHttpAddress_;
        public static final int RESOURCE_FIELD_NUMBER = 4;
        private ResourceProto resource_;
        public static final int PRIORITY_FIELD_NUMBER = 5;
        private PriorityProto priority_;
        public static final int CONTAINER_TOKEN_FIELD_NUMBER = 6;
        private SecurityProtos.TokenProto containerToken_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerProto getDefaultInstance() {
            return ContainerProto.defaultInstance;
        }
        
        @Override
        public ContainerProto getDefaultInstanceForType() {
            return ContainerProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ContainerIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.id_.toBuilder();
                            }
                            this.id_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.id_);
                                this.id_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            NodeIdProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.nodeId_.toBuilder();
                            }
                            this.nodeId_ = input.readMessage(NodeIdProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.nodeId_);
                                this.nodeId_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x4;
                            this.nodeHttpAddress_ = input.readBytes();
                            continue;
                        }
                        case 34: {
                            ResourceProto.Builder subBuilder3 = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                subBuilder3 = this.resource_.toBuilder();
                            }
                            this.resource_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder3 != null) {
                                subBuilder3.mergeFrom(this.resource_);
                                this.resource_ = subBuilder3.buildPartial();
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                        case 42: {
                            PriorityProto.Builder subBuilder4 = null;
                            if ((this.bitField0_ & 0x10) == 0x10) {
                                subBuilder4 = this.priority_.toBuilder();
                            }
                            this.priority_ = input.readMessage(PriorityProto.PARSER, extensionRegistry);
                            if (subBuilder4 != null) {
                                subBuilder4.mergeFrom(this.priority_);
                                this.priority_ = subBuilder4.buildPartial();
                            }
                            this.bitField0_ |= 0x10;
                            continue;
                        }
                        case 50: {
                            SecurityProtos.TokenProto.Builder subBuilder5 = null;
                            if ((this.bitField0_ & 0x20) == 0x20) {
                                subBuilder5 = this.containerToken_.toBuilder();
                            }
                            this.containerToken_ = input.readMessage(SecurityProtos.TokenProto.PARSER, extensionRegistry);
                            if (subBuilder5 != null) {
                                subBuilder5.mergeFrom(this.containerToken_);
                                this.containerToken_ = subBuilder5.buildPartial();
                            }
                            this.bitField0_ |= 0x20;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerProto> getParserForType() {
            return ContainerProto.PARSER;
        }
        
        @Override
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ContainerIdProto getId() {
            return this.id_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getIdOrBuilder() {
            return this.id_;
        }
        
        @Override
        public boolean hasNodeId() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public NodeIdProto getNodeId() {
            return this.nodeId_;
        }
        
        @Override
        public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
            return this.nodeId_;
        }
        
        @Override
        public boolean hasNodeHttpAddress() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public String getNodeHttpAddress() {
            final Object ref = this.nodeHttpAddress_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.nodeHttpAddress_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getNodeHttpAddressBytes() {
            final Object ref = this.nodeHttpAddress_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.nodeHttpAddress_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasResource() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public ResourceProto getResource() {
            return this.resource_;
        }
        
        @Override
        public ResourceProtoOrBuilder getResourceOrBuilder() {
            return this.resource_;
        }
        
        @Override
        public boolean hasPriority() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public PriorityProto getPriority() {
            return this.priority_;
        }
        
        @Override
        public PriorityProtoOrBuilder getPriorityOrBuilder() {
            return this.priority_;
        }
        
        @Override
        public boolean hasContainerToken() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public SecurityProtos.TokenProto getContainerToken() {
            return this.containerToken_;
        }
        
        @Override
        public SecurityProtos.TokenProtoOrBuilder getContainerTokenOrBuilder() {
            return this.containerToken_;
        }
        
        private void initFields() {
            this.id_ = ContainerIdProto.getDefaultInstance();
            this.nodeId_ = NodeIdProto.getDefaultInstance();
            this.nodeHttpAddress_ = "";
            this.resource_ = ResourceProto.getDefaultInstance();
            this.priority_ = PriorityProto.getDefaultInstance();
            this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            if (this.hasContainerToken() && !this.getContainerToken().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.nodeId_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeBytes(3, this.getNodeHttpAddressBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeMessage(4, this.resource_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeMessage(5, this.priority_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeMessage(6, this.containerToken_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.nodeId_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeBytesSize(3, this.getNodeHttpAddressBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeMessageSize(4, this.resource_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeMessageSize(5, this.priority_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeMessageSize(6, this.containerToken_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerProto)) {
                return super.equals(obj);
            }
            final ContainerProto other = (ContainerProto)obj;
            boolean result = true;
            result = (result && this.hasId() == other.hasId());
            if (this.hasId()) {
                result = (result && this.getId().equals(other.getId()));
            }
            result = (result && this.hasNodeId() == other.hasNodeId());
            if (this.hasNodeId()) {
                result = (result && this.getNodeId().equals(other.getNodeId()));
            }
            result = (result && this.hasNodeHttpAddress() == other.hasNodeHttpAddress());
            if (this.hasNodeHttpAddress()) {
                result = (result && this.getNodeHttpAddress().equals(other.getNodeHttpAddress()));
            }
            result = (result && this.hasResource() == other.hasResource());
            if (this.hasResource()) {
                result = (result && this.getResource().equals(other.getResource()));
            }
            result = (result && this.hasPriority() == other.hasPriority());
            if (this.hasPriority()) {
                result = (result && this.getPriority().equals(other.getPriority()));
            }
            result = (result && this.hasContainerToken() == other.hasContainerToken());
            if (this.hasContainerToken()) {
                result = (result && this.getContainerToken().equals(other.getContainerToken()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getId().hashCode();
            }
            if (this.hasNodeId()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getNodeId().hashCode();
            }
            if (this.hasNodeHttpAddress()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getNodeHttpAddress().hashCode();
            }
            if (this.hasResource()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getResource().hashCode();
            }
            if (this.hasPriority()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getPriority().hashCode();
            }
            if (this.hasContainerToken()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + this.getContainerToken().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerProto.PARSER.parseFrom(data);
        }
        
        public static ContainerProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerProto.PARSER.parseFrom(data);
        }
        
        public static ContainerProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerProto parseFrom(final InputStream input) throws IOException {
            return ContainerProto.PARSER.parseFrom(input);
        }
        
        public static ContainerProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerProto.PARSER.parseFrom(input);
        }
        
        public static ContainerProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerProto.PARSER = new AbstractParser<ContainerProto>() {
                @Override
                public ContainerProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerProtoOrBuilder
        {
            private int bitField0_;
            private ContainerIdProto id_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> idBuilder_;
            private NodeIdProto nodeId_;
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> nodeIdBuilder_;
            private Object nodeHttpAddress_;
            private ResourceProto resource_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> resourceBuilder_;
            private PriorityProto priority_;
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> priorityBuilder_;
            private SecurityProtos.TokenProto containerToken_;
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> containerTokenBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerProto.class, Builder.class);
            }
            
            private Builder() {
                this.id_ = ContainerIdProto.getDefaultInstance();
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.nodeHttpAddress_ = "";
                this.resource_ = ResourceProto.getDefaultInstance();
                this.priority_ = PriorityProto.getDefaultInstance();
                this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.id_ = ContainerIdProto.getDefaultInstance();
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.nodeHttpAddress_ = "";
                this.resource_ = ResourceProto.getDefaultInstance();
                this.priority_ = PriorityProto.getDefaultInstance();
                this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerProto.alwaysUseFieldBuilders) {
                    this.getIdFieldBuilder();
                    this.getNodeIdFieldBuilder();
                    this.getResourceFieldBuilder();
                    this.getPriorityFieldBuilder();
                    this.getContainerTokenFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.idBuilder_ == null) {
                    this.id_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.idBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                this.nodeHttpAddress_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                if (this.containerTokenBuilder_ == null) {
                    this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                }
                else {
                    this.containerTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerProto_descriptor;
            }
            
            @Override
            public ContainerProto getDefaultInstanceForType() {
                return ContainerProto.getDefaultInstance();
            }
            
            @Override
            public ContainerProto build() {
                final ContainerProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerProto buildPartial() {
                final ContainerProto result = new ContainerProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.idBuilder_ == null) {
                    result.id_ = this.id_;
                }
                else {
                    result.id_ = this.idBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.nodeIdBuilder_ == null) {
                    result.nodeId_ = this.nodeId_;
                }
                else {
                    result.nodeId_ = this.nodeIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.nodeHttpAddress_ = this.nodeHttpAddress_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                if (this.resourceBuilder_ == null) {
                    result.resource_ = this.resource_;
                }
                else {
                    result.resource_ = this.resourceBuilder_.build();
                }
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                if (this.priorityBuilder_ == null) {
                    result.priority_ = this.priority_;
                }
                else {
                    result.priority_ = this.priorityBuilder_.build();
                }
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                if (this.containerTokenBuilder_ == null) {
                    result.containerToken_ = this.containerToken_;
                }
                else {
                    result.containerToken_ = this.containerTokenBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerProto) {
                    return this.mergeFrom((ContainerProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerProto other) {
                if (other == ContainerProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasId()) {
                    this.mergeId(other.getId());
                }
                if (other.hasNodeId()) {
                    this.mergeNodeId(other.getNodeId());
                }
                if (other.hasNodeHttpAddress()) {
                    this.bitField0_ |= 0x4;
                    this.nodeHttpAddress_ = other.nodeHttpAddress_;
                    this.onChanged();
                }
                if (other.hasResource()) {
                    this.mergeResource(other.getResource());
                }
                if (other.hasPriority()) {
                    this.mergePriority(other.getPriority());
                }
                if (other.hasContainerToken()) {
                    this.mergeContainerToken(other.getContainerToken());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return !this.hasContainerToken() || this.getContainerToken().isInitialized();
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerProto parsedMessage = null;
                try {
                    parsedMessage = ContainerProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ContainerIdProto getId() {
                if (this.idBuilder_ == null) {
                    return this.id_;
                }
                return this.idBuilder_.getMessage();
            }
            
            public Builder setId(final ContainerIdProto value) {
                if (this.idBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.id_ = value;
                    this.onChanged();
                }
                else {
                    this.idBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setId(final ContainerIdProto.Builder builderForValue) {
                if (this.idBuilder_ == null) {
                    this.id_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.idBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeId(final ContainerIdProto value) {
                if (this.idBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.id_ != ContainerIdProto.getDefaultInstance()) {
                        this.id_ = ContainerIdProto.newBuilder(this.id_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.id_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.idBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearId() {
                if (this.idBuilder_ == null) {
                    this.id_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.idBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ContainerIdProto.Builder getIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getIdOrBuilder() {
                if (this.idBuilder_ != null) {
                    return this.idBuilder_.getMessageOrBuilder();
                }
                return this.id_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getIdFieldBuilder() {
                if (this.idBuilder_ == null) {
                    this.idBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.id_, this.getParentForChildren(), this.isClean());
                    this.id_ = null;
                }
                return this.idBuilder_;
            }
            
            @Override
            public boolean hasNodeId() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public NodeIdProto getNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    return this.nodeId_;
                }
                return this.nodeIdBuilder_.getMessage();
            }
            
            public Builder setNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.nodeId_ = value;
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setNodeId(final NodeIdProto.Builder builderForValue) {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.nodeId_ != NodeIdProto.getDefaultInstance()) {
                        this.nodeId_ = NodeIdProto.newBuilder(this.nodeId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.nodeId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public NodeIdProto.Builder getNodeIdBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getNodeIdFieldBuilder().getBuilder();
            }
            
            @Override
            public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
                if (this.nodeIdBuilder_ != null) {
                    return this.nodeIdBuilder_.getMessageOrBuilder();
                }
                return this.nodeId_;
            }
            
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> getNodeIdFieldBuilder() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeIdBuilder_ = new SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder>(this.nodeId_, this.getParentForChildren(), this.isClean());
                    this.nodeId_ = null;
                }
                return this.nodeIdBuilder_;
            }
            
            @Override
            public boolean hasNodeHttpAddress() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public String getNodeHttpAddress() {
                final Object ref = this.nodeHttpAddress_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.nodeHttpAddress_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getNodeHttpAddressBytes() {
                final Object ref = this.nodeHttpAddress_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.nodeHttpAddress_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setNodeHttpAddress(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.nodeHttpAddress_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNodeHttpAddress() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.nodeHttpAddress_ = ContainerProto.getDefaultInstance().getNodeHttpAddress();
                this.onChanged();
                return this;
            }
            
            public Builder setNodeHttpAddressBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.nodeHttpAddress_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasResource() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public ResourceProto getResource() {
                if (this.resourceBuilder_ == null) {
                    return this.resource_;
                }
                return this.resourceBuilder_.getMessage();
            }
            
            public Builder setResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.resource_ = value;
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setResource(final ResourceProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergeResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 0x8 && this.resource_ != ResourceProto.getDefaultInstance()) {
                        this.resource_ = ResourceProto.newBuilder(this.resource_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.resource_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder clearResource() {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public ResourceProto.Builder getResourceBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return this.getResourceFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getResourceOrBuilder() {
                if (this.resourceBuilder_ != null) {
                    return this.resourceBuilder_.getMessageOrBuilder();
                }
                return this.resource_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getResourceFieldBuilder() {
                if (this.resourceBuilder_ == null) {
                    this.resourceBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.resource_, this.getParentForChildren(), this.isClean());
                    this.resource_ = null;
                }
                return this.resourceBuilder_;
            }
            
            @Override
            public boolean hasPriority() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public PriorityProto getPriority() {
                if (this.priorityBuilder_ == null) {
                    return this.priority_;
                }
                return this.priorityBuilder_.getMessage();
            }
            
            public Builder setPriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.priority_ = value;
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder setPriority(final PriorityProto.Builder builderForValue) {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder mergePriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) == 0x10 && this.priority_ != PriorityProto.getDefaultInstance()) {
                        this.priority_ = PriorityProto.newBuilder(this.priority_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.priority_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder clearPriority() {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public PriorityProto.Builder getPriorityBuilder() {
                this.bitField0_ |= 0x10;
                this.onChanged();
                return this.getPriorityFieldBuilder().getBuilder();
            }
            
            @Override
            public PriorityProtoOrBuilder getPriorityOrBuilder() {
                if (this.priorityBuilder_ != null) {
                    return this.priorityBuilder_.getMessageOrBuilder();
                }
                return this.priority_;
            }
            
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> getPriorityFieldBuilder() {
                if (this.priorityBuilder_ == null) {
                    this.priorityBuilder_ = new SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder>(this.priority_, this.getParentForChildren(), this.isClean());
                    this.priority_ = null;
                }
                return this.priorityBuilder_;
            }
            
            @Override
            public boolean hasContainerToken() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public SecurityProtos.TokenProto getContainerToken() {
                if (this.containerTokenBuilder_ == null) {
                    return this.containerToken_;
                }
                return this.containerTokenBuilder_.getMessage();
            }
            
            public Builder setContainerToken(final SecurityProtos.TokenProto value) {
                if (this.containerTokenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.containerToken_ = value;
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x20;
                return this;
            }
            
            public Builder setContainerToken(final SecurityProtos.TokenProto.Builder builderForValue) {
                if (this.containerTokenBuilder_ == null) {
                    this.containerToken_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x20;
                return this;
            }
            
            public Builder mergeContainerToken(final SecurityProtos.TokenProto value) {
                if (this.containerTokenBuilder_ == null) {
                    if ((this.bitField0_ & 0x20) == 0x20 && this.containerToken_ != SecurityProtos.TokenProto.getDefaultInstance()) {
                        this.containerToken_ = SecurityProtos.TokenProto.newBuilder(this.containerToken_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.containerToken_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x20;
                return this;
            }
            
            public Builder clearContainerToken() {
                if (this.containerTokenBuilder_ == null) {
                    this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }
            
            public SecurityProtos.TokenProto.Builder getContainerTokenBuilder() {
                this.bitField0_ |= 0x20;
                this.onChanged();
                return this.getContainerTokenFieldBuilder().getBuilder();
            }
            
            @Override
            public SecurityProtos.TokenProtoOrBuilder getContainerTokenOrBuilder() {
                if (this.containerTokenBuilder_ != null) {
                    return this.containerTokenBuilder_.getMessageOrBuilder();
                }
                return this.containerToken_;
            }
            
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> getContainerTokenFieldBuilder() {
                if (this.containerTokenBuilder_ == null) {
                    this.containerTokenBuilder_ = new SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder>(this.containerToken_, this.getParentForChildren(), this.isClean());
                    this.containerToken_ = null;
                }
                return this.containerTokenBuilder_;
            }
        }
    }
    
    public static final class ContainerReportProto extends GeneratedMessage implements ContainerReportProtoOrBuilder
    {
        private static final ContainerReportProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerReportProto> PARSER;
        private int bitField0_;
        public static final int CONTAINER_ID_FIELD_NUMBER = 1;
        private ContainerIdProto containerId_;
        public static final int RESOURCE_FIELD_NUMBER = 2;
        private ResourceProto resource_;
        public static final int NODE_ID_FIELD_NUMBER = 3;
        private NodeIdProto nodeId_;
        public static final int PRIORITY_FIELD_NUMBER = 4;
        private PriorityProto priority_;
        public static final int CREATION_TIME_FIELD_NUMBER = 5;
        private long creationTime_;
        public static final int FINISH_TIME_FIELD_NUMBER = 6;
        private long finishTime_;
        public static final int DIAGNOSTICS_INFO_FIELD_NUMBER = 7;
        private Object diagnosticsInfo_;
        public static final int LOG_URL_FIELD_NUMBER = 8;
        private Object logUrl_;
        public static final int CONTAINER_EXIT_STATUS_FIELD_NUMBER = 9;
        private int containerExitStatus_;
        public static final int CONTAINER_STATE_FIELD_NUMBER = 10;
        private ContainerStateProto containerState_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerReportProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerReportProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerReportProto getDefaultInstance() {
            return ContainerReportProto.defaultInstance;
        }
        
        @Override
        public ContainerReportProto getDefaultInstanceForType() {
            return ContainerReportProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerReportProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ContainerIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.containerId_.toBuilder();
                            }
                            this.containerId_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.containerId_);
                                this.containerId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            ResourceProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.resource_.toBuilder();
                            }
                            this.resource_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.resource_);
                                this.resource_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                        case 26: {
                            NodeIdProto.Builder subBuilder3 = null;
                            if ((this.bitField0_ & 0x4) == 0x4) {
                                subBuilder3 = this.nodeId_.toBuilder();
                            }
                            this.nodeId_ = input.readMessage(NodeIdProto.PARSER, extensionRegistry);
                            if (subBuilder3 != null) {
                                subBuilder3.mergeFrom(this.nodeId_);
                                this.nodeId_ = subBuilder3.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            continue;
                        }
                        case 34: {
                            PriorityProto.Builder subBuilder4 = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                subBuilder4 = this.priority_.toBuilder();
                            }
                            this.priority_ = input.readMessage(PriorityProto.PARSER, extensionRegistry);
                            if (subBuilder4 != null) {
                                subBuilder4.mergeFrom(this.priority_);
                                this.priority_ = subBuilder4.buildPartial();
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                        case 40: {
                            this.bitField0_ |= 0x10;
                            this.creationTime_ = input.readInt64();
                            continue;
                        }
                        case 48: {
                            this.bitField0_ |= 0x20;
                            this.finishTime_ = input.readInt64();
                            continue;
                        }
                        case 58: {
                            this.bitField0_ |= 0x40;
                            this.diagnosticsInfo_ = input.readBytes();
                            continue;
                        }
                        case 66: {
                            this.bitField0_ |= 0x80;
                            this.logUrl_ = input.readBytes();
                            continue;
                        }
                        case 72: {
                            this.bitField0_ |= 0x100;
                            this.containerExitStatus_ = input.readInt32();
                            continue;
                        }
                        case 80: {
                            final int rawValue = input.readEnum();
                            final ContainerStateProto value = ContainerStateProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(10, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x200;
                            this.containerState_ = value;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerReportProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerReportProto> getParserForType() {
            return ContainerReportProto.PARSER;
        }
        
        @Override
        public boolean hasContainerId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ContainerIdProto getContainerId() {
            return this.containerId_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
            return this.containerId_;
        }
        
        @Override
        public boolean hasResource() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ResourceProto getResource() {
            return this.resource_;
        }
        
        @Override
        public ResourceProtoOrBuilder getResourceOrBuilder() {
            return this.resource_;
        }
        
        @Override
        public boolean hasNodeId() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public NodeIdProto getNodeId() {
            return this.nodeId_;
        }
        
        @Override
        public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
            return this.nodeId_;
        }
        
        @Override
        public boolean hasPriority() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public PriorityProto getPriority() {
            return this.priority_;
        }
        
        @Override
        public PriorityProtoOrBuilder getPriorityOrBuilder() {
            return this.priority_;
        }
        
        @Override
        public boolean hasCreationTime() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public long getCreationTime() {
            return this.creationTime_;
        }
        
        @Override
        public boolean hasFinishTime() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public long getFinishTime() {
            return this.finishTime_;
        }
        
        @Override
        public boolean hasDiagnosticsInfo() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        @Override
        public String getDiagnosticsInfo() {
            final Object ref = this.diagnosticsInfo_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.diagnosticsInfo_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getDiagnosticsInfoBytes() {
            final Object ref = this.diagnosticsInfo_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.diagnosticsInfo_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasLogUrl() {
            return (this.bitField0_ & 0x80) == 0x80;
        }
        
        @Override
        public String getLogUrl() {
            final Object ref = this.logUrl_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.logUrl_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getLogUrlBytes() {
            final Object ref = this.logUrl_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.logUrl_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasContainerExitStatus() {
            return (this.bitField0_ & 0x100) == 0x100;
        }
        
        @Override
        public int getContainerExitStatus() {
            return this.containerExitStatus_;
        }
        
        @Override
        public boolean hasContainerState() {
            return (this.bitField0_ & 0x200) == 0x200;
        }
        
        @Override
        public ContainerStateProto getContainerState() {
            return this.containerState_;
        }
        
        private void initFields() {
            this.containerId_ = ContainerIdProto.getDefaultInstance();
            this.resource_ = ResourceProto.getDefaultInstance();
            this.nodeId_ = NodeIdProto.getDefaultInstance();
            this.priority_ = PriorityProto.getDefaultInstance();
            this.creationTime_ = 0L;
            this.finishTime_ = 0L;
            this.diagnosticsInfo_ = "N/A";
            this.logUrl_ = "";
            this.containerExitStatus_ = 0;
            this.containerState_ = ContainerStateProto.C_NEW;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.resource_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeMessage(3, this.nodeId_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeMessage(4, this.priority_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeInt64(5, this.creationTime_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeInt64(6, this.finishTime_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                output.writeBytes(7, this.getDiagnosticsInfoBytes());
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                output.writeBytes(8, this.getLogUrlBytes());
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                output.writeInt32(9, this.containerExitStatus_);
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                output.writeEnum(10, this.containerState_.getNumber());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.resource_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeMessageSize(3, this.nodeId_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeMessageSize(4, this.priority_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeInt64Size(5, this.creationTime_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeInt64Size(6, this.finishTime_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                size += CodedOutputStream.computeBytesSize(7, this.getDiagnosticsInfoBytes());
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                size += CodedOutputStream.computeBytesSize(8, this.getLogUrlBytes());
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                size += CodedOutputStream.computeInt32Size(9, this.containerExitStatus_);
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                size += CodedOutputStream.computeEnumSize(10, this.containerState_.getNumber());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerReportProto)) {
                return super.equals(obj);
            }
            final ContainerReportProto other = (ContainerReportProto)obj;
            boolean result = true;
            result = (result && this.hasContainerId() == other.hasContainerId());
            if (this.hasContainerId()) {
                result = (result && this.getContainerId().equals(other.getContainerId()));
            }
            result = (result && this.hasResource() == other.hasResource());
            if (this.hasResource()) {
                result = (result && this.getResource().equals(other.getResource()));
            }
            result = (result && this.hasNodeId() == other.hasNodeId());
            if (this.hasNodeId()) {
                result = (result && this.getNodeId().equals(other.getNodeId()));
            }
            result = (result && this.hasPriority() == other.hasPriority());
            if (this.hasPriority()) {
                result = (result && this.getPriority().equals(other.getPriority()));
            }
            result = (result && this.hasCreationTime() == other.hasCreationTime());
            if (this.hasCreationTime()) {
                result = (result && this.getCreationTime() == other.getCreationTime());
            }
            result = (result && this.hasFinishTime() == other.hasFinishTime());
            if (this.hasFinishTime()) {
                result = (result && this.getFinishTime() == other.getFinishTime());
            }
            result = (result && this.hasDiagnosticsInfo() == other.hasDiagnosticsInfo());
            if (this.hasDiagnosticsInfo()) {
                result = (result && this.getDiagnosticsInfo().equals(other.getDiagnosticsInfo()));
            }
            result = (result && this.hasLogUrl() == other.hasLogUrl());
            if (this.hasLogUrl()) {
                result = (result && this.getLogUrl().equals(other.getLogUrl()));
            }
            result = (result && this.hasContainerExitStatus() == other.hasContainerExitStatus());
            if (this.hasContainerExitStatus()) {
                result = (result && this.getContainerExitStatus() == other.getContainerExitStatus());
            }
            result = (result && this.hasContainerState() == other.hasContainerState());
            if (this.hasContainerState()) {
                result = (result && this.getContainerState() == other.getContainerState());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasContainerId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getContainerId().hashCode();
            }
            if (this.hasResource()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getResource().hashCode();
            }
            if (this.hasNodeId()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getNodeId().hashCode();
            }
            if (this.hasPriority()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getPriority().hashCode();
            }
            if (this.hasCreationTime()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + AbstractMessage.hashLong(this.getCreationTime());
            }
            if (this.hasFinishTime()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + AbstractMessage.hashLong(this.getFinishTime());
            }
            if (this.hasDiagnosticsInfo()) {
                hash = 37 * hash + 7;
                hash = 53 * hash + this.getDiagnosticsInfo().hashCode();
            }
            if (this.hasLogUrl()) {
                hash = 37 * hash + 8;
                hash = 53 * hash + this.getLogUrl().hashCode();
            }
            if (this.hasContainerExitStatus()) {
                hash = 37 * hash + 9;
                hash = 53 * hash + this.getContainerExitStatus();
            }
            if (this.hasContainerState()) {
                hash = 37 * hash + 10;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getContainerState());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerReportProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerReportProto.PARSER.parseFrom(data);
        }
        
        public static ContainerReportProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerReportProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerReportProto.PARSER.parseFrom(data);
        }
        
        public static ContainerReportProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerReportProto parseFrom(final InputStream input) throws IOException {
            return ContainerReportProto.PARSER.parseFrom(input);
        }
        
        public static ContainerReportProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerReportProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerReportProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerReportProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerReportProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerReportProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerReportProto.PARSER.parseFrom(input);
        }
        
        public static ContainerReportProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerReportProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerReportProto.PARSER = new AbstractParser<ContainerReportProto>() {
                @Override
                public ContainerReportProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerReportProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerReportProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerReportProtoOrBuilder
        {
            private int bitField0_;
            private ContainerIdProto containerId_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> containerIdBuilder_;
            private ResourceProto resource_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> resourceBuilder_;
            private NodeIdProto nodeId_;
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> nodeIdBuilder_;
            private PriorityProto priority_;
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> priorityBuilder_;
            private long creationTime_;
            private long finishTime_;
            private Object diagnosticsInfo_;
            private Object logUrl_;
            private int containerExitStatus_;
            private ContainerStateProto containerState_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerReportProto.class, Builder.class);
            }
            
            private Builder() {
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.resource_ = ResourceProto.getDefaultInstance();
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.priority_ = PriorityProto.getDefaultInstance();
                this.diagnosticsInfo_ = "N/A";
                this.logUrl_ = "";
                this.containerState_ = ContainerStateProto.C_NEW;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.resource_ = ResourceProto.getDefaultInstance();
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.priority_ = PriorityProto.getDefaultInstance();
                this.diagnosticsInfo_ = "N/A";
                this.logUrl_ = "";
                this.containerState_ = ContainerStateProto.C_NEW;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerReportProto.alwaysUseFieldBuilders) {
                    this.getContainerIdFieldBuilder();
                    this.getResourceFieldBuilder();
                    this.getNodeIdFieldBuilder();
                    this.getPriorityFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                this.creationTime_ = 0L;
                this.bitField0_ &= 0xFFFFFFEF;
                this.finishTime_ = 0L;
                this.bitField0_ &= 0xFFFFFFDF;
                this.diagnosticsInfo_ = "N/A";
                this.bitField0_ &= 0xFFFFFFBF;
                this.logUrl_ = "";
                this.bitField0_ &= 0xFFFFFF7F;
                this.containerExitStatus_ = 0;
                this.bitField0_ &= 0xFFFFFEFF;
                this.containerState_ = ContainerStateProto.C_NEW;
                this.bitField0_ &= 0xFFFFFDFF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerReportProto_descriptor;
            }
            
            @Override
            public ContainerReportProto getDefaultInstanceForType() {
                return ContainerReportProto.getDefaultInstance();
            }
            
            @Override
            public ContainerReportProto build() {
                final ContainerReportProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerReportProto buildPartial() {
                final ContainerReportProto result = new ContainerReportProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.containerIdBuilder_ == null) {
                    result.containerId_ = this.containerId_;
                }
                else {
                    result.containerId_ = this.containerIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.resourceBuilder_ == null) {
                    result.resource_ = this.resource_;
                }
                else {
                    result.resource_ = this.resourceBuilder_.build();
                }
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.nodeIdBuilder_ == null) {
                    result.nodeId_ = this.nodeId_;
                }
                else {
                    result.nodeId_ = this.nodeIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                if (this.priorityBuilder_ == null) {
                    result.priority_ = this.priority_;
                }
                else {
                    result.priority_ = this.priorityBuilder_.build();
                }
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                result.creationTime_ = this.creationTime_;
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.finishTime_ = this.finishTime_;
                if ((from_bitField0_ & 0x40) == 0x40) {
                    to_bitField0_ |= 0x40;
                }
                result.diagnosticsInfo_ = this.diagnosticsInfo_;
                if ((from_bitField0_ & 0x80) == 0x80) {
                    to_bitField0_ |= 0x80;
                }
                result.logUrl_ = this.logUrl_;
                if ((from_bitField0_ & 0x100) == 0x100) {
                    to_bitField0_ |= 0x100;
                }
                result.containerExitStatus_ = this.containerExitStatus_;
                if ((from_bitField0_ & 0x200) == 0x200) {
                    to_bitField0_ |= 0x200;
                }
                result.containerState_ = this.containerState_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerReportProto) {
                    return this.mergeFrom((ContainerReportProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerReportProto other) {
                if (other == ContainerReportProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasContainerId()) {
                    this.mergeContainerId(other.getContainerId());
                }
                if (other.hasResource()) {
                    this.mergeResource(other.getResource());
                }
                if (other.hasNodeId()) {
                    this.mergeNodeId(other.getNodeId());
                }
                if (other.hasPriority()) {
                    this.mergePriority(other.getPriority());
                }
                if (other.hasCreationTime()) {
                    this.setCreationTime(other.getCreationTime());
                }
                if (other.hasFinishTime()) {
                    this.setFinishTime(other.getFinishTime());
                }
                if (other.hasDiagnosticsInfo()) {
                    this.bitField0_ |= 0x40;
                    this.diagnosticsInfo_ = other.diagnosticsInfo_;
                    this.onChanged();
                }
                if (other.hasLogUrl()) {
                    this.bitField0_ |= 0x80;
                    this.logUrl_ = other.logUrl_;
                    this.onChanged();
                }
                if (other.hasContainerExitStatus()) {
                    this.setContainerExitStatus(other.getContainerExitStatus());
                }
                if (other.hasContainerState()) {
                    this.setContainerState(other.getContainerState());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerReportProto parsedMessage = null;
                try {
                    parsedMessage = ContainerReportProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerReportProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasContainerId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ContainerIdProto getContainerId() {
                if (this.containerIdBuilder_ == null) {
                    return this.containerId_;
                }
                return this.containerIdBuilder_.getMessage();
            }
            
            public Builder setContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.containerId_ = value;
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setContainerId(final ContainerIdProto.Builder builderForValue) {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.containerId_ != ContainerIdProto.getDefaultInstance()) {
                        this.containerId_ = ContainerIdProto.newBuilder(this.containerId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.containerId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearContainerId() {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ContainerIdProto.Builder getContainerIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getContainerIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
                if (this.containerIdBuilder_ != null) {
                    return this.containerIdBuilder_.getMessageOrBuilder();
                }
                return this.containerId_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getContainerIdFieldBuilder() {
                if (this.containerIdBuilder_ == null) {
                    this.containerIdBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.containerId_, this.getParentForChildren(), this.isClean());
                    this.containerId_ = null;
                }
                return this.containerIdBuilder_;
            }
            
            @Override
            public boolean hasResource() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ResourceProto getResource() {
                if (this.resourceBuilder_ == null) {
                    return this.resource_;
                }
                return this.resourceBuilder_.getMessage();
            }
            
            public Builder setResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.resource_ = value;
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setResource(final ResourceProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.resource_ != ResourceProto.getDefaultInstance()) {
                        this.resource_ = ResourceProto.newBuilder(this.resource_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.resource_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearResource() {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public ResourceProto.Builder getResourceBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getResourceFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getResourceOrBuilder() {
                if (this.resourceBuilder_ != null) {
                    return this.resourceBuilder_.getMessageOrBuilder();
                }
                return this.resource_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getResourceFieldBuilder() {
                if (this.resourceBuilder_ == null) {
                    this.resourceBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.resource_, this.getParentForChildren(), this.isClean());
                    this.resource_ = null;
                }
                return this.resourceBuilder_;
            }
            
            @Override
            public boolean hasNodeId() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public NodeIdProto getNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    return this.nodeId_;
                }
                return this.nodeIdBuilder_.getMessage();
            }
            
            public Builder setNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.nodeId_ = value;
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder setNodeId(final NodeIdProto.Builder builderForValue) {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder mergeNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 0x4 && this.nodeId_ != NodeIdProto.getDefaultInstance()) {
                        this.nodeId_ = NodeIdProto.newBuilder(this.nodeId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.nodeId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder clearNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public NodeIdProto.Builder getNodeIdBuilder() {
                this.bitField0_ |= 0x4;
                this.onChanged();
                return this.getNodeIdFieldBuilder().getBuilder();
            }
            
            @Override
            public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
                if (this.nodeIdBuilder_ != null) {
                    return this.nodeIdBuilder_.getMessageOrBuilder();
                }
                return this.nodeId_;
            }
            
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> getNodeIdFieldBuilder() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeIdBuilder_ = new SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder>(this.nodeId_, this.getParentForChildren(), this.isClean());
                    this.nodeId_ = null;
                }
                return this.nodeIdBuilder_;
            }
            
            @Override
            public boolean hasPriority() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public PriorityProto getPriority() {
                if (this.priorityBuilder_ == null) {
                    return this.priority_;
                }
                return this.priorityBuilder_.getMessage();
            }
            
            public Builder setPriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.priority_ = value;
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setPriority(final PriorityProto.Builder builderForValue) {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergePriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 0x8 && this.priority_ != PriorityProto.getDefaultInstance()) {
                        this.priority_ = PriorityProto.newBuilder(this.priority_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.priority_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder clearPriority() {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public PriorityProto.Builder getPriorityBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return this.getPriorityFieldBuilder().getBuilder();
            }
            
            @Override
            public PriorityProtoOrBuilder getPriorityOrBuilder() {
                if (this.priorityBuilder_ != null) {
                    return this.priorityBuilder_.getMessageOrBuilder();
                }
                return this.priority_;
            }
            
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> getPriorityFieldBuilder() {
                if (this.priorityBuilder_ == null) {
                    this.priorityBuilder_ = new SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder>(this.priority_, this.getParentForChildren(), this.isClean());
                    this.priority_ = null;
                }
                return this.priorityBuilder_;
            }
            
            @Override
            public boolean hasCreationTime() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public long getCreationTime() {
                return this.creationTime_;
            }
            
            public Builder setCreationTime(final long value) {
                this.bitField0_ |= 0x10;
                this.creationTime_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearCreationTime() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.creationTime_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasFinishTime() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public long getFinishTime() {
                return this.finishTime_;
            }
            
            public Builder setFinishTime(final long value) {
                this.bitField0_ |= 0x20;
                this.finishTime_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearFinishTime() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.finishTime_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasDiagnosticsInfo() {
                return (this.bitField0_ & 0x40) == 0x40;
            }
            
            @Override
            public String getDiagnosticsInfo() {
                final Object ref = this.diagnosticsInfo_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.diagnosticsInfo_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getDiagnosticsInfoBytes() {
                final Object ref = this.diagnosticsInfo_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.diagnosticsInfo_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setDiagnosticsInfo(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.diagnosticsInfo_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearDiagnosticsInfo() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.diagnosticsInfo_ = ContainerReportProto.getDefaultInstance().getDiagnosticsInfo();
                this.onChanged();
                return this;
            }
            
            public Builder setDiagnosticsInfoBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.diagnosticsInfo_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasLogUrl() {
                return (this.bitField0_ & 0x80) == 0x80;
            }
            
            @Override
            public String getLogUrl() {
                final Object ref = this.logUrl_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.logUrl_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getLogUrlBytes() {
                final Object ref = this.logUrl_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.logUrl_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setLogUrl(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.logUrl_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearLogUrl() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.logUrl_ = ContainerReportProto.getDefaultInstance().getLogUrl();
                this.onChanged();
                return this;
            }
            
            public Builder setLogUrlBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.logUrl_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasContainerExitStatus() {
                return (this.bitField0_ & 0x100) == 0x100;
            }
            
            @Override
            public int getContainerExitStatus() {
                return this.containerExitStatus_;
            }
            
            public Builder setContainerExitStatus(final int value) {
                this.bitField0_ |= 0x100;
                this.containerExitStatus_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearContainerExitStatus() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.containerExitStatus_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasContainerState() {
                return (this.bitField0_ & 0x200) == 0x200;
            }
            
            @Override
            public ContainerStateProto getContainerState() {
                return this.containerState_;
            }
            
            public Builder setContainerState(final ContainerStateProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x200;
                this.containerState_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearContainerState() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.containerState_ = ContainerStateProto.C_NEW;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class URLProto extends GeneratedMessage implements URLProtoOrBuilder
    {
        private static final URLProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<URLProto> PARSER;
        private int bitField0_;
        public static final int SCHEME_FIELD_NUMBER = 1;
        private Object scheme_;
        public static final int HOST_FIELD_NUMBER = 2;
        private Object host_;
        public static final int PORT_FIELD_NUMBER = 3;
        private int port_;
        public static final int FILE_FIELD_NUMBER = 4;
        private Object file_;
        public static final int USERINFO_FIELD_NUMBER = 5;
        private Object userInfo_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private URLProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private URLProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static URLProto getDefaultInstance() {
            return URLProto.defaultInstance;
        }
        
        @Override
        public URLProto getDefaultInstanceForType() {
            return URLProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private URLProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.scheme_ = input.readBytes();
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.host_ = input.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x4;
                            this.port_ = input.readInt32();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x8;
                            this.file_ = input.readBytes();
                            continue;
                        }
                        case 42: {
                            this.bitField0_ |= 0x10;
                            this.userInfo_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_URLProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_URLProto_fieldAccessorTable.ensureFieldAccessorsInitialized(URLProto.class, Builder.class);
        }
        
        @Override
        public Parser<URLProto> getParserForType() {
            return URLProto.PARSER;
        }
        
        @Override
        public boolean hasScheme() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getScheme() {
            final Object ref = this.scheme_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.scheme_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getSchemeBytes() {
            final Object ref = this.scheme_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.scheme_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasHost() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getHost() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.host_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getHostBytes() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.host_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasPort() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public int getPort() {
            return this.port_;
        }
        
        @Override
        public boolean hasFile() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public String getFile() {
            final Object ref = this.file_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.file_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getFileBytes() {
            final Object ref = this.file_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.file_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasUserInfo() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public String getUserInfo() {
            final Object ref = this.userInfo_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.userInfo_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getUserInfoBytes() {
            final Object ref = this.userInfo_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.userInfo_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.scheme_ = "";
            this.host_ = "";
            this.port_ = 0;
            this.file_ = "";
            this.userInfo_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getSchemeBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeInt32(3, this.port_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeBytes(4, this.getFileBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeBytes(5, this.getUserInfoBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getSchemeBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeInt32Size(3, this.port_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeBytesSize(4, this.getFileBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeBytesSize(5, this.getUserInfoBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof URLProto)) {
                return super.equals(obj);
            }
            final URLProto other = (URLProto)obj;
            boolean result = true;
            result = (result && this.hasScheme() == other.hasScheme());
            if (this.hasScheme()) {
                result = (result && this.getScheme().equals(other.getScheme()));
            }
            result = (result && this.hasHost() == other.hasHost());
            if (this.hasHost()) {
                result = (result && this.getHost().equals(other.getHost()));
            }
            result = (result && this.hasPort() == other.hasPort());
            if (this.hasPort()) {
                result = (result && this.getPort() == other.getPort());
            }
            result = (result && this.hasFile() == other.hasFile());
            if (this.hasFile()) {
                result = (result && this.getFile().equals(other.getFile()));
            }
            result = (result && this.hasUserInfo() == other.hasUserInfo());
            if (this.hasUserInfo()) {
                result = (result && this.getUserInfo().equals(other.getUserInfo()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasScheme()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getScheme().hashCode();
            }
            if (this.hasHost()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getHost().hashCode();
            }
            if (this.hasPort()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getPort();
            }
            if (this.hasFile()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getFile().hashCode();
            }
            if (this.hasUserInfo()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getUserInfo().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static URLProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return URLProto.PARSER.parseFrom(data);
        }
        
        public static URLProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return URLProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static URLProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return URLProto.PARSER.parseFrom(data);
        }
        
        public static URLProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return URLProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static URLProto parseFrom(final InputStream input) throws IOException {
            return URLProto.PARSER.parseFrom(input);
        }
        
        public static URLProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return URLProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static URLProto parseDelimitedFrom(final InputStream input) throws IOException {
            return URLProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static URLProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return URLProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static URLProto parseFrom(final CodedInputStream input) throws IOException {
            return URLProto.PARSER.parseFrom(input);
        }
        
        public static URLProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return URLProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final URLProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            URLProto.PARSER = new AbstractParser<URLProto>() {
                @Override
                public URLProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new URLProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new URLProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements URLProtoOrBuilder
        {
            private int bitField0_;
            private Object scheme_;
            private Object host_;
            private int port_;
            private Object file_;
            private Object userInfo_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_URLProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_URLProto_fieldAccessorTable.ensureFieldAccessorsInitialized(URLProto.class, Builder.class);
            }
            
            private Builder() {
                this.scheme_ = "";
                this.host_ = "";
                this.file_ = "";
                this.userInfo_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.scheme_ = "";
                this.host_ = "";
                this.file_ = "";
                this.userInfo_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (URLProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.scheme_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.host_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.port_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.file_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.userInfo_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_URLProto_descriptor;
            }
            
            @Override
            public URLProto getDefaultInstanceForType() {
                return URLProto.getDefaultInstance();
            }
            
            @Override
            public URLProto build() {
                final URLProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public URLProto buildPartial() {
                final URLProto result = new URLProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.scheme_ = this.scheme_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.host_ = this.host_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.port_ = this.port_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.file_ = this.file_;
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                result.userInfo_ = this.userInfo_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof URLProto) {
                    return this.mergeFrom((URLProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final URLProto other) {
                if (other == URLProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasScheme()) {
                    this.bitField0_ |= 0x1;
                    this.scheme_ = other.scheme_;
                    this.onChanged();
                }
                if (other.hasHost()) {
                    this.bitField0_ |= 0x2;
                    this.host_ = other.host_;
                    this.onChanged();
                }
                if (other.hasPort()) {
                    this.setPort(other.getPort());
                }
                if (other.hasFile()) {
                    this.bitField0_ |= 0x8;
                    this.file_ = other.file_;
                    this.onChanged();
                }
                if (other.hasUserInfo()) {
                    this.bitField0_ |= 0x10;
                    this.userInfo_ = other.userInfo_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                URLProto parsedMessage = null;
                try {
                    parsedMessage = URLProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (URLProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasScheme() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getScheme() {
                final Object ref = this.scheme_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.scheme_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getSchemeBytes() {
                final Object ref = this.scheme_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.scheme_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setScheme(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.scheme_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearScheme() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.scheme_ = URLProto.getDefaultInstance().getScheme();
                this.onChanged();
                return this;
            }
            
            public Builder setSchemeBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.scheme_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasHost() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getHost() {
                final Object ref = this.host_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.host_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getHostBytes() {
                final Object ref = this.host_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.host_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setHost(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearHost() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.host_ = URLProto.getDefaultInstance().getHost();
                this.onChanged();
                return this;
            }
            
            public Builder setHostBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasPort() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public int getPort() {
                return this.port_;
            }
            
            public Builder setPort(final int value) {
                this.bitField0_ |= 0x4;
                this.port_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearPort() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.port_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasFile() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public String getFile() {
                final Object ref = this.file_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.file_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getFileBytes() {
                final Object ref = this.file_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.file_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setFile(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.file_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearFile() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.file_ = URLProto.getDefaultInstance().getFile();
                this.onChanged();
                return this;
            }
            
            public Builder setFileBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.file_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasUserInfo() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public String getUserInfo() {
                final Object ref = this.userInfo_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.userInfo_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getUserInfoBytes() {
                final Object ref = this.userInfo_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.userInfo_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setUserInfo(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.userInfo_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearUserInfo() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.userInfo_ = URLProto.getDefaultInstance().getUserInfo();
                this.onChanged();
                return this;
            }
            
            public Builder setUserInfoBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.userInfo_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class LocalResourceProto extends GeneratedMessage implements LocalResourceProtoOrBuilder
    {
        private static final LocalResourceProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<LocalResourceProto> PARSER;
        private int bitField0_;
        public static final int RESOURCE_FIELD_NUMBER = 1;
        private URLProto resource_;
        public static final int SIZE_FIELD_NUMBER = 2;
        private long size_;
        public static final int TIMESTAMP_FIELD_NUMBER = 3;
        private long timestamp_;
        public static final int TYPE_FIELD_NUMBER = 4;
        private LocalResourceTypeProto type_;
        public static final int VISIBILITY_FIELD_NUMBER = 5;
        private LocalResourceVisibilityProto visibility_;
        public static final int PATTERN_FIELD_NUMBER = 6;
        private Object pattern_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private LocalResourceProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private LocalResourceProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static LocalResourceProto getDefaultInstance() {
            return LocalResourceProto.defaultInstance;
        }
        
        @Override
        public LocalResourceProto getDefaultInstanceForType() {
            return LocalResourceProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private LocalResourceProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            URLProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.resource_.toBuilder();
                            }
                            this.resource_ = input.readMessage(URLProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.resource_);
                                this.resource_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.size_ = input.readInt64();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x4;
                            this.timestamp_ = input.readInt64();
                            continue;
                        }
                        case 32: {
                            final int rawValue = input.readEnum();
                            final LocalResourceTypeProto value = LocalResourceTypeProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(4, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x8;
                            this.type_ = value;
                            continue;
                        }
                        case 40: {
                            final int rawValue = input.readEnum();
                            final LocalResourceVisibilityProto value2 = LocalResourceVisibilityProto.valueOf(rawValue);
                            if (value2 == null) {
                                unknownFields.mergeVarintField(5, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x10;
                            this.visibility_ = value2;
                            continue;
                        }
                        case 50: {
                            this.bitField0_ |= 0x20;
                            this.pattern_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_fieldAccessorTable.ensureFieldAccessorsInitialized(LocalResourceProto.class, Builder.class);
        }
        
        @Override
        public Parser<LocalResourceProto> getParserForType() {
            return LocalResourceProto.PARSER;
        }
        
        @Override
        public boolean hasResource() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public URLProto getResource() {
            return this.resource_;
        }
        
        @Override
        public URLProtoOrBuilder getResourceOrBuilder() {
            return this.resource_;
        }
        
        @Override
        public boolean hasSize() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public long getSize() {
            return this.size_;
        }
        
        @Override
        public boolean hasTimestamp() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public long getTimestamp() {
            return this.timestamp_;
        }
        
        @Override
        public boolean hasType() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public LocalResourceTypeProto getType() {
            return this.type_;
        }
        
        @Override
        public boolean hasVisibility() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public LocalResourceVisibilityProto getVisibility() {
            return this.visibility_;
        }
        
        @Override
        public boolean hasPattern() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public String getPattern() {
            final Object ref = this.pattern_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.pattern_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getPatternBytes() {
            final Object ref = this.pattern_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.pattern_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.resource_ = URLProto.getDefaultInstance();
            this.size_ = 0L;
            this.timestamp_ = 0L;
            this.type_ = LocalResourceTypeProto.ARCHIVE;
            this.visibility_ = LocalResourceVisibilityProto.PUBLIC;
            this.pattern_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.resource_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt64(2, this.size_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeInt64(3, this.timestamp_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeEnum(4, this.type_.getNumber());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeEnum(5, this.visibility_.getNumber());
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeBytes(6, this.getPatternBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.resource_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt64Size(2, this.size_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeInt64Size(3, this.timestamp_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeEnumSize(4, this.type_.getNumber());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeEnumSize(5, this.visibility_.getNumber());
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeBytesSize(6, this.getPatternBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof LocalResourceProto)) {
                return super.equals(obj);
            }
            final LocalResourceProto other = (LocalResourceProto)obj;
            boolean result = true;
            result = (result && this.hasResource() == other.hasResource());
            if (this.hasResource()) {
                result = (result && this.getResource().equals(other.getResource()));
            }
            result = (result && this.hasSize() == other.hasSize());
            if (this.hasSize()) {
                result = (result && this.getSize() == other.getSize());
            }
            result = (result && this.hasTimestamp() == other.hasTimestamp());
            if (this.hasTimestamp()) {
                result = (result && this.getTimestamp() == other.getTimestamp());
            }
            result = (result && this.hasType() == other.hasType());
            if (this.hasType()) {
                result = (result && this.getType() == other.getType());
            }
            result = (result && this.hasVisibility() == other.hasVisibility());
            if (this.hasVisibility()) {
                result = (result && this.getVisibility() == other.getVisibility());
            }
            result = (result && this.hasPattern() == other.hasPattern());
            if (this.hasPattern()) {
                result = (result && this.getPattern().equals(other.getPattern()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasResource()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getResource().hashCode();
            }
            if (this.hasSize()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + AbstractMessage.hashLong(this.getSize());
            }
            if (this.hasTimestamp()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + AbstractMessage.hashLong(this.getTimestamp());
            }
            if (this.hasType()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getType());
            }
            if (this.hasVisibility()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getVisibility());
            }
            if (this.hasPattern()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + this.getPattern().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static LocalResourceProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return LocalResourceProto.PARSER.parseFrom(data);
        }
        
        public static LocalResourceProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return LocalResourceProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static LocalResourceProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return LocalResourceProto.PARSER.parseFrom(data);
        }
        
        public static LocalResourceProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return LocalResourceProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static LocalResourceProto parseFrom(final InputStream input) throws IOException {
            return LocalResourceProto.PARSER.parseFrom(input);
        }
        
        public static LocalResourceProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return LocalResourceProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static LocalResourceProto parseDelimitedFrom(final InputStream input) throws IOException {
            return LocalResourceProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static LocalResourceProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return LocalResourceProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static LocalResourceProto parseFrom(final CodedInputStream input) throws IOException {
            return LocalResourceProto.PARSER.parseFrom(input);
        }
        
        public static LocalResourceProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return LocalResourceProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final LocalResourceProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            LocalResourceProto.PARSER = new AbstractParser<LocalResourceProto>() {
                @Override
                public LocalResourceProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new LocalResourceProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new LocalResourceProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements LocalResourceProtoOrBuilder
        {
            private int bitField0_;
            private URLProto resource_;
            private SingleFieldBuilder<URLProto, URLProto.Builder, URLProtoOrBuilder> resourceBuilder_;
            private long size_;
            private long timestamp_;
            private LocalResourceTypeProto type_;
            private LocalResourceVisibilityProto visibility_;
            private Object pattern_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_fieldAccessorTable.ensureFieldAccessorsInitialized(LocalResourceProto.class, Builder.class);
            }
            
            private Builder() {
                this.resource_ = URLProto.getDefaultInstance();
                this.type_ = LocalResourceTypeProto.ARCHIVE;
                this.visibility_ = LocalResourceVisibilityProto.PUBLIC;
                this.pattern_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.resource_ = URLProto.getDefaultInstance();
                this.type_ = LocalResourceTypeProto.ARCHIVE;
                this.visibility_ = LocalResourceVisibilityProto.PUBLIC;
                this.pattern_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (LocalResourceProto.alwaysUseFieldBuilders) {
                    this.getResourceFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.resourceBuilder_ == null) {
                    this.resource_ = URLProto.getDefaultInstance();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.size_ = 0L;
                this.bitField0_ &= 0xFFFFFFFD;
                this.timestamp_ = 0L;
                this.bitField0_ &= 0xFFFFFFFB;
                this.type_ = LocalResourceTypeProto.ARCHIVE;
                this.bitField0_ &= 0xFFFFFFF7;
                this.visibility_ = LocalResourceVisibilityProto.PUBLIC;
                this.bitField0_ &= 0xFFFFFFEF;
                this.pattern_ = "";
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_LocalResourceProto_descriptor;
            }
            
            @Override
            public LocalResourceProto getDefaultInstanceForType() {
                return LocalResourceProto.getDefaultInstance();
            }
            
            @Override
            public LocalResourceProto build() {
                final LocalResourceProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public LocalResourceProto buildPartial() {
                final LocalResourceProto result = new LocalResourceProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.resourceBuilder_ == null) {
                    result.resource_ = this.resource_;
                }
                else {
                    result.resource_ = this.resourceBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.size_ = this.size_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.timestamp_ = this.timestamp_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.type_ = this.type_;
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                result.visibility_ = this.visibility_;
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.pattern_ = this.pattern_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof LocalResourceProto) {
                    return this.mergeFrom((LocalResourceProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final LocalResourceProto other) {
                if (other == LocalResourceProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasResource()) {
                    this.mergeResource(other.getResource());
                }
                if (other.hasSize()) {
                    this.setSize(other.getSize());
                }
                if (other.hasTimestamp()) {
                    this.setTimestamp(other.getTimestamp());
                }
                if (other.hasType()) {
                    this.setType(other.getType());
                }
                if (other.hasVisibility()) {
                    this.setVisibility(other.getVisibility());
                }
                if (other.hasPattern()) {
                    this.bitField0_ |= 0x20;
                    this.pattern_ = other.pattern_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                LocalResourceProto parsedMessage = null;
                try {
                    parsedMessage = LocalResourceProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (LocalResourceProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasResource() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public URLProto getResource() {
                if (this.resourceBuilder_ == null) {
                    return this.resource_;
                }
                return this.resourceBuilder_.getMessage();
            }
            
            public Builder setResource(final URLProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.resource_ = value;
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setResource(final URLProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeResource(final URLProto value) {
                if (this.resourceBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.resource_ != URLProto.getDefaultInstance()) {
                        this.resource_ = URLProto.newBuilder(this.resource_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.resource_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearResource() {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = URLProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public URLProto.Builder getResourceBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getResourceFieldBuilder().getBuilder();
            }
            
            @Override
            public URLProtoOrBuilder getResourceOrBuilder() {
                if (this.resourceBuilder_ != null) {
                    return this.resourceBuilder_.getMessageOrBuilder();
                }
                return this.resource_;
            }
            
            private SingleFieldBuilder<URLProto, URLProto.Builder, URLProtoOrBuilder> getResourceFieldBuilder() {
                if (this.resourceBuilder_ == null) {
                    this.resourceBuilder_ = new SingleFieldBuilder<URLProto, URLProto.Builder, URLProtoOrBuilder>(this.resource_, this.getParentForChildren(), this.isClean());
                    this.resource_ = null;
                }
                return this.resourceBuilder_;
            }
            
            @Override
            public boolean hasSize() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public long getSize() {
                return this.size_;
            }
            
            public Builder setSize(final long value) {
                this.bitField0_ |= 0x2;
                this.size_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearSize() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.size_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasTimestamp() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public long getTimestamp() {
                return this.timestamp_;
            }
            
            public Builder setTimestamp(final long value) {
                this.bitField0_ |= 0x4;
                this.timestamp_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearTimestamp() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.timestamp_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasType() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public LocalResourceTypeProto getType() {
                return this.type_;
            }
            
            public Builder setType(final LocalResourceTypeProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.type_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearType() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.type_ = LocalResourceTypeProto.ARCHIVE;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasVisibility() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public LocalResourceVisibilityProto getVisibility() {
                return this.visibility_;
            }
            
            public Builder setVisibility(final LocalResourceVisibilityProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.visibility_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearVisibility() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.visibility_ = LocalResourceVisibilityProto.PUBLIC;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasPattern() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public String getPattern() {
                final Object ref = this.pattern_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.pattern_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getPatternBytes() {
                final Object ref = this.pattern_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.pattern_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setPattern(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.pattern_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearPattern() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.pattern_ = LocalResourceProto.getDefaultInstance().getPattern();
                this.onChanged();
                return this;
            }
            
            public Builder setPatternBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.pattern_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ApplicationResourceUsageReportProto extends GeneratedMessage implements ApplicationResourceUsageReportProtoOrBuilder
    {
        private static final ApplicationResourceUsageReportProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ApplicationResourceUsageReportProto> PARSER;
        private int bitField0_;
        public static final int NUM_USED_CONTAINERS_FIELD_NUMBER = 1;
        private int numUsedContainers_;
        public static final int NUM_RESERVED_CONTAINERS_FIELD_NUMBER = 2;
        private int numReservedContainers_;
        public static final int USED_RESOURCES_FIELD_NUMBER = 3;
        private ResourceProto usedResources_;
        public static final int RESERVED_RESOURCES_FIELD_NUMBER = 4;
        private ResourceProto reservedResources_;
        public static final int NEEDED_RESOURCES_FIELD_NUMBER = 5;
        private ResourceProto neededResources_;
        public static final int MEMORY_SECONDS_FIELD_NUMBER = 6;
        private long memorySeconds_;
        public static final int VCORE_SECONDS_FIELD_NUMBER = 7;
        private long vcoreSeconds_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ApplicationResourceUsageReportProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ApplicationResourceUsageReportProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ApplicationResourceUsageReportProto getDefaultInstance() {
            return ApplicationResourceUsageReportProto.defaultInstance;
        }
        
        @Override
        public ApplicationResourceUsageReportProto getDefaultInstanceForType() {
            return ApplicationResourceUsageReportProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ApplicationResourceUsageReportProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            this.bitField0_ |= 0x1;
                            this.numUsedContainers_ = input.readInt32();
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.numReservedContainers_ = input.readInt32();
                            continue;
                        }
                        case 26: {
                            ResourceProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x4) == 0x4) {
                                subBuilder = this.usedResources_.toBuilder();
                            }
                            this.usedResources_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.usedResources_);
                                this.usedResources_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            continue;
                        }
                        case 34: {
                            ResourceProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                subBuilder = this.reservedResources_.toBuilder();
                            }
                            this.reservedResources_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.reservedResources_);
                                this.reservedResources_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                        case 42: {
                            ResourceProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x10) == 0x10) {
                                subBuilder = this.neededResources_.toBuilder();
                            }
                            this.neededResources_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.neededResources_);
                                this.neededResources_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x10;
                            continue;
                        }
                        case 48: {
                            this.bitField0_ |= 0x20;
                            this.memorySeconds_ = input.readInt64();
                            continue;
                        }
                        case 56: {
                            this.bitField0_ |= 0x40;
                            this.vcoreSeconds_ = input.readInt64();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationResourceUsageReportProto.class, Builder.class);
        }
        
        @Override
        public Parser<ApplicationResourceUsageReportProto> getParserForType() {
            return ApplicationResourceUsageReportProto.PARSER;
        }
        
        @Override
        public boolean hasNumUsedContainers() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public int getNumUsedContainers() {
            return this.numUsedContainers_;
        }
        
        @Override
        public boolean hasNumReservedContainers() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public int getNumReservedContainers() {
            return this.numReservedContainers_;
        }
        
        @Override
        public boolean hasUsedResources() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public ResourceProto getUsedResources() {
            return this.usedResources_;
        }
        
        @Override
        public ResourceProtoOrBuilder getUsedResourcesOrBuilder() {
            return this.usedResources_;
        }
        
        @Override
        public boolean hasReservedResources() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public ResourceProto getReservedResources() {
            return this.reservedResources_;
        }
        
        @Override
        public ResourceProtoOrBuilder getReservedResourcesOrBuilder() {
            return this.reservedResources_;
        }
        
        @Override
        public boolean hasNeededResources() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public ResourceProto getNeededResources() {
            return this.neededResources_;
        }
        
        @Override
        public ResourceProtoOrBuilder getNeededResourcesOrBuilder() {
            return this.neededResources_;
        }
        
        @Override
        public boolean hasMemorySeconds() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public long getMemorySeconds() {
            return this.memorySeconds_;
        }
        
        @Override
        public boolean hasVcoreSeconds() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        @Override
        public long getVcoreSeconds() {
            return this.vcoreSeconds_;
        }
        
        private void initFields() {
            this.numUsedContainers_ = 0;
            this.numReservedContainers_ = 0;
            this.usedResources_ = ResourceProto.getDefaultInstance();
            this.reservedResources_ = ResourceProto.getDefaultInstance();
            this.neededResources_ = ResourceProto.getDefaultInstance();
            this.memorySeconds_ = 0L;
            this.vcoreSeconds_ = 0L;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeInt32(1, this.numUsedContainers_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt32(2, this.numReservedContainers_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeMessage(3, this.usedResources_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeMessage(4, this.reservedResources_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeMessage(5, this.neededResources_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeInt64(6, this.memorySeconds_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                output.writeInt64(7, this.vcoreSeconds_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeInt32Size(1, this.numUsedContainers_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt32Size(2, this.numReservedContainers_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeMessageSize(3, this.usedResources_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeMessageSize(4, this.reservedResources_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeMessageSize(5, this.neededResources_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeInt64Size(6, this.memorySeconds_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                size += CodedOutputStream.computeInt64Size(7, this.vcoreSeconds_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ApplicationResourceUsageReportProto)) {
                return super.equals(obj);
            }
            final ApplicationResourceUsageReportProto other = (ApplicationResourceUsageReportProto)obj;
            boolean result = true;
            result = (result && this.hasNumUsedContainers() == other.hasNumUsedContainers());
            if (this.hasNumUsedContainers()) {
                result = (result && this.getNumUsedContainers() == other.getNumUsedContainers());
            }
            result = (result && this.hasNumReservedContainers() == other.hasNumReservedContainers());
            if (this.hasNumReservedContainers()) {
                result = (result && this.getNumReservedContainers() == other.getNumReservedContainers());
            }
            result = (result && this.hasUsedResources() == other.hasUsedResources());
            if (this.hasUsedResources()) {
                result = (result && this.getUsedResources().equals(other.getUsedResources()));
            }
            result = (result && this.hasReservedResources() == other.hasReservedResources());
            if (this.hasReservedResources()) {
                result = (result && this.getReservedResources().equals(other.getReservedResources()));
            }
            result = (result && this.hasNeededResources() == other.hasNeededResources());
            if (this.hasNeededResources()) {
                result = (result && this.getNeededResources().equals(other.getNeededResources()));
            }
            result = (result && this.hasMemorySeconds() == other.hasMemorySeconds());
            if (this.hasMemorySeconds()) {
                result = (result && this.getMemorySeconds() == other.getMemorySeconds());
            }
            result = (result && this.hasVcoreSeconds() == other.hasVcoreSeconds());
            if (this.hasVcoreSeconds()) {
                result = (result && this.getVcoreSeconds() == other.getVcoreSeconds());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasNumUsedContainers()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getNumUsedContainers();
            }
            if (this.hasNumReservedContainers()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getNumReservedContainers();
            }
            if (this.hasUsedResources()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getUsedResources().hashCode();
            }
            if (this.hasReservedResources()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getReservedResources().hashCode();
            }
            if (this.hasNeededResources()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getNeededResources().hashCode();
            }
            if (this.hasMemorySeconds()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + AbstractMessage.hashLong(this.getMemorySeconds());
            }
            if (this.hasVcoreSeconds()) {
                hash = 37 * hash + 7;
                hash = 53 * hash + AbstractMessage.hashLong(this.getVcoreSeconds());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final InputStream input) throws IOException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ApplicationResourceUsageReportProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ApplicationResourceUsageReportProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ApplicationResourceUsageReportProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationResourceUsageReportProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final CodedInputStream input) throws IOException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationResourceUsageReportProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationResourceUsageReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ApplicationResourceUsageReportProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ApplicationResourceUsageReportProto.PARSER = new AbstractParser<ApplicationResourceUsageReportProto>() {
                @Override
                public ApplicationResourceUsageReportProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ApplicationResourceUsageReportProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ApplicationResourceUsageReportProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ApplicationResourceUsageReportProtoOrBuilder
        {
            private int bitField0_;
            private int numUsedContainers_;
            private int numReservedContainers_;
            private ResourceProto usedResources_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> usedResourcesBuilder_;
            private ResourceProto reservedResources_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> reservedResourcesBuilder_;
            private ResourceProto neededResources_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> neededResourcesBuilder_;
            private long memorySeconds_;
            private long vcoreSeconds_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationResourceUsageReportProto.class, Builder.class);
            }
            
            private Builder() {
                this.usedResources_ = ResourceProto.getDefaultInstance();
                this.reservedResources_ = ResourceProto.getDefaultInstance();
                this.neededResources_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.usedResources_ = ResourceProto.getDefaultInstance();
                this.reservedResources_ = ResourceProto.getDefaultInstance();
                this.neededResources_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ApplicationResourceUsageReportProto.alwaysUseFieldBuilders) {
                    this.getUsedResourcesFieldBuilder();
                    this.getReservedResourcesFieldBuilder();
                    this.getNeededResourcesFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.numUsedContainers_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                this.numReservedContainers_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.usedResourcesBuilder_ == null) {
                    this.usedResources_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.usedResourcesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.reservedResourcesBuilder_ == null) {
                    this.reservedResources_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.reservedResourcesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.neededResourcesBuilder_ == null) {
                    this.neededResources_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.neededResourcesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                this.memorySeconds_ = 0L;
                this.bitField0_ &= 0xFFFFFFDF;
                this.vcoreSeconds_ = 0L;
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationResourceUsageReportProto_descriptor;
            }
            
            @Override
            public ApplicationResourceUsageReportProto getDefaultInstanceForType() {
                return ApplicationResourceUsageReportProto.getDefaultInstance();
            }
            
            @Override
            public ApplicationResourceUsageReportProto build() {
                final ApplicationResourceUsageReportProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ApplicationResourceUsageReportProto buildPartial() {
                final ApplicationResourceUsageReportProto result = new ApplicationResourceUsageReportProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.numUsedContainers_ = this.numUsedContainers_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.numReservedContainers_ = this.numReservedContainers_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.usedResourcesBuilder_ == null) {
                    result.usedResources_ = this.usedResources_;
                }
                else {
                    result.usedResources_ = this.usedResourcesBuilder_.build();
                }
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                if (this.reservedResourcesBuilder_ == null) {
                    result.reservedResources_ = this.reservedResources_;
                }
                else {
                    result.reservedResources_ = this.reservedResourcesBuilder_.build();
                }
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                if (this.neededResourcesBuilder_ == null) {
                    result.neededResources_ = this.neededResources_;
                }
                else {
                    result.neededResources_ = this.neededResourcesBuilder_.build();
                }
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.memorySeconds_ = this.memorySeconds_;
                if ((from_bitField0_ & 0x40) == 0x40) {
                    to_bitField0_ |= 0x40;
                }
                result.vcoreSeconds_ = this.vcoreSeconds_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ApplicationResourceUsageReportProto) {
                    return this.mergeFrom((ApplicationResourceUsageReportProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ApplicationResourceUsageReportProto other) {
                if (other == ApplicationResourceUsageReportProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasNumUsedContainers()) {
                    this.setNumUsedContainers(other.getNumUsedContainers());
                }
                if (other.hasNumReservedContainers()) {
                    this.setNumReservedContainers(other.getNumReservedContainers());
                }
                if (other.hasUsedResources()) {
                    this.mergeUsedResources(other.getUsedResources());
                }
                if (other.hasReservedResources()) {
                    this.mergeReservedResources(other.getReservedResources());
                }
                if (other.hasNeededResources()) {
                    this.mergeNeededResources(other.getNeededResources());
                }
                if (other.hasMemorySeconds()) {
                    this.setMemorySeconds(other.getMemorySeconds());
                }
                if (other.hasVcoreSeconds()) {
                    this.setVcoreSeconds(other.getVcoreSeconds());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ApplicationResourceUsageReportProto parsedMessage = null;
                try {
                    parsedMessage = ApplicationResourceUsageReportProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ApplicationResourceUsageReportProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasNumUsedContainers() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public int getNumUsedContainers() {
                return this.numUsedContainers_;
            }
            
            public Builder setNumUsedContainers(final int value) {
                this.bitField0_ |= 0x1;
                this.numUsedContainers_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNumUsedContainers() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.numUsedContainers_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasNumReservedContainers() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public int getNumReservedContainers() {
                return this.numReservedContainers_;
            }
            
            public Builder setNumReservedContainers(final int value) {
                this.bitField0_ |= 0x2;
                this.numReservedContainers_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNumReservedContainers() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.numReservedContainers_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasUsedResources() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public ResourceProto getUsedResources() {
                if (this.usedResourcesBuilder_ == null) {
                    return this.usedResources_;
                }
                return this.usedResourcesBuilder_.getMessage();
            }
            
            public Builder setUsedResources(final ResourceProto value) {
                if (this.usedResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.usedResources_ = value;
                    this.onChanged();
                }
                else {
                    this.usedResourcesBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder setUsedResources(final ResourceProto.Builder builderForValue) {
                if (this.usedResourcesBuilder_ == null) {
                    this.usedResources_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.usedResourcesBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder mergeUsedResources(final ResourceProto value) {
                if (this.usedResourcesBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 0x4 && this.usedResources_ != ResourceProto.getDefaultInstance()) {
                        this.usedResources_ = ResourceProto.newBuilder(this.usedResources_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.usedResources_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.usedResourcesBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder clearUsedResources() {
                if (this.usedResourcesBuilder_ == null) {
                    this.usedResources_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.usedResourcesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public ResourceProto.Builder getUsedResourcesBuilder() {
                this.bitField0_ |= 0x4;
                this.onChanged();
                return this.getUsedResourcesFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getUsedResourcesOrBuilder() {
                if (this.usedResourcesBuilder_ != null) {
                    return this.usedResourcesBuilder_.getMessageOrBuilder();
                }
                return this.usedResources_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getUsedResourcesFieldBuilder() {
                if (this.usedResourcesBuilder_ == null) {
                    this.usedResourcesBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.usedResources_, this.getParentForChildren(), this.isClean());
                    this.usedResources_ = null;
                }
                return this.usedResourcesBuilder_;
            }
            
            @Override
            public boolean hasReservedResources() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public ResourceProto getReservedResources() {
                if (this.reservedResourcesBuilder_ == null) {
                    return this.reservedResources_;
                }
                return this.reservedResourcesBuilder_.getMessage();
            }
            
            public Builder setReservedResources(final ResourceProto value) {
                if (this.reservedResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.reservedResources_ = value;
                    this.onChanged();
                }
                else {
                    this.reservedResourcesBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setReservedResources(final ResourceProto.Builder builderForValue) {
                if (this.reservedResourcesBuilder_ == null) {
                    this.reservedResources_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.reservedResourcesBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergeReservedResources(final ResourceProto value) {
                if (this.reservedResourcesBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 0x8 && this.reservedResources_ != ResourceProto.getDefaultInstance()) {
                        this.reservedResources_ = ResourceProto.newBuilder(this.reservedResources_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.reservedResources_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.reservedResourcesBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder clearReservedResources() {
                if (this.reservedResourcesBuilder_ == null) {
                    this.reservedResources_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.reservedResourcesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public ResourceProto.Builder getReservedResourcesBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return this.getReservedResourcesFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getReservedResourcesOrBuilder() {
                if (this.reservedResourcesBuilder_ != null) {
                    return this.reservedResourcesBuilder_.getMessageOrBuilder();
                }
                return this.reservedResources_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getReservedResourcesFieldBuilder() {
                if (this.reservedResourcesBuilder_ == null) {
                    this.reservedResourcesBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.reservedResources_, this.getParentForChildren(), this.isClean());
                    this.reservedResources_ = null;
                }
                return this.reservedResourcesBuilder_;
            }
            
            @Override
            public boolean hasNeededResources() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public ResourceProto getNeededResources() {
                if (this.neededResourcesBuilder_ == null) {
                    return this.neededResources_;
                }
                return this.neededResourcesBuilder_.getMessage();
            }
            
            public Builder setNeededResources(final ResourceProto value) {
                if (this.neededResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.neededResources_ = value;
                    this.onChanged();
                }
                else {
                    this.neededResourcesBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder setNeededResources(final ResourceProto.Builder builderForValue) {
                if (this.neededResourcesBuilder_ == null) {
                    this.neededResources_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.neededResourcesBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder mergeNeededResources(final ResourceProto value) {
                if (this.neededResourcesBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) == 0x10 && this.neededResources_ != ResourceProto.getDefaultInstance()) {
                        this.neededResources_ = ResourceProto.newBuilder(this.neededResources_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.neededResources_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.neededResourcesBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder clearNeededResources() {
                if (this.neededResourcesBuilder_ == null) {
                    this.neededResources_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.neededResourcesBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public ResourceProto.Builder getNeededResourcesBuilder() {
                this.bitField0_ |= 0x10;
                this.onChanged();
                return this.getNeededResourcesFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getNeededResourcesOrBuilder() {
                if (this.neededResourcesBuilder_ != null) {
                    return this.neededResourcesBuilder_.getMessageOrBuilder();
                }
                return this.neededResources_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getNeededResourcesFieldBuilder() {
                if (this.neededResourcesBuilder_ == null) {
                    this.neededResourcesBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.neededResources_, this.getParentForChildren(), this.isClean());
                    this.neededResources_ = null;
                }
                return this.neededResourcesBuilder_;
            }
            
            @Override
            public boolean hasMemorySeconds() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public long getMemorySeconds() {
                return this.memorySeconds_;
            }
            
            public Builder setMemorySeconds(final long value) {
                this.bitField0_ |= 0x20;
                this.memorySeconds_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearMemorySeconds() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.memorySeconds_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasVcoreSeconds() {
                return (this.bitField0_ & 0x40) == 0x40;
            }
            
            @Override
            public long getVcoreSeconds() {
                return this.vcoreSeconds_;
            }
            
            public Builder setVcoreSeconds(final long value) {
                this.bitField0_ |= 0x40;
                this.vcoreSeconds_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearVcoreSeconds() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.vcoreSeconds_ = 0L;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ApplicationReportProto extends GeneratedMessage implements ApplicationReportProtoOrBuilder
    {
        private static final ApplicationReportProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ApplicationReportProto> PARSER;
        private int bitField0_;
        public static final int APPLICATIONID_FIELD_NUMBER = 1;
        private ApplicationIdProto applicationId_;
        public static final int USER_FIELD_NUMBER = 2;
        private Object user_;
        public static final int QUEUE_FIELD_NUMBER = 3;
        private Object queue_;
        public static final int NAME_FIELD_NUMBER = 4;
        private Object name_;
        public static final int HOST_FIELD_NUMBER = 5;
        private Object host_;
        public static final int RPC_PORT_FIELD_NUMBER = 6;
        private int rpcPort_;
        public static final int CLIENT_TO_AM_TOKEN_FIELD_NUMBER = 7;
        private SecurityProtos.TokenProto clientToAmToken_;
        public static final int YARN_APPLICATION_STATE_FIELD_NUMBER = 8;
        private YarnApplicationStateProto yarnApplicationState_;
        public static final int TRACKINGURL_FIELD_NUMBER = 9;
        private Object trackingUrl_;
        public static final int DIAGNOSTICS_FIELD_NUMBER = 10;
        private Object diagnostics_;
        public static final int STARTTIME_FIELD_NUMBER = 11;
        private long startTime_;
        public static final int FINISHTIME_FIELD_NUMBER = 12;
        private long finishTime_;
        public static final int FINAL_APPLICATION_STATUS_FIELD_NUMBER = 13;
        private FinalApplicationStatusProto finalApplicationStatus_;
        public static final int APP_RESOURCE_USAGE_FIELD_NUMBER = 14;
        private ApplicationResourceUsageReportProto appResourceUsage_;
        public static final int ORIGINALTRACKINGURL_FIELD_NUMBER = 15;
        private Object originalTrackingUrl_;
        public static final int CURRENTAPPLICATIONATTEMPTID_FIELD_NUMBER = 16;
        private ApplicationAttemptIdProto currentApplicationAttemptId_;
        public static final int PROGRESS_FIELD_NUMBER = 17;
        private float progress_;
        public static final int APPLICATIONTYPE_FIELD_NUMBER = 18;
        private Object applicationType_;
        public static final int AM_RM_TOKEN_FIELD_NUMBER = 19;
        private SecurityProtos.TokenProto amRmToken_;
        public static final int APPLICATIONTAGS_FIELD_NUMBER = 20;
        private LazyStringList applicationTags_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ApplicationReportProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ApplicationReportProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ApplicationReportProto getDefaultInstance() {
            return ApplicationReportProto.defaultInstance;
        }
        
        @Override
        public ApplicationReportProto getDefaultInstanceForType() {
            return ApplicationReportProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ApplicationReportProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ApplicationIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.applicationId_.toBuilder();
                            }
                            this.applicationId_ = input.readMessage(ApplicationIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.applicationId_);
                                this.applicationId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.user_ = input.readBytes();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x4;
                            this.queue_ = input.readBytes();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x8;
                            this.name_ = input.readBytes();
                            continue;
                        }
                        case 42: {
                            this.bitField0_ |= 0x10;
                            this.host_ = input.readBytes();
                            continue;
                        }
                        case 48: {
                            this.bitField0_ |= 0x20;
                            this.rpcPort_ = input.readInt32();
                            continue;
                        }
                        case 58: {
                            SecurityProtos.TokenProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x40) == 0x40) {
                                subBuilder2 = this.clientToAmToken_.toBuilder();
                            }
                            this.clientToAmToken_ = input.readMessage(SecurityProtos.TokenProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.clientToAmToken_);
                                this.clientToAmToken_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x40;
                            continue;
                        }
                        case 64: {
                            final int rawValue = input.readEnum();
                            final YarnApplicationStateProto value = YarnApplicationStateProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(8, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x80;
                            this.yarnApplicationState_ = value;
                            continue;
                        }
                        case 74: {
                            this.bitField0_ |= 0x100;
                            this.trackingUrl_ = input.readBytes();
                            continue;
                        }
                        case 82: {
                            this.bitField0_ |= 0x200;
                            this.diagnostics_ = input.readBytes();
                            continue;
                        }
                        case 88: {
                            this.bitField0_ |= 0x400;
                            this.startTime_ = input.readInt64();
                            continue;
                        }
                        case 96: {
                            this.bitField0_ |= 0x800;
                            this.finishTime_ = input.readInt64();
                            continue;
                        }
                        case 104: {
                            final int rawValue = input.readEnum();
                            final FinalApplicationStatusProto value2 = FinalApplicationStatusProto.valueOf(rawValue);
                            if (value2 == null) {
                                unknownFields.mergeVarintField(13, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x1000;
                            this.finalApplicationStatus_ = value2;
                            continue;
                        }
                        case 114: {
                            ApplicationResourceUsageReportProto.Builder subBuilder3 = null;
                            if ((this.bitField0_ & 0x2000) == 0x2000) {
                                subBuilder3 = this.appResourceUsage_.toBuilder();
                            }
                            this.appResourceUsage_ = input.readMessage(ApplicationResourceUsageReportProto.PARSER, extensionRegistry);
                            if (subBuilder3 != null) {
                                subBuilder3.mergeFrom(this.appResourceUsage_);
                                this.appResourceUsage_ = subBuilder3.buildPartial();
                            }
                            this.bitField0_ |= 0x2000;
                            continue;
                        }
                        case 122: {
                            this.bitField0_ |= 0x4000;
                            this.originalTrackingUrl_ = input.readBytes();
                            continue;
                        }
                        case 130: {
                            ApplicationAttemptIdProto.Builder subBuilder4 = null;
                            if ((this.bitField0_ & 0x8000) == 0x8000) {
                                subBuilder4 = this.currentApplicationAttemptId_.toBuilder();
                            }
                            this.currentApplicationAttemptId_ = input.readMessage(ApplicationAttemptIdProto.PARSER, extensionRegistry);
                            if (subBuilder4 != null) {
                                subBuilder4.mergeFrom(this.currentApplicationAttemptId_);
                                this.currentApplicationAttemptId_ = subBuilder4.buildPartial();
                            }
                            this.bitField0_ |= 0x8000;
                            continue;
                        }
                        case 141: {
                            this.bitField0_ |= 0x10000;
                            this.progress_ = input.readFloat();
                            continue;
                        }
                        case 146: {
                            this.bitField0_ |= 0x20000;
                            this.applicationType_ = input.readBytes();
                            continue;
                        }
                        case 154: {
                            SecurityProtos.TokenProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x40000) == 0x40000) {
                                subBuilder2 = this.amRmToken_.toBuilder();
                            }
                            this.amRmToken_ = input.readMessage(SecurityProtos.TokenProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.amRmToken_);
                                this.amRmToken_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x40000;
                            continue;
                        }
                        case 162: {
                            if ((mutable_bitField0_ & 0x80000) != 0x80000) {
                                this.applicationTags_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x80000;
                            }
                            this.applicationTags_.add(input.readBytes());
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x80000) == 0x80000) {
                    this.applicationTags_ = new UnmodifiableLazyStringList(this.applicationTags_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationReportProto.class, Builder.class);
        }
        
        @Override
        public Parser<ApplicationReportProto> getParserForType() {
            return ApplicationReportProto.PARSER;
        }
        
        @Override
        public boolean hasApplicationId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ApplicationIdProto getApplicationId() {
            return this.applicationId_;
        }
        
        @Override
        public ApplicationIdProtoOrBuilder getApplicationIdOrBuilder() {
            return this.applicationId_;
        }
        
        @Override
        public boolean hasUser() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getUser() {
            final Object ref = this.user_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.user_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getUserBytes() {
            final Object ref = this.user_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.user_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasQueue() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public String getQueue() {
            final Object ref = this.queue_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.queue_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getQueueBytes() {
            final Object ref = this.queue_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.queue_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasName() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public String getName() {
            final Object ref = this.name_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.name_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getNameBytes() {
            final Object ref = this.name_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.name_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasHost() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public String getHost() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.host_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getHostBytes() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.host_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasRpcPort() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public int getRpcPort() {
            return this.rpcPort_;
        }
        
        @Override
        public boolean hasClientToAmToken() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        @Override
        public SecurityProtos.TokenProto getClientToAmToken() {
            return this.clientToAmToken_;
        }
        
        @Override
        public SecurityProtos.TokenProtoOrBuilder getClientToAmTokenOrBuilder() {
            return this.clientToAmToken_;
        }
        
        @Override
        public boolean hasYarnApplicationState() {
            return (this.bitField0_ & 0x80) == 0x80;
        }
        
        @Override
        public YarnApplicationStateProto getYarnApplicationState() {
            return this.yarnApplicationState_;
        }
        
        @Override
        public boolean hasTrackingUrl() {
            return (this.bitField0_ & 0x100) == 0x100;
        }
        
        @Override
        public String getTrackingUrl() {
            final Object ref = this.trackingUrl_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.trackingUrl_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getTrackingUrlBytes() {
            final Object ref = this.trackingUrl_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.trackingUrl_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasDiagnostics() {
            return (this.bitField0_ & 0x200) == 0x200;
        }
        
        @Override
        public String getDiagnostics() {
            final Object ref = this.diagnostics_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.diagnostics_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getDiagnosticsBytes() {
            final Object ref = this.diagnostics_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.diagnostics_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasStartTime() {
            return (this.bitField0_ & 0x400) == 0x400;
        }
        
        @Override
        public long getStartTime() {
            return this.startTime_;
        }
        
        @Override
        public boolean hasFinishTime() {
            return (this.bitField0_ & 0x800) == 0x800;
        }
        
        @Override
        public long getFinishTime() {
            return this.finishTime_;
        }
        
        @Override
        public boolean hasFinalApplicationStatus() {
            return (this.bitField0_ & 0x1000) == 0x1000;
        }
        
        @Override
        public FinalApplicationStatusProto getFinalApplicationStatus() {
            return this.finalApplicationStatus_;
        }
        
        @Override
        public boolean hasAppResourceUsage() {
            return (this.bitField0_ & 0x2000) == 0x2000;
        }
        
        @Override
        public ApplicationResourceUsageReportProto getAppResourceUsage() {
            return this.appResourceUsage_;
        }
        
        @Override
        public ApplicationResourceUsageReportProtoOrBuilder getAppResourceUsageOrBuilder() {
            return this.appResourceUsage_;
        }
        
        @Override
        public boolean hasOriginalTrackingUrl() {
            return (this.bitField0_ & 0x4000) == 0x4000;
        }
        
        @Override
        public String getOriginalTrackingUrl() {
            final Object ref = this.originalTrackingUrl_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.originalTrackingUrl_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getOriginalTrackingUrlBytes() {
            final Object ref = this.originalTrackingUrl_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.originalTrackingUrl_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasCurrentApplicationAttemptId() {
            return (this.bitField0_ & 0x8000) == 0x8000;
        }
        
        @Override
        public ApplicationAttemptIdProto getCurrentApplicationAttemptId() {
            return this.currentApplicationAttemptId_;
        }
        
        @Override
        public ApplicationAttemptIdProtoOrBuilder getCurrentApplicationAttemptIdOrBuilder() {
            return this.currentApplicationAttemptId_;
        }
        
        @Override
        public boolean hasProgress() {
            return (this.bitField0_ & 0x10000) == 0x10000;
        }
        
        @Override
        public float getProgress() {
            return this.progress_;
        }
        
        @Override
        public boolean hasApplicationType() {
            return (this.bitField0_ & 0x20000) == 0x20000;
        }
        
        @Override
        public String getApplicationType() {
            final Object ref = this.applicationType_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.applicationType_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getApplicationTypeBytes() {
            final Object ref = this.applicationType_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.applicationType_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasAmRmToken() {
            return (this.bitField0_ & 0x40000) == 0x40000;
        }
        
        @Override
        public SecurityProtos.TokenProto getAmRmToken() {
            return this.amRmToken_;
        }
        
        @Override
        public SecurityProtos.TokenProtoOrBuilder getAmRmTokenOrBuilder() {
            return this.amRmToken_;
        }
        
        @Override
        public List<String> getApplicationTagsList() {
            return this.applicationTags_;
        }
        
        @Override
        public int getApplicationTagsCount() {
            return this.applicationTags_.size();
        }
        
        @Override
        public String getApplicationTags(final int index) {
            return this.applicationTags_.get(index);
        }
        
        @Override
        public ByteString getApplicationTagsBytes(final int index) {
            return this.applicationTags_.getByteString(index);
        }
        
        private void initFields() {
            this.applicationId_ = ApplicationIdProto.getDefaultInstance();
            this.user_ = "";
            this.queue_ = "";
            this.name_ = "";
            this.host_ = "";
            this.rpcPort_ = 0;
            this.clientToAmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
            this.yarnApplicationState_ = YarnApplicationStateProto.NEW;
            this.trackingUrl_ = "";
            this.diagnostics_ = "N/A";
            this.startTime_ = 0L;
            this.finishTime_ = 0L;
            this.finalApplicationStatus_ = FinalApplicationStatusProto.APP_UNDEFINED;
            this.appResourceUsage_ = ApplicationResourceUsageReportProto.getDefaultInstance();
            this.originalTrackingUrl_ = "";
            this.currentApplicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
            this.progress_ = 0.0f;
            this.applicationType_ = "";
            this.amRmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
            this.applicationTags_ = LazyStringArrayList.EMPTY;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            if (this.hasClientToAmToken() && !this.getClientToAmToken().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            if (this.hasAmRmToken() && !this.getAmRmToken().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.applicationId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getUserBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeBytes(3, this.getQueueBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeBytes(4, this.getNameBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeBytes(5, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeInt32(6, this.rpcPort_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                output.writeMessage(7, this.clientToAmToken_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                output.writeEnum(8, this.yarnApplicationState_.getNumber());
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                output.writeBytes(9, this.getTrackingUrlBytes());
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                output.writeBytes(10, this.getDiagnosticsBytes());
            }
            if ((this.bitField0_ & 0x400) == 0x400) {
                output.writeInt64(11, this.startTime_);
            }
            if ((this.bitField0_ & 0x800) == 0x800) {
                output.writeInt64(12, this.finishTime_);
            }
            if ((this.bitField0_ & 0x1000) == 0x1000) {
                output.writeEnum(13, this.finalApplicationStatus_.getNumber());
            }
            if ((this.bitField0_ & 0x2000) == 0x2000) {
                output.writeMessage(14, this.appResourceUsage_);
            }
            if ((this.bitField0_ & 0x4000) == 0x4000) {
                output.writeBytes(15, this.getOriginalTrackingUrlBytes());
            }
            if ((this.bitField0_ & 0x8000) == 0x8000) {
                output.writeMessage(16, this.currentApplicationAttemptId_);
            }
            if ((this.bitField0_ & 0x10000) == 0x10000) {
                output.writeFloat(17, this.progress_);
            }
            if ((this.bitField0_ & 0x20000) == 0x20000) {
                output.writeBytes(18, this.getApplicationTypeBytes());
            }
            if ((this.bitField0_ & 0x40000) == 0x40000) {
                output.writeMessage(19, this.amRmToken_);
            }
            for (int i = 0; i < this.applicationTags_.size(); ++i) {
                output.writeBytes(20, this.applicationTags_.getByteString(i));
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.applicationId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getUserBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeBytesSize(3, this.getQueueBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeBytesSize(4, this.getNameBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeBytesSize(5, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeInt32Size(6, this.rpcPort_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                size += CodedOutputStream.computeMessageSize(7, this.clientToAmToken_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                size += CodedOutputStream.computeEnumSize(8, this.yarnApplicationState_.getNumber());
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                size += CodedOutputStream.computeBytesSize(9, this.getTrackingUrlBytes());
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                size += CodedOutputStream.computeBytesSize(10, this.getDiagnosticsBytes());
            }
            if ((this.bitField0_ & 0x400) == 0x400) {
                size += CodedOutputStream.computeInt64Size(11, this.startTime_);
            }
            if ((this.bitField0_ & 0x800) == 0x800) {
                size += CodedOutputStream.computeInt64Size(12, this.finishTime_);
            }
            if ((this.bitField0_ & 0x1000) == 0x1000) {
                size += CodedOutputStream.computeEnumSize(13, this.finalApplicationStatus_.getNumber());
            }
            if ((this.bitField0_ & 0x2000) == 0x2000) {
                size += CodedOutputStream.computeMessageSize(14, this.appResourceUsage_);
            }
            if ((this.bitField0_ & 0x4000) == 0x4000) {
                size += CodedOutputStream.computeBytesSize(15, this.getOriginalTrackingUrlBytes());
            }
            if ((this.bitField0_ & 0x8000) == 0x8000) {
                size += CodedOutputStream.computeMessageSize(16, this.currentApplicationAttemptId_);
            }
            if ((this.bitField0_ & 0x10000) == 0x10000) {
                size += CodedOutputStream.computeFloatSize(17, this.progress_);
            }
            if ((this.bitField0_ & 0x20000) == 0x20000) {
                size += CodedOutputStream.computeBytesSize(18, this.getApplicationTypeBytes());
            }
            if ((this.bitField0_ & 0x40000) == 0x40000) {
                size += CodedOutputStream.computeMessageSize(19, this.amRmToken_);
            }
            int dataSize = 0;
            for (int i = 0; i < this.applicationTags_.size(); ++i) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.applicationTags_.getByteString(i));
            }
            size += dataSize;
            size += 2 * this.getApplicationTagsList().size();
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ApplicationReportProto)) {
                return super.equals(obj);
            }
            final ApplicationReportProto other = (ApplicationReportProto)obj;
            boolean result = true;
            result = (result && this.hasApplicationId() == other.hasApplicationId());
            if (this.hasApplicationId()) {
                result = (result && this.getApplicationId().equals(other.getApplicationId()));
            }
            result = (result && this.hasUser() == other.hasUser());
            if (this.hasUser()) {
                result = (result && this.getUser().equals(other.getUser()));
            }
            result = (result && this.hasQueue() == other.hasQueue());
            if (this.hasQueue()) {
                result = (result && this.getQueue().equals(other.getQueue()));
            }
            result = (result && this.hasName() == other.hasName());
            if (this.hasName()) {
                result = (result && this.getName().equals(other.getName()));
            }
            result = (result && this.hasHost() == other.hasHost());
            if (this.hasHost()) {
                result = (result && this.getHost().equals(other.getHost()));
            }
            result = (result && this.hasRpcPort() == other.hasRpcPort());
            if (this.hasRpcPort()) {
                result = (result && this.getRpcPort() == other.getRpcPort());
            }
            result = (result && this.hasClientToAmToken() == other.hasClientToAmToken());
            if (this.hasClientToAmToken()) {
                result = (result && this.getClientToAmToken().equals(other.getClientToAmToken()));
            }
            result = (result && this.hasYarnApplicationState() == other.hasYarnApplicationState());
            if (this.hasYarnApplicationState()) {
                result = (result && this.getYarnApplicationState() == other.getYarnApplicationState());
            }
            result = (result && this.hasTrackingUrl() == other.hasTrackingUrl());
            if (this.hasTrackingUrl()) {
                result = (result && this.getTrackingUrl().equals(other.getTrackingUrl()));
            }
            result = (result && this.hasDiagnostics() == other.hasDiagnostics());
            if (this.hasDiagnostics()) {
                result = (result && this.getDiagnostics().equals(other.getDiagnostics()));
            }
            result = (result && this.hasStartTime() == other.hasStartTime());
            if (this.hasStartTime()) {
                result = (result && this.getStartTime() == other.getStartTime());
            }
            result = (result && this.hasFinishTime() == other.hasFinishTime());
            if (this.hasFinishTime()) {
                result = (result && this.getFinishTime() == other.getFinishTime());
            }
            result = (result && this.hasFinalApplicationStatus() == other.hasFinalApplicationStatus());
            if (this.hasFinalApplicationStatus()) {
                result = (result && this.getFinalApplicationStatus() == other.getFinalApplicationStatus());
            }
            result = (result && this.hasAppResourceUsage() == other.hasAppResourceUsage());
            if (this.hasAppResourceUsage()) {
                result = (result && this.getAppResourceUsage().equals(other.getAppResourceUsage()));
            }
            result = (result && this.hasOriginalTrackingUrl() == other.hasOriginalTrackingUrl());
            if (this.hasOriginalTrackingUrl()) {
                result = (result && this.getOriginalTrackingUrl().equals(other.getOriginalTrackingUrl()));
            }
            result = (result && this.hasCurrentApplicationAttemptId() == other.hasCurrentApplicationAttemptId());
            if (this.hasCurrentApplicationAttemptId()) {
                result = (result && this.getCurrentApplicationAttemptId().equals(other.getCurrentApplicationAttemptId()));
            }
            result = (result && this.hasProgress() == other.hasProgress());
            if (this.hasProgress()) {
                result = (result && Float.floatToIntBits(this.getProgress()) == Float.floatToIntBits(other.getProgress()));
            }
            result = (result && this.hasApplicationType() == other.hasApplicationType());
            if (this.hasApplicationType()) {
                result = (result && this.getApplicationType().equals(other.getApplicationType()));
            }
            result = (result && this.hasAmRmToken() == other.hasAmRmToken());
            if (this.hasAmRmToken()) {
                result = (result && this.getAmRmToken().equals(other.getAmRmToken()));
            }
            result = (result && this.getApplicationTagsList().equals(other.getApplicationTagsList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasApplicationId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getApplicationId().hashCode();
            }
            if (this.hasUser()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getUser().hashCode();
            }
            if (this.hasQueue()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getQueue().hashCode();
            }
            if (this.hasName()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getName().hashCode();
            }
            if (this.hasHost()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getHost().hashCode();
            }
            if (this.hasRpcPort()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + this.getRpcPort();
            }
            if (this.hasClientToAmToken()) {
                hash = 37 * hash + 7;
                hash = 53 * hash + this.getClientToAmToken().hashCode();
            }
            if (this.hasYarnApplicationState()) {
                hash = 37 * hash + 8;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getYarnApplicationState());
            }
            if (this.hasTrackingUrl()) {
                hash = 37 * hash + 9;
                hash = 53 * hash + this.getTrackingUrl().hashCode();
            }
            if (this.hasDiagnostics()) {
                hash = 37 * hash + 10;
                hash = 53 * hash + this.getDiagnostics().hashCode();
            }
            if (this.hasStartTime()) {
                hash = 37 * hash + 11;
                hash = 53 * hash + AbstractMessage.hashLong(this.getStartTime());
            }
            if (this.hasFinishTime()) {
                hash = 37 * hash + 12;
                hash = 53 * hash + AbstractMessage.hashLong(this.getFinishTime());
            }
            if (this.hasFinalApplicationStatus()) {
                hash = 37 * hash + 13;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getFinalApplicationStatus());
            }
            if (this.hasAppResourceUsage()) {
                hash = 37 * hash + 14;
                hash = 53 * hash + this.getAppResourceUsage().hashCode();
            }
            if (this.hasOriginalTrackingUrl()) {
                hash = 37 * hash + 15;
                hash = 53 * hash + this.getOriginalTrackingUrl().hashCode();
            }
            if (this.hasCurrentApplicationAttemptId()) {
                hash = 37 * hash + 16;
                hash = 53 * hash + this.getCurrentApplicationAttemptId().hashCode();
            }
            if (this.hasProgress()) {
                hash = 37 * hash + 17;
                hash = 53 * hash + Float.floatToIntBits(this.getProgress());
            }
            if (this.hasApplicationType()) {
                hash = 37 * hash + 18;
                hash = 53 * hash + this.getApplicationType().hashCode();
            }
            if (this.hasAmRmToken()) {
                hash = 37 * hash + 19;
                hash = 53 * hash + this.getAmRmToken().hashCode();
            }
            if (this.getApplicationTagsCount() > 0) {
                hash = 37 * hash + 20;
                hash = 53 * hash + this.getApplicationTagsList().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ApplicationReportProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ApplicationReportProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationReportProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationReportProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ApplicationReportProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationReportProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationReportProto parseFrom(final InputStream input) throws IOException {
            return ApplicationReportProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationReportProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ApplicationReportProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ApplicationReportProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ApplicationReportProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationReportProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ApplicationReportProto parseFrom(final CodedInputStream input) throws IOException {
            return ApplicationReportProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationReportProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ApplicationReportProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ApplicationReportProto.PARSER = new AbstractParser<ApplicationReportProto>() {
                @Override
                public ApplicationReportProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ApplicationReportProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ApplicationReportProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ApplicationReportProtoOrBuilder
        {
            private int bitField0_;
            private ApplicationIdProto applicationId_;
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> applicationIdBuilder_;
            private Object user_;
            private Object queue_;
            private Object name_;
            private Object host_;
            private int rpcPort_;
            private SecurityProtos.TokenProto clientToAmToken_;
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> clientToAmTokenBuilder_;
            private YarnApplicationStateProto yarnApplicationState_;
            private Object trackingUrl_;
            private Object diagnostics_;
            private long startTime_;
            private long finishTime_;
            private FinalApplicationStatusProto finalApplicationStatus_;
            private ApplicationResourceUsageReportProto appResourceUsage_;
            private SingleFieldBuilder<ApplicationResourceUsageReportProto, ApplicationResourceUsageReportProto.Builder, ApplicationResourceUsageReportProtoOrBuilder> appResourceUsageBuilder_;
            private Object originalTrackingUrl_;
            private ApplicationAttemptIdProto currentApplicationAttemptId_;
            private SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder> currentApplicationAttemptIdBuilder_;
            private float progress_;
            private Object applicationType_;
            private SecurityProtos.TokenProto amRmToken_;
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> amRmTokenBuilder_;
            private LazyStringList applicationTags_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationReportProto.class, Builder.class);
            }
            
            private Builder() {
                this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                this.user_ = "";
                this.queue_ = "";
                this.name_ = "";
                this.host_ = "";
                this.clientToAmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.yarnApplicationState_ = YarnApplicationStateProto.NEW;
                this.trackingUrl_ = "";
                this.diagnostics_ = "N/A";
                this.finalApplicationStatus_ = FinalApplicationStatusProto.APP_UNDEFINED;
                this.appResourceUsage_ = ApplicationResourceUsageReportProto.getDefaultInstance();
                this.originalTrackingUrl_ = "";
                this.currentApplicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                this.applicationType_ = "";
                this.amRmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                this.user_ = "";
                this.queue_ = "";
                this.name_ = "";
                this.host_ = "";
                this.clientToAmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.yarnApplicationState_ = YarnApplicationStateProto.NEW;
                this.trackingUrl_ = "";
                this.diagnostics_ = "N/A";
                this.finalApplicationStatus_ = FinalApplicationStatusProto.APP_UNDEFINED;
                this.appResourceUsage_ = ApplicationResourceUsageReportProto.getDefaultInstance();
                this.originalTrackingUrl_ = "";
                this.currentApplicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                this.applicationType_ = "";
                this.amRmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ApplicationReportProto.alwaysUseFieldBuilders) {
                    this.getApplicationIdFieldBuilder();
                    this.getClientToAmTokenFieldBuilder();
                    this.getAppResourceUsageFieldBuilder();
                    this.getCurrentApplicationAttemptIdFieldBuilder();
                    this.getAmRmTokenFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                }
                else {
                    this.applicationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.user_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.queue_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                this.name_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.host_ = "";
                this.bitField0_ &= 0xFFFFFFEF;
                this.rpcPort_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                if (this.clientToAmTokenBuilder_ == null) {
                    this.clientToAmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                }
                else {
                    this.clientToAmTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                this.yarnApplicationState_ = YarnApplicationStateProto.NEW;
                this.bitField0_ &= 0xFFFFFF7F;
                this.trackingUrl_ = "";
                this.bitField0_ &= 0xFFFFFEFF;
                this.diagnostics_ = "N/A";
                this.bitField0_ &= 0xFFFFFDFF;
                this.startTime_ = 0L;
                this.bitField0_ &= 0xFFFFFBFF;
                this.finishTime_ = 0L;
                this.bitField0_ &= 0xFFFFF7FF;
                this.finalApplicationStatus_ = FinalApplicationStatusProto.APP_UNDEFINED;
                this.bitField0_ &= 0xFFFFEFFF;
                if (this.appResourceUsageBuilder_ == null) {
                    this.appResourceUsage_ = ApplicationResourceUsageReportProto.getDefaultInstance();
                }
                else {
                    this.appResourceUsageBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFDFFF;
                this.originalTrackingUrl_ = "";
                this.bitField0_ &= 0xFFFFBFFF;
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    this.currentApplicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                }
                else {
                    this.currentApplicationAttemptIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFF7FFF;
                this.progress_ = 0.0f;
                this.bitField0_ &= 0xFFFEFFFF;
                this.applicationType_ = "";
                this.bitField0_ &= 0xFFFDFFFF;
                if (this.amRmTokenBuilder_ == null) {
                    this.amRmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                }
                else {
                    this.amRmTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFBFFFF;
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFF7FFFF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationReportProto_descriptor;
            }
            
            @Override
            public ApplicationReportProto getDefaultInstanceForType() {
                return ApplicationReportProto.getDefaultInstance();
            }
            
            @Override
            public ApplicationReportProto build() {
                final ApplicationReportProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ApplicationReportProto buildPartial() {
                final ApplicationReportProto result = new ApplicationReportProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.applicationIdBuilder_ == null) {
                    result.applicationId_ = this.applicationId_;
                }
                else {
                    result.applicationId_ = this.applicationIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.user_ = this.user_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.queue_ = this.queue_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.name_ = this.name_;
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                result.host_ = this.host_;
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.rpcPort_ = this.rpcPort_;
                if ((from_bitField0_ & 0x40) == 0x40) {
                    to_bitField0_ |= 0x40;
                }
                if (this.clientToAmTokenBuilder_ == null) {
                    result.clientToAmToken_ = this.clientToAmToken_;
                }
                else {
                    result.clientToAmToken_ = this.clientToAmTokenBuilder_.build();
                }
                if ((from_bitField0_ & 0x80) == 0x80) {
                    to_bitField0_ |= 0x80;
                }
                result.yarnApplicationState_ = this.yarnApplicationState_;
                if ((from_bitField0_ & 0x100) == 0x100) {
                    to_bitField0_ |= 0x100;
                }
                result.trackingUrl_ = this.trackingUrl_;
                if ((from_bitField0_ & 0x200) == 0x200) {
                    to_bitField0_ |= 0x200;
                }
                result.diagnostics_ = this.diagnostics_;
                if ((from_bitField0_ & 0x400) == 0x400) {
                    to_bitField0_ |= 0x400;
                }
                result.startTime_ = this.startTime_;
                if ((from_bitField0_ & 0x800) == 0x800) {
                    to_bitField0_ |= 0x800;
                }
                result.finishTime_ = this.finishTime_;
                if ((from_bitField0_ & 0x1000) == 0x1000) {
                    to_bitField0_ |= 0x1000;
                }
                result.finalApplicationStatus_ = this.finalApplicationStatus_;
                if ((from_bitField0_ & 0x2000) == 0x2000) {
                    to_bitField0_ |= 0x2000;
                }
                if (this.appResourceUsageBuilder_ == null) {
                    result.appResourceUsage_ = this.appResourceUsage_;
                }
                else {
                    result.appResourceUsage_ = this.appResourceUsageBuilder_.build();
                }
                if ((from_bitField0_ & 0x4000) == 0x4000) {
                    to_bitField0_ |= 0x4000;
                }
                result.originalTrackingUrl_ = this.originalTrackingUrl_;
                if ((from_bitField0_ & 0x8000) == 0x8000) {
                    to_bitField0_ |= 0x8000;
                }
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    result.currentApplicationAttemptId_ = this.currentApplicationAttemptId_;
                }
                else {
                    result.currentApplicationAttemptId_ = this.currentApplicationAttemptIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x10000) == 0x10000) {
                    to_bitField0_ |= 0x10000;
                }
                result.progress_ = this.progress_;
                if ((from_bitField0_ & 0x20000) == 0x20000) {
                    to_bitField0_ |= 0x20000;
                }
                result.applicationType_ = this.applicationType_;
                if ((from_bitField0_ & 0x40000) == 0x40000) {
                    to_bitField0_ |= 0x40000;
                }
                if (this.amRmTokenBuilder_ == null) {
                    result.amRmToken_ = this.amRmToken_;
                }
                else {
                    result.amRmToken_ = this.amRmTokenBuilder_.build();
                }
                if ((this.bitField0_ & 0x80000) == 0x80000) {
                    this.applicationTags_ = new UnmodifiableLazyStringList(this.applicationTags_);
                    this.bitField0_ &= 0xFFF7FFFF;
                }
                result.applicationTags_ = this.applicationTags_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ApplicationReportProto) {
                    return this.mergeFrom((ApplicationReportProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ApplicationReportProto other) {
                if (other == ApplicationReportProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasApplicationId()) {
                    this.mergeApplicationId(other.getApplicationId());
                }
                if (other.hasUser()) {
                    this.bitField0_ |= 0x2;
                    this.user_ = other.user_;
                    this.onChanged();
                }
                if (other.hasQueue()) {
                    this.bitField0_ |= 0x4;
                    this.queue_ = other.queue_;
                    this.onChanged();
                }
                if (other.hasName()) {
                    this.bitField0_ |= 0x8;
                    this.name_ = other.name_;
                    this.onChanged();
                }
                if (other.hasHost()) {
                    this.bitField0_ |= 0x10;
                    this.host_ = other.host_;
                    this.onChanged();
                }
                if (other.hasRpcPort()) {
                    this.setRpcPort(other.getRpcPort());
                }
                if (other.hasClientToAmToken()) {
                    this.mergeClientToAmToken(other.getClientToAmToken());
                }
                if (other.hasYarnApplicationState()) {
                    this.setYarnApplicationState(other.getYarnApplicationState());
                }
                if (other.hasTrackingUrl()) {
                    this.bitField0_ |= 0x100;
                    this.trackingUrl_ = other.trackingUrl_;
                    this.onChanged();
                }
                if (other.hasDiagnostics()) {
                    this.bitField0_ |= 0x200;
                    this.diagnostics_ = other.diagnostics_;
                    this.onChanged();
                }
                if (other.hasStartTime()) {
                    this.setStartTime(other.getStartTime());
                }
                if (other.hasFinishTime()) {
                    this.setFinishTime(other.getFinishTime());
                }
                if (other.hasFinalApplicationStatus()) {
                    this.setFinalApplicationStatus(other.getFinalApplicationStatus());
                }
                if (other.hasAppResourceUsage()) {
                    this.mergeAppResourceUsage(other.getAppResourceUsage());
                }
                if (other.hasOriginalTrackingUrl()) {
                    this.bitField0_ |= 0x4000;
                    this.originalTrackingUrl_ = other.originalTrackingUrl_;
                    this.onChanged();
                }
                if (other.hasCurrentApplicationAttemptId()) {
                    this.mergeCurrentApplicationAttemptId(other.getCurrentApplicationAttemptId());
                }
                if (other.hasProgress()) {
                    this.setProgress(other.getProgress());
                }
                if (other.hasApplicationType()) {
                    this.bitField0_ |= 0x20000;
                    this.applicationType_ = other.applicationType_;
                    this.onChanged();
                }
                if (other.hasAmRmToken()) {
                    this.mergeAmRmToken(other.getAmRmToken());
                }
                if (!other.applicationTags_.isEmpty()) {
                    if (this.applicationTags_.isEmpty()) {
                        this.applicationTags_ = other.applicationTags_;
                        this.bitField0_ &= 0xFFF7FFFF;
                    }
                    else {
                        this.ensureApplicationTagsIsMutable();
                        this.applicationTags_.addAll(other.applicationTags_);
                    }
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return (!this.hasClientToAmToken() || this.getClientToAmToken().isInitialized()) && (!this.hasAmRmToken() || this.getAmRmToken().isInitialized());
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ApplicationReportProto parsedMessage = null;
                try {
                    parsedMessage = ApplicationReportProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ApplicationReportProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasApplicationId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ApplicationIdProto getApplicationId() {
                if (this.applicationIdBuilder_ == null) {
                    return this.applicationId_;
                }
                return this.applicationIdBuilder_.getMessage();
            }
            
            public Builder setApplicationId(final ApplicationIdProto value) {
                if (this.applicationIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.applicationId_ = value;
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setApplicationId(final ApplicationIdProto.Builder builderForValue) {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeApplicationId(final ApplicationIdProto value) {
                if (this.applicationIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.applicationId_ != ApplicationIdProto.getDefaultInstance()) {
                        this.applicationId_ = ApplicationIdProto.newBuilder(this.applicationId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.applicationId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearApplicationId() {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ApplicationIdProto.Builder getApplicationIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getApplicationIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationIdProtoOrBuilder getApplicationIdOrBuilder() {
                if (this.applicationIdBuilder_ != null) {
                    return this.applicationIdBuilder_.getMessageOrBuilder();
                }
                return this.applicationId_;
            }
            
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> getApplicationIdFieldBuilder() {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationIdBuilder_ = new SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder>(this.applicationId_, this.getParentForChildren(), this.isClean());
                    this.applicationId_ = null;
                }
                return this.applicationIdBuilder_;
            }
            
            @Override
            public boolean hasUser() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getUser() {
                final Object ref = this.user_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.user_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getUserBytes() {
                final Object ref = this.user_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.user_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setUser(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.user_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearUser() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.user_ = ApplicationReportProto.getDefaultInstance().getUser();
                this.onChanged();
                return this;
            }
            
            public Builder setUserBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.user_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasQueue() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public String getQueue() {
                final Object ref = this.queue_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.queue_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getQueueBytes() {
                final Object ref = this.queue_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.queue_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setQueue(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.queue_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearQueue() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.queue_ = ApplicationReportProto.getDefaultInstance().getQueue();
                this.onChanged();
                return this;
            }
            
            public Builder setQueueBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.queue_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasName() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public String getName() {
                final Object ref = this.name_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.name_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getNameBytes() {
                final Object ref = this.name_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.name_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.name_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearName() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.name_ = ApplicationReportProto.getDefaultInstance().getName();
                this.onChanged();
                return this;
            }
            
            public Builder setNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.name_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasHost() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public String getHost() {
                final Object ref = this.host_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.host_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getHostBytes() {
                final Object ref = this.host_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.host_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setHost(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearHost() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.host_ = ApplicationReportProto.getDefaultInstance().getHost();
                this.onChanged();
                return this;
            }
            
            public Builder setHostBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasRpcPort() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public int getRpcPort() {
                return this.rpcPort_;
            }
            
            public Builder setRpcPort(final int value) {
                this.bitField0_ |= 0x20;
                this.rpcPort_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearRpcPort() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.rpcPort_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasClientToAmToken() {
                return (this.bitField0_ & 0x40) == 0x40;
            }
            
            @Override
            public SecurityProtos.TokenProto getClientToAmToken() {
                if (this.clientToAmTokenBuilder_ == null) {
                    return this.clientToAmToken_;
                }
                return this.clientToAmTokenBuilder_.getMessage();
            }
            
            public Builder setClientToAmToken(final SecurityProtos.TokenProto value) {
                if (this.clientToAmTokenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.clientToAmToken_ = value;
                    this.onChanged();
                }
                else {
                    this.clientToAmTokenBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder setClientToAmToken(final SecurityProtos.TokenProto.Builder builderForValue) {
                if (this.clientToAmTokenBuilder_ == null) {
                    this.clientToAmToken_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.clientToAmTokenBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder mergeClientToAmToken(final SecurityProtos.TokenProto value) {
                if (this.clientToAmTokenBuilder_ == null) {
                    if ((this.bitField0_ & 0x40) == 0x40 && this.clientToAmToken_ != SecurityProtos.TokenProto.getDefaultInstance()) {
                        this.clientToAmToken_ = SecurityProtos.TokenProto.newBuilder(this.clientToAmToken_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.clientToAmToken_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.clientToAmTokenBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder clearClientToAmToken() {
                if (this.clientToAmTokenBuilder_ == null) {
                    this.clientToAmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.clientToAmTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }
            
            public SecurityProtos.TokenProto.Builder getClientToAmTokenBuilder() {
                this.bitField0_ |= 0x40;
                this.onChanged();
                return this.getClientToAmTokenFieldBuilder().getBuilder();
            }
            
            @Override
            public SecurityProtos.TokenProtoOrBuilder getClientToAmTokenOrBuilder() {
                if (this.clientToAmTokenBuilder_ != null) {
                    return this.clientToAmTokenBuilder_.getMessageOrBuilder();
                }
                return this.clientToAmToken_;
            }
            
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> getClientToAmTokenFieldBuilder() {
                if (this.clientToAmTokenBuilder_ == null) {
                    this.clientToAmTokenBuilder_ = new SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder>(this.clientToAmToken_, this.getParentForChildren(), this.isClean());
                    this.clientToAmToken_ = null;
                }
                return this.clientToAmTokenBuilder_;
            }
            
            @Override
            public boolean hasYarnApplicationState() {
                return (this.bitField0_ & 0x80) == 0x80;
            }
            
            @Override
            public YarnApplicationStateProto getYarnApplicationState() {
                return this.yarnApplicationState_;
            }
            
            public Builder setYarnApplicationState(final YarnApplicationStateProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.yarnApplicationState_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearYarnApplicationState() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.yarnApplicationState_ = YarnApplicationStateProto.NEW;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasTrackingUrl() {
                return (this.bitField0_ & 0x100) == 0x100;
            }
            
            @Override
            public String getTrackingUrl() {
                final Object ref = this.trackingUrl_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.trackingUrl_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getTrackingUrlBytes() {
                final Object ref = this.trackingUrl_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.trackingUrl_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setTrackingUrl(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x100;
                this.trackingUrl_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearTrackingUrl() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.trackingUrl_ = ApplicationReportProto.getDefaultInstance().getTrackingUrl();
                this.onChanged();
                return this;
            }
            
            public Builder setTrackingUrlBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x100;
                this.trackingUrl_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasDiagnostics() {
                return (this.bitField0_ & 0x200) == 0x200;
            }
            
            @Override
            public String getDiagnostics() {
                final Object ref = this.diagnostics_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.diagnostics_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getDiagnosticsBytes() {
                final Object ref = this.diagnostics_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.diagnostics_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setDiagnostics(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x200;
                this.diagnostics_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearDiagnostics() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.diagnostics_ = ApplicationReportProto.getDefaultInstance().getDiagnostics();
                this.onChanged();
                return this;
            }
            
            public Builder setDiagnosticsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x200;
                this.diagnostics_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasStartTime() {
                return (this.bitField0_ & 0x400) == 0x400;
            }
            
            @Override
            public long getStartTime() {
                return this.startTime_;
            }
            
            public Builder setStartTime(final long value) {
                this.bitField0_ |= 0x400;
                this.startTime_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearStartTime() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.startTime_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasFinishTime() {
                return (this.bitField0_ & 0x800) == 0x800;
            }
            
            @Override
            public long getFinishTime() {
                return this.finishTime_;
            }
            
            public Builder setFinishTime(final long value) {
                this.bitField0_ |= 0x800;
                this.finishTime_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearFinishTime() {
                this.bitField0_ &= 0xFFFFF7FF;
                this.finishTime_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasFinalApplicationStatus() {
                return (this.bitField0_ & 0x1000) == 0x1000;
            }
            
            @Override
            public FinalApplicationStatusProto getFinalApplicationStatus() {
                return this.finalApplicationStatus_;
            }
            
            public Builder setFinalApplicationStatus(final FinalApplicationStatusProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1000;
                this.finalApplicationStatus_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearFinalApplicationStatus() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.finalApplicationStatus_ = FinalApplicationStatusProto.APP_UNDEFINED;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasAppResourceUsage() {
                return (this.bitField0_ & 0x2000) == 0x2000;
            }
            
            @Override
            public ApplicationResourceUsageReportProto getAppResourceUsage() {
                if (this.appResourceUsageBuilder_ == null) {
                    return this.appResourceUsage_;
                }
                return this.appResourceUsageBuilder_.getMessage();
            }
            
            public Builder setAppResourceUsage(final ApplicationResourceUsageReportProto value) {
                if (this.appResourceUsageBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.appResourceUsage_ = value;
                    this.onChanged();
                }
                else {
                    this.appResourceUsageBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder setAppResourceUsage(final ApplicationResourceUsageReportProto.Builder builderForValue) {
                if (this.appResourceUsageBuilder_ == null) {
                    this.appResourceUsage_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.appResourceUsageBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder mergeAppResourceUsage(final ApplicationResourceUsageReportProto value) {
                if (this.appResourceUsageBuilder_ == null) {
                    if ((this.bitField0_ & 0x2000) == 0x2000 && this.appResourceUsage_ != ApplicationResourceUsageReportProto.getDefaultInstance()) {
                        this.appResourceUsage_ = ApplicationResourceUsageReportProto.newBuilder(this.appResourceUsage_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.appResourceUsage_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.appResourceUsageBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder clearAppResourceUsage() {
                if (this.appResourceUsageBuilder_ == null) {
                    this.appResourceUsage_ = ApplicationResourceUsageReportProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.appResourceUsageBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFDFFF;
                return this;
            }
            
            public ApplicationResourceUsageReportProto.Builder getAppResourceUsageBuilder() {
                this.bitField0_ |= 0x2000;
                this.onChanged();
                return this.getAppResourceUsageFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationResourceUsageReportProtoOrBuilder getAppResourceUsageOrBuilder() {
                if (this.appResourceUsageBuilder_ != null) {
                    return this.appResourceUsageBuilder_.getMessageOrBuilder();
                }
                return this.appResourceUsage_;
            }
            
            private SingleFieldBuilder<ApplicationResourceUsageReportProto, ApplicationResourceUsageReportProto.Builder, ApplicationResourceUsageReportProtoOrBuilder> getAppResourceUsageFieldBuilder() {
                if (this.appResourceUsageBuilder_ == null) {
                    this.appResourceUsageBuilder_ = new SingleFieldBuilder<ApplicationResourceUsageReportProto, ApplicationResourceUsageReportProto.Builder, ApplicationResourceUsageReportProtoOrBuilder>(this.appResourceUsage_, this.getParentForChildren(), this.isClean());
                    this.appResourceUsage_ = null;
                }
                return this.appResourceUsageBuilder_;
            }
            
            @Override
            public boolean hasOriginalTrackingUrl() {
                return (this.bitField0_ & 0x4000) == 0x4000;
            }
            
            @Override
            public String getOriginalTrackingUrl() {
                final Object ref = this.originalTrackingUrl_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.originalTrackingUrl_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getOriginalTrackingUrlBytes() {
                final Object ref = this.originalTrackingUrl_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.originalTrackingUrl_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setOriginalTrackingUrl(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4000;
                this.originalTrackingUrl_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearOriginalTrackingUrl() {
                this.bitField0_ &= 0xFFFFBFFF;
                this.originalTrackingUrl_ = ApplicationReportProto.getDefaultInstance().getOriginalTrackingUrl();
                this.onChanged();
                return this;
            }
            
            public Builder setOriginalTrackingUrlBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4000;
                this.originalTrackingUrl_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasCurrentApplicationAttemptId() {
                return (this.bitField0_ & 0x8000) == 0x8000;
            }
            
            @Override
            public ApplicationAttemptIdProto getCurrentApplicationAttemptId() {
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    return this.currentApplicationAttemptId_;
                }
                return this.currentApplicationAttemptIdBuilder_.getMessage();
            }
            
            public Builder setCurrentApplicationAttemptId(final ApplicationAttemptIdProto value) {
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.currentApplicationAttemptId_ = value;
                    this.onChanged();
                }
                else {
                    this.currentApplicationAttemptIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8000;
                return this;
            }
            
            public Builder setCurrentApplicationAttemptId(final ApplicationAttemptIdProto.Builder builderForValue) {
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    this.currentApplicationAttemptId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.currentApplicationAttemptIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8000;
                return this;
            }
            
            public Builder mergeCurrentApplicationAttemptId(final ApplicationAttemptIdProto value) {
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x8000) == 0x8000 && this.currentApplicationAttemptId_ != ApplicationAttemptIdProto.getDefaultInstance()) {
                        this.currentApplicationAttemptId_ = ApplicationAttemptIdProto.newBuilder(this.currentApplicationAttemptId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.currentApplicationAttemptId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.currentApplicationAttemptIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8000;
                return this;
            }
            
            public Builder clearCurrentApplicationAttemptId() {
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    this.currentApplicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.currentApplicationAttemptIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFF7FFF;
                return this;
            }
            
            public ApplicationAttemptIdProto.Builder getCurrentApplicationAttemptIdBuilder() {
                this.bitField0_ |= 0x8000;
                this.onChanged();
                return this.getCurrentApplicationAttemptIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationAttemptIdProtoOrBuilder getCurrentApplicationAttemptIdOrBuilder() {
                if (this.currentApplicationAttemptIdBuilder_ != null) {
                    return this.currentApplicationAttemptIdBuilder_.getMessageOrBuilder();
                }
                return this.currentApplicationAttemptId_;
            }
            
            private SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder> getCurrentApplicationAttemptIdFieldBuilder() {
                if (this.currentApplicationAttemptIdBuilder_ == null) {
                    this.currentApplicationAttemptIdBuilder_ = new SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder>(this.currentApplicationAttemptId_, this.getParentForChildren(), this.isClean());
                    this.currentApplicationAttemptId_ = null;
                }
                return this.currentApplicationAttemptIdBuilder_;
            }
            
            @Override
            public boolean hasProgress() {
                return (this.bitField0_ & 0x10000) == 0x10000;
            }
            
            @Override
            public float getProgress() {
                return this.progress_;
            }
            
            public Builder setProgress(final float value) {
                this.bitField0_ |= 0x10000;
                this.progress_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearProgress() {
                this.bitField0_ &= 0xFFFEFFFF;
                this.progress_ = 0.0f;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasApplicationType() {
                return (this.bitField0_ & 0x20000) == 0x20000;
            }
            
            @Override
            public String getApplicationType() {
                final Object ref = this.applicationType_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.applicationType_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getApplicationTypeBytes() {
                final Object ref = this.applicationType_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.applicationType_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setApplicationType(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20000;
                this.applicationType_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearApplicationType() {
                this.bitField0_ &= 0xFFFDFFFF;
                this.applicationType_ = ApplicationReportProto.getDefaultInstance().getApplicationType();
                this.onChanged();
                return this;
            }
            
            public Builder setApplicationTypeBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20000;
                this.applicationType_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasAmRmToken() {
                return (this.bitField0_ & 0x40000) == 0x40000;
            }
            
            @Override
            public SecurityProtos.TokenProto getAmRmToken() {
                if (this.amRmTokenBuilder_ == null) {
                    return this.amRmToken_;
                }
                return this.amRmTokenBuilder_.getMessage();
            }
            
            public Builder setAmRmToken(final SecurityProtos.TokenProto value) {
                if (this.amRmTokenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.amRmToken_ = value;
                    this.onChanged();
                }
                else {
                    this.amRmTokenBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x40000;
                return this;
            }
            
            public Builder setAmRmToken(final SecurityProtos.TokenProto.Builder builderForValue) {
                if (this.amRmTokenBuilder_ == null) {
                    this.amRmToken_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.amRmTokenBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x40000;
                return this;
            }
            
            public Builder mergeAmRmToken(final SecurityProtos.TokenProto value) {
                if (this.amRmTokenBuilder_ == null) {
                    if ((this.bitField0_ & 0x40000) == 0x40000 && this.amRmToken_ != SecurityProtos.TokenProto.getDefaultInstance()) {
                        this.amRmToken_ = SecurityProtos.TokenProto.newBuilder(this.amRmToken_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.amRmToken_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.amRmTokenBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x40000;
                return this;
            }
            
            public Builder clearAmRmToken() {
                if (this.amRmTokenBuilder_ == null) {
                    this.amRmToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.amRmTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFBFFFF;
                return this;
            }
            
            public SecurityProtos.TokenProto.Builder getAmRmTokenBuilder() {
                this.bitField0_ |= 0x40000;
                this.onChanged();
                return this.getAmRmTokenFieldBuilder().getBuilder();
            }
            
            @Override
            public SecurityProtos.TokenProtoOrBuilder getAmRmTokenOrBuilder() {
                if (this.amRmTokenBuilder_ != null) {
                    return this.amRmTokenBuilder_.getMessageOrBuilder();
                }
                return this.amRmToken_;
            }
            
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> getAmRmTokenFieldBuilder() {
                if (this.amRmTokenBuilder_ == null) {
                    this.amRmTokenBuilder_ = new SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder>(this.amRmToken_, this.getParentForChildren(), this.isClean());
                    this.amRmToken_ = null;
                }
                return this.amRmTokenBuilder_;
            }
            
            private void ensureApplicationTagsIsMutable() {
                if ((this.bitField0_ & 0x80000) != 0x80000) {
                    this.applicationTags_ = new LazyStringArrayList(this.applicationTags_);
                    this.bitField0_ |= 0x80000;
                }
            }
            
            @Override
            public List<String> getApplicationTagsList() {
                return Collections.unmodifiableList((List<? extends String>)this.applicationTags_);
            }
            
            @Override
            public int getApplicationTagsCount() {
                return this.applicationTags_.size();
            }
            
            @Override
            public String getApplicationTags(final int index) {
                return this.applicationTags_.get(index);
            }
            
            @Override
            public ByteString getApplicationTagsBytes(final int index) {
                return this.applicationTags_.getByteString(index);
            }
            
            public Builder setApplicationTags(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureApplicationTagsIsMutable();
                this.applicationTags_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addApplicationTags(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureApplicationTagsIsMutable();
                this.applicationTags_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllApplicationTags(final Iterable<String> values) {
                this.ensureApplicationTagsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.applicationTags_);
                this.onChanged();
                return this;
            }
            
            public Builder clearApplicationTags() {
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFF7FFFF;
                this.onChanged();
                return this;
            }
            
            public Builder addApplicationTagsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureApplicationTagsIsMutable();
                this.applicationTags_.add(value);
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ApplicationAttemptReportProto extends GeneratedMessage implements ApplicationAttemptReportProtoOrBuilder
    {
        private static final ApplicationAttemptReportProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ApplicationAttemptReportProto> PARSER;
        private int bitField0_;
        public static final int APPLICATION_ATTEMPT_ID_FIELD_NUMBER = 1;
        private ApplicationAttemptIdProto applicationAttemptId_;
        public static final int HOST_FIELD_NUMBER = 2;
        private Object host_;
        public static final int RPC_PORT_FIELD_NUMBER = 3;
        private int rpcPort_;
        public static final int TRACKING_URL_FIELD_NUMBER = 4;
        private Object trackingUrl_;
        public static final int DIAGNOSTICS_FIELD_NUMBER = 5;
        private Object diagnostics_;
        public static final int YARN_APPLICATION_ATTEMPT_STATE_FIELD_NUMBER = 6;
        private YarnApplicationAttemptStateProto yarnApplicationAttemptState_;
        public static final int AM_CONTAINER_ID_FIELD_NUMBER = 7;
        private ContainerIdProto amContainerId_;
        public static final int ORIGINAL_TRACKING_URL_FIELD_NUMBER = 8;
        private Object originalTrackingUrl_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ApplicationAttemptReportProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ApplicationAttemptReportProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ApplicationAttemptReportProto getDefaultInstance() {
            return ApplicationAttemptReportProto.defaultInstance;
        }
        
        @Override
        public ApplicationAttemptReportProto getDefaultInstanceForType() {
            return ApplicationAttemptReportProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ApplicationAttemptReportProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ApplicationAttemptIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.applicationAttemptId_.toBuilder();
                            }
                            this.applicationAttemptId_ = input.readMessage(ApplicationAttemptIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.applicationAttemptId_);
                                this.applicationAttemptId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.host_ = input.readBytes();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x4;
                            this.rpcPort_ = input.readInt32();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x8;
                            this.trackingUrl_ = input.readBytes();
                            continue;
                        }
                        case 42: {
                            this.bitField0_ |= 0x10;
                            this.diagnostics_ = input.readBytes();
                            continue;
                        }
                        case 48: {
                            final int rawValue = input.readEnum();
                            final YarnApplicationAttemptStateProto value = YarnApplicationAttemptStateProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(6, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x20;
                            this.yarnApplicationAttemptState_ = value;
                            continue;
                        }
                        case 58: {
                            ContainerIdProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x40) == 0x40) {
                                subBuilder2 = this.amContainerId_.toBuilder();
                            }
                            this.amContainerId_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.amContainerId_);
                                this.amContainerId_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x40;
                            continue;
                        }
                        case 66: {
                            this.bitField0_ |= 0x80;
                            this.originalTrackingUrl_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationAttemptReportProto.class, Builder.class);
        }
        
        @Override
        public Parser<ApplicationAttemptReportProto> getParserForType() {
            return ApplicationAttemptReportProto.PARSER;
        }
        
        @Override
        public boolean hasApplicationAttemptId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ApplicationAttemptIdProto getApplicationAttemptId() {
            return this.applicationAttemptId_;
        }
        
        @Override
        public ApplicationAttemptIdProtoOrBuilder getApplicationAttemptIdOrBuilder() {
            return this.applicationAttemptId_;
        }
        
        @Override
        public boolean hasHost() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getHost() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.host_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getHostBytes() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.host_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasRpcPort() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public int getRpcPort() {
            return this.rpcPort_;
        }
        
        @Override
        public boolean hasTrackingUrl() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public String getTrackingUrl() {
            final Object ref = this.trackingUrl_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.trackingUrl_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getTrackingUrlBytes() {
            final Object ref = this.trackingUrl_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.trackingUrl_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasDiagnostics() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public String getDiagnostics() {
            final Object ref = this.diagnostics_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.diagnostics_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getDiagnosticsBytes() {
            final Object ref = this.diagnostics_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.diagnostics_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasYarnApplicationAttemptState() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public YarnApplicationAttemptStateProto getYarnApplicationAttemptState() {
            return this.yarnApplicationAttemptState_;
        }
        
        @Override
        public boolean hasAmContainerId() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        @Override
        public ContainerIdProto getAmContainerId() {
            return this.amContainerId_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getAmContainerIdOrBuilder() {
            return this.amContainerId_;
        }
        
        @Override
        public boolean hasOriginalTrackingUrl() {
            return (this.bitField0_ & 0x80) == 0x80;
        }
        
        @Override
        public String getOriginalTrackingUrl() {
            final Object ref = this.originalTrackingUrl_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.originalTrackingUrl_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getOriginalTrackingUrlBytes() {
            final Object ref = this.originalTrackingUrl_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.originalTrackingUrl_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.applicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
            this.host_ = "";
            this.rpcPort_ = 0;
            this.trackingUrl_ = "";
            this.diagnostics_ = "N/A";
            this.yarnApplicationAttemptState_ = YarnApplicationAttemptStateProto.APP_ATTEMPT_NEW;
            this.amContainerId_ = ContainerIdProto.getDefaultInstance();
            this.originalTrackingUrl_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.applicationAttemptId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeInt32(3, this.rpcPort_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeBytes(4, this.getTrackingUrlBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeBytes(5, this.getDiagnosticsBytes());
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeEnum(6, this.yarnApplicationAttemptState_.getNumber());
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                output.writeMessage(7, this.amContainerId_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                output.writeBytes(8, this.getOriginalTrackingUrlBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.applicationAttemptId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeInt32Size(3, this.rpcPort_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeBytesSize(4, this.getTrackingUrlBytes());
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeBytesSize(5, this.getDiagnosticsBytes());
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeEnumSize(6, this.yarnApplicationAttemptState_.getNumber());
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                size += CodedOutputStream.computeMessageSize(7, this.amContainerId_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                size += CodedOutputStream.computeBytesSize(8, this.getOriginalTrackingUrlBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ApplicationAttemptReportProto)) {
                return super.equals(obj);
            }
            final ApplicationAttemptReportProto other = (ApplicationAttemptReportProto)obj;
            boolean result = true;
            result = (result && this.hasApplicationAttemptId() == other.hasApplicationAttemptId());
            if (this.hasApplicationAttemptId()) {
                result = (result && this.getApplicationAttemptId().equals(other.getApplicationAttemptId()));
            }
            result = (result && this.hasHost() == other.hasHost());
            if (this.hasHost()) {
                result = (result && this.getHost().equals(other.getHost()));
            }
            result = (result && this.hasRpcPort() == other.hasRpcPort());
            if (this.hasRpcPort()) {
                result = (result && this.getRpcPort() == other.getRpcPort());
            }
            result = (result && this.hasTrackingUrl() == other.hasTrackingUrl());
            if (this.hasTrackingUrl()) {
                result = (result && this.getTrackingUrl().equals(other.getTrackingUrl()));
            }
            result = (result && this.hasDiagnostics() == other.hasDiagnostics());
            if (this.hasDiagnostics()) {
                result = (result && this.getDiagnostics().equals(other.getDiagnostics()));
            }
            result = (result && this.hasYarnApplicationAttemptState() == other.hasYarnApplicationAttemptState());
            if (this.hasYarnApplicationAttemptState()) {
                result = (result && this.getYarnApplicationAttemptState() == other.getYarnApplicationAttemptState());
            }
            result = (result && this.hasAmContainerId() == other.hasAmContainerId());
            if (this.hasAmContainerId()) {
                result = (result && this.getAmContainerId().equals(other.getAmContainerId()));
            }
            result = (result && this.hasOriginalTrackingUrl() == other.hasOriginalTrackingUrl());
            if (this.hasOriginalTrackingUrl()) {
                result = (result && this.getOriginalTrackingUrl().equals(other.getOriginalTrackingUrl()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasApplicationAttemptId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getApplicationAttemptId().hashCode();
            }
            if (this.hasHost()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getHost().hashCode();
            }
            if (this.hasRpcPort()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getRpcPort();
            }
            if (this.hasTrackingUrl()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getTrackingUrl().hashCode();
            }
            if (this.hasDiagnostics()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getDiagnostics().hashCode();
            }
            if (this.hasYarnApplicationAttemptState()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getYarnApplicationAttemptState());
            }
            if (this.hasAmContainerId()) {
                hash = 37 * hash + 7;
                hash = 53 * hash + this.getAmContainerId().hashCode();
            }
            if (this.hasOriginalTrackingUrl()) {
                hash = 37 * hash + 8;
                hash = 53 * hash + this.getOriginalTrackingUrl().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ApplicationAttemptReportProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationAttemptReportProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationAttemptReportProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationAttemptReportProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationAttemptReportProto parseFrom(final InputStream input) throws IOException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationAttemptReportProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ApplicationAttemptReportProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ApplicationAttemptReportProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ApplicationAttemptReportProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationAttemptReportProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ApplicationAttemptReportProto parseFrom(final CodedInputStream input) throws IOException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationAttemptReportProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationAttemptReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ApplicationAttemptReportProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ApplicationAttemptReportProto.PARSER = new AbstractParser<ApplicationAttemptReportProto>() {
                @Override
                public ApplicationAttemptReportProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ApplicationAttemptReportProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ApplicationAttemptReportProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ApplicationAttemptReportProtoOrBuilder
        {
            private int bitField0_;
            private ApplicationAttemptIdProto applicationAttemptId_;
            private SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder> applicationAttemptIdBuilder_;
            private Object host_;
            private int rpcPort_;
            private Object trackingUrl_;
            private Object diagnostics_;
            private YarnApplicationAttemptStateProto yarnApplicationAttemptState_;
            private ContainerIdProto amContainerId_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> amContainerIdBuilder_;
            private Object originalTrackingUrl_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationAttemptReportProto.class, Builder.class);
            }
            
            private Builder() {
                this.applicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                this.host_ = "";
                this.trackingUrl_ = "";
                this.diagnostics_ = "N/A";
                this.yarnApplicationAttemptState_ = YarnApplicationAttemptStateProto.APP_ATTEMPT_NEW;
                this.amContainerId_ = ContainerIdProto.getDefaultInstance();
                this.originalTrackingUrl_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.applicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                this.host_ = "";
                this.trackingUrl_ = "";
                this.diagnostics_ = "N/A";
                this.yarnApplicationAttemptState_ = YarnApplicationAttemptStateProto.APP_ATTEMPT_NEW;
                this.amContainerId_ = ContainerIdProto.getDefaultInstance();
                this.originalTrackingUrl_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ApplicationAttemptReportProto.alwaysUseFieldBuilders) {
                    this.getApplicationAttemptIdFieldBuilder();
                    this.getAmContainerIdFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.applicationAttemptIdBuilder_ == null) {
                    this.applicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                }
                else {
                    this.applicationAttemptIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.host_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.rpcPort_ = 0;
                this.bitField0_ &= 0xFFFFFFFB;
                this.trackingUrl_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                this.diagnostics_ = "N/A";
                this.bitField0_ &= 0xFFFFFFEF;
                this.yarnApplicationAttemptState_ = YarnApplicationAttemptStateProto.APP_ATTEMPT_NEW;
                this.bitField0_ &= 0xFFFFFFDF;
                if (this.amContainerIdBuilder_ == null) {
                    this.amContainerId_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.amContainerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                this.originalTrackingUrl_ = "";
                this.bitField0_ &= 0xFFFFFF7F;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationAttemptReportProto_descriptor;
            }
            
            @Override
            public ApplicationAttemptReportProto getDefaultInstanceForType() {
                return ApplicationAttemptReportProto.getDefaultInstance();
            }
            
            @Override
            public ApplicationAttemptReportProto build() {
                final ApplicationAttemptReportProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ApplicationAttemptReportProto buildPartial() {
                final ApplicationAttemptReportProto result = new ApplicationAttemptReportProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.applicationAttemptIdBuilder_ == null) {
                    result.applicationAttemptId_ = this.applicationAttemptId_;
                }
                else {
                    result.applicationAttemptId_ = this.applicationAttemptIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.host_ = this.host_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.rpcPort_ = this.rpcPort_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.trackingUrl_ = this.trackingUrl_;
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                result.diagnostics_ = this.diagnostics_;
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.yarnApplicationAttemptState_ = this.yarnApplicationAttemptState_;
                if ((from_bitField0_ & 0x40) == 0x40) {
                    to_bitField0_ |= 0x40;
                }
                if (this.amContainerIdBuilder_ == null) {
                    result.amContainerId_ = this.amContainerId_;
                }
                else {
                    result.amContainerId_ = this.amContainerIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x80) == 0x80) {
                    to_bitField0_ |= 0x80;
                }
                result.originalTrackingUrl_ = this.originalTrackingUrl_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ApplicationAttemptReportProto) {
                    return this.mergeFrom((ApplicationAttemptReportProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ApplicationAttemptReportProto other) {
                if (other == ApplicationAttemptReportProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasApplicationAttemptId()) {
                    this.mergeApplicationAttemptId(other.getApplicationAttemptId());
                }
                if (other.hasHost()) {
                    this.bitField0_ |= 0x2;
                    this.host_ = other.host_;
                    this.onChanged();
                }
                if (other.hasRpcPort()) {
                    this.setRpcPort(other.getRpcPort());
                }
                if (other.hasTrackingUrl()) {
                    this.bitField0_ |= 0x8;
                    this.trackingUrl_ = other.trackingUrl_;
                    this.onChanged();
                }
                if (other.hasDiagnostics()) {
                    this.bitField0_ |= 0x10;
                    this.diagnostics_ = other.diagnostics_;
                    this.onChanged();
                }
                if (other.hasYarnApplicationAttemptState()) {
                    this.setYarnApplicationAttemptState(other.getYarnApplicationAttemptState());
                }
                if (other.hasAmContainerId()) {
                    this.mergeAmContainerId(other.getAmContainerId());
                }
                if (other.hasOriginalTrackingUrl()) {
                    this.bitField0_ |= 0x80;
                    this.originalTrackingUrl_ = other.originalTrackingUrl_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ApplicationAttemptReportProto parsedMessage = null;
                try {
                    parsedMessage = ApplicationAttemptReportProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ApplicationAttemptReportProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasApplicationAttemptId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ApplicationAttemptIdProto getApplicationAttemptId() {
                if (this.applicationAttemptIdBuilder_ == null) {
                    return this.applicationAttemptId_;
                }
                return this.applicationAttemptIdBuilder_.getMessage();
            }
            
            public Builder setApplicationAttemptId(final ApplicationAttemptIdProto value) {
                if (this.applicationAttemptIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.applicationAttemptId_ = value;
                    this.onChanged();
                }
                else {
                    this.applicationAttemptIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setApplicationAttemptId(final ApplicationAttemptIdProto.Builder builderForValue) {
                if (this.applicationAttemptIdBuilder_ == null) {
                    this.applicationAttemptId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.applicationAttemptIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeApplicationAttemptId(final ApplicationAttemptIdProto value) {
                if (this.applicationAttemptIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.applicationAttemptId_ != ApplicationAttemptIdProto.getDefaultInstance()) {
                        this.applicationAttemptId_ = ApplicationAttemptIdProto.newBuilder(this.applicationAttemptId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.applicationAttemptId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.applicationAttemptIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearApplicationAttemptId() {
                if (this.applicationAttemptIdBuilder_ == null) {
                    this.applicationAttemptId_ = ApplicationAttemptIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.applicationAttemptIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ApplicationAttemptIdProto.Builder getApplicationAttemptIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getApplicationAttemptIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationAttemptIdProtoOrBuilder getApplicationAttemptIdOrBuilder() {
                if (this.applicationAttemptIdBuilder_ != null) {
                    return this.applicationAttemptIdBuilder_.getMessageOrBuilder();
                }
                return this.applicationAttemptId_;
            }
            
            private SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder> getApplicationAttemptIdFieldBuilder() {
                if (this.applicationAttemptIdBuilder_ == null) {
                    this.applicationAttemptIdBuilder_ = new SingleFieldBuilder<ApplicationAttemptIdProto, ApplicationAttemptIdProto.Builder, ApplicationAttemptIdProtoOrBuilder>(this.applicationAttemptId_, this.getParentForChildren(), this.isClean());
                    this.applicationAttemptId_ = null;
                }
                return this.applicationAttemptIdBuilder_;
            }
            
            @Override
            public boolean hasHost() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getHost() {
                final Object ref = this.host_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.host_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getHostBytes() {
                final Object ref = this.host_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.host_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setHost(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearHost() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.host_ = ApplicationAttemptReportProto.getDefaultInstance().getHost();
                this.onChanged();
                return this;
            }
            
            public Builder setHostBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasRpcPort() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public int getRpcPort() {
                return this.rpcPort_;
            }
            
            public Builder setRpcPort(final int value) {
                this.bitField0_ |= 0x4;
                this.rpcPort_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearRpcPort() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.rpcPort_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasTrackingUrl() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public String getTrackingUrl() {
                final Object ref = this.trackingUrl_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.trackingUrl_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getTrackingUrlBytes() {
                final Object ref = this.trackingUrl_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.trackingUrl_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setTrackingUrl(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.trackingUrl_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearTrackingUrl() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.trackingUrl_ = ApplicationAttemptReportProto.getDefaultInstance().getTrackingUrl();
                this.onChanged();
                return this;
            }
            
            public Builder setTrackingUrlBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.trackingUrl_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasDiagnostics() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public String getDiagnostics() {
                final Object ref = this.diagnostics_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.diagnostics_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getDiagnosticsBytes() {
                final Object ref = this.diagnostics_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.diagnostics_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setDiagnostics(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.diagnostics_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearDiagnostics() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.diagnostics_ = ApplicationAttemptReportProto.getDefaultInstance().getDiagnostics();
                this.onChanged();
                return this;
            }
            
            public Builder setDiagnosticsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.diagnostics_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasYarnApplicationAttemptState() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public YarnApplicationAttemptStateProto getYarnApplicationAttemptState() {
                return this.yarnApplicationAttemptState_;
            }
            
            public Builder setYarnApplicationAttemptState(final YarnApplicationAttemptStateProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.yarnApplicationAttemptState_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearYarnApplicationAttemptState() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.yarnApplicationAttemptState_ = YarnApplicationAttemptStateProto.APP_ATTEMPT_NEW;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasAmContainerId() {
                return (this.bitField0_ & 0x40) == 0x40;
            }
            
            @Override
            public ContainerIdProto getAmContainerId() {
                if (this.amContainerIdBuilder_ == null) {
                    return this.amContainerId_;
                }
                return this.amContainerIdBuilder_.getMessage();
            }
            
            public Builder setAmContainerId(final ContainerIdProto value) {
                if (this.amContainerIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.amContainerId_ = value;
                    this.onChanged();
                }
                else {
                    this.amContainerIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder setAmContainerId(final ContainerIdProto.Builder builderForValue) {
                if (this.amContainerIdBuilder_ == null) {
                    this.amContainerId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.amContainerIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder mergeAmContainerId(final ContainerIdProto value) {
                if (this.amContainerIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x40) == 0x40 && this.amContainerId_ != ContainerIdProto.getDefaultInstance()) {
                        this.amContainerId_ = ContainerIdProto.newBuilder(this.amContainerId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.amContainerId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.amContainerIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x40;
                return this;
            }
            
            public Builder clearAmContainerId() {
                if (this.amContainerIdBuilder_ == null) {
                    this.amContainerId_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.amContainerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFBF;
                return this;
            }
            
            public ContainerIdProto.Builder getAmContainerIdBuilder() {
                this.bitField0_ |= 0x40;
                this.onChanged();
                return this.getAmContainerIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getAmContainerIdOrBuilder() {
                if (this.amContainerIdBuilder_ != null) {
                    return this.amContainerIdBuilder_.getMessageOrBuilder();
                }
                return this.amContainerId_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getAmContainerIdFieldBuilder() {
                if (this.amContainerIdBuilder_ == null) {
                    this.amContainerIdBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.amContainerId_, this.getParentForChildren(), this.isClean());
                    this.amContainerId_ = null;
                }
                return this.amContainerIdBuilder_;
            }
            
            @Override
            public boolean hasOriginalTrackingUrl() {
                return (this.bitField0_ & 0x80) == 0x80;
            }
            
            @Override
            public String getOriginalTrackingUrl() {
                final Object ref = this.originalTrackingUrl_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.originalTrackingUrl_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getOriginalTrackingUrlBytes() {
                final Object ref = this.originalTrackingUrl_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.originalTrackingUrl_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setOriginalTrackingUrl(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.originalTrackingUrl_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearOriginalTrackingUrl() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.originalTrackingUrl_ = ApplicationAttemptReportProto.getDefaultInstance().getOriginalTrackingUrl();
                this.onChanged();
                return this;
            }
            
            public Builder setOriginalTrackingUrlBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.originalTrackingUrl_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class NodeIdProto extends GeneratedMessage implements NodeIdProtoOrBuilder
    {
        private static final NodeIdProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<NodeIdProto> PARSER;
        private int bitField0_;
        public static final int HOST_FIELD_NUMBER = 1;
        private Object host_;
        public static final int PORT_FIELD_NUMBER = 2;
        private int port_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private NodeIdProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private NodeIdProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static NodeIdProto getDefaultInstance() {
            return NodeIdProto.defaultInstance;
        }
        
        @Override
        public NodeIdProto getDefaultInstanceForType() {
            return NodeIdProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private NodeIdProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.host_ = input.readBytes();
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.port_ = input.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_NodeIdProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_NodeIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeIdProto.class, Builder.class);
        }
        
        @Override
        public Parser<NodeIdProto> getParserForType() {
            return NodeIdProto.PARSER;
        }
        
        @Override
        public boolean hasHost() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getHost() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.host_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getHostBytes() {
            final Object ref = this.host_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.host_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasPort() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public int getPort() {
            return this.port_;
        }
        
        private void initFields() {
            this.host_ = "";
            this.port_ = 0;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt32(2, this.port_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getHostBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt32Size(2, this.port_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof NodeIdProto)) {
                return super.equals(obj);
            }
            final NodeIdProto other = (NodeIdProto)obj;
            boolean result = true;
            result = (result && this.hasHost() == other.hasHost());
            if (this.hasHost()) {
                result = (result && this.getHost().equals(other.getHost()));
            }
            result = (result && this.hasPort() == other.hasPort());
            if (this.hasPort()) {
                result = (result && this.getPort() == other.getPort());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasHost()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getHost().hashCode();
            }
            if (this.hasPort()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getPort();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static NodeIdProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return NodeIdProto.PARSER.parseFrom(data);
        }
        
        public static NodeIdProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeIdProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return NodeIdProto.PARSER.parseFrom(data);
        }
        
        public static NodeIdProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeIdProto parseFrom(final InputStream input) throws IOException {
            return NodeIdProto.PARSER.parseFrom(input);
        }
        
        public static NodeIdProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static NodeIdProto parseDelimitedFrom(final InputStream input) throws IOException {
            return NodeIdProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static NodeIdProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeIdProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static NodeIdProto parseFrom(final CodedInputStream input) throws IOException {
            return NodeIdProto.PARSER.parseFrom(input);
        }
        
        public static NodeIdProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final NodeIdProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            NodeIdProto.PARSER = new AbstractParser<NodeIdProto>() {
                @Override
                public NodeIdProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new NodeIdProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new NodeIdProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements NodeIdProtoOrBuilder
        {
            private int bitField0_;
            private Object host_;
            private int port_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_NodeIdProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_NodeIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeIdProto.class, Builder.class);
            }
            
            private Builder() {
                this.host_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.host_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (NodeIdProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.host_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.port_ = 0;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_NodeIdProto_descriptor;
            }
            
            @Override
            public NodeIdProto getDefaultInstanceForType() {
                return NodeIdProto.getDefaultInstance();
            }
            
            @Override
            public NodeIdProto build() {
                final NodeIdProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public NodeIdProto buildPartial() {
                final NodeIdProto result = new NodeIdProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.host_ = this.host_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.port_ = this.port_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof NodeIdProto) {
                    return this.mergeFrom((NodeIdProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final NodeIdProto other) {
                if (other == NodeIdProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasHost()) {
                    this.bitField0_ |= 0x1;
                    this.host_ = other.host_;
                    this.onChanged();
                }
                if (other.hasPort()) {
                    this.setPort(other.getPort());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                NodeIdProto parsedMessage = null;
                try {
                    parsedMessage = NodeIdProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (NodeIdProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasHost() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getHost() {
                final Object ref = this.host_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.host_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getHostBytes() {
                final Object ref = this.host_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.host_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setHost(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearHost() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.host_ = NodeIdProto.getDefaultInstance().getHost();
                this.onChanged();
                return this;
            }
            
            public Builder setHostBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.host_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasPort() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public int getPort() {
                return this.port_;
            }
            
            public Builder setPort(final int value) {
                this.bitField0_ |= 0x2;
                this.port_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearPort() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.port_ = 0;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class NodeReportProto extends GeneratedMessage implements NodeReportProtoOrBuilder
    {
        private static final NodeReportProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<NodeReportProto> PARSER;
        private int bitField0_;
        public static final int NODEID_FIELD_NUMBER = 1;
        private NodeIdProto nodeId_;
        public static final int HTTPADDRESS_FIELD_NUMBER = 2;
        private Object httpAddress_;
        public static final int RACKNAME_FIELD_NUMBER = 3;
        private Object rackName_;
        public static final int USED_FIELD_NUMBER = 4;
        private ResourceProto used_;
        public static final int CAPABILITY_FIELD_NUMBER = 5;
        private ResourceProto capability_;
        public static final int NUMCONTAINERS_FIELD_NUMBER = 6;
        private int numContainers_;
        public static final int NODE_STATE_FIELD_NUMBER = 7;
        private NodeStateProto nodeState_;
        public static final int HEALTH_REPORT_FIELD_NUMBER = 8;
        private Object healthReport_;
        public static final int LAST_HEALTH_REPORT_TIME_FIELD_NUMBER = 9;
        private long lastHealthReportTime_;
        public static final int NODE_LABELS_FIELD_NUMBER = 10;
        private LazyStringList nodeLabels_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private NodeReportProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private NodeReportProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static NodeReportProto getDefaultInstance() {
            return NodeReportProto.defaultInstance;
        }
        
        @Override
        public NodeReportProto getDefaultInstanceForType() {
            return NodeReportProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private NodeReportProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            NodeIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.nodeId_.toBuilder();
                            }
                            this.nodeId_ = input.readMessage(NodeIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.nodeId_);
                                this.nodeId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.httpAddress_ = input.readBytes();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x4;
                            this.rackName_ = input.readBytes();
                            continue;
                        }
                        case 34: {
                            ResourceProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                subBuilder2 = this.used_.toBuilder();
                            }
                            this.used_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.used_);
                                this.used_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                        case 42: {
                            ResourceProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x10) == 0x10) {
                                subBuilder2 = this.capability_.toBuilder();
                            }
                            this.capability_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.capability_);
                                this.capability_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x10;
                            continue;
                        }
                        case 48: {
                            this.bitField0_ |= 0x20;
                            this.numContainers_ = input.readInt32();
                            continue;
                        }
                        case 56: {
                            final int rawValue = input.readEnum();
                            final NodeStateProto value = NodeStateProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(7, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x40;
                            this.nodeState_ = value;
                            continue;
                        }
                        case 66: {
                            this.bitField0_ |= 0x80;
                            this.healthReport_ = input.readBytes();
                            continue;
                        }
                        case 72: {
                            this.bitField0_ |= 0x100;
                            this.lastHealthReportTime_ = input.readInt64();
                            continue;
                        }
                        case 82: {
                            if ((mutable_bitField0_ & 0x200) != 0x200) {
                                this.nodeLabels_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x200;
                            }
                            this.nodeLabels_.add(input.readBytes());
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x200) == 0x200) {
                    this.nodeLabels_ = new UnmodifiableLazyStringList(this.nodeLabels_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_NodeReportProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_NodeReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeReportProto.class, Builder.class);
        }
        
        @Override
        public Parser<NodeReportProto> getParserForType() {
            return NodeReportProto.PARSER;
        }
        
        @Override
        public boolean hasNodeId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public NodeIdProto getNodeId() {
            return this.nodeId_;
        }
        
        @Override
        public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
            return this.nodeId_;
        }
        
        @Override
        public boolean hasHttpAddress() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getHttpAddress() {
            final Object ref = this.httpAddress_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.httpAddress_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getHttpAddressBytes() {
            final Object ref = this.httpAddress_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.httpAddress_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasRackName() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public String getRackName() {
            final Object ref = this.rackName_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.rackName_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getRackNameBytes() {
            final Object ref = this.rackName_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.rackName_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasUsed() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public ResourceProto getUsed() {
            return this.used_;
        }
        
        @Override
        public ResourceProtoOrBuilder getUsedOrBuilder() {
            return this.used_;
        }
        
        @Override
        public boolean hasCapability() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public ResourceProto getCapability() {
            return this.capability_;
        }
        
        @Override
        public ResourceProtoOrBuilder getCapabilityOrBuilder() {
            return this.capability_;
        }
        
        @Override
        public boolean hasNumContainers() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public int getNumContainers() {
            return this.numContainers_;
        }
        
        @Override
        public boolean hasNodeState() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        @Override
        public NodeStateProto getNodeState() {
            return this.nodeState_;
        }
        
        @Override
        public boolean hasHealthReport() {
            return (this.bitField0_ & 0x80) == 0x80;
        }
        
        @Override
        public String getHealthReport() {
            final Object ref = this.healthReport_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.healthReport_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getHealthReportBytes() {
            final Object ref = this.healthReport_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.healthReport_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasLastHealthReportTime() {
            return (this.bitField0_ & 0x100) == 0x100;
        }
        
        @Override
        public long getLastHealthReportTime() {
            return this.lastHealthReportTime_;
        }
        
        @Override
        public List<String> getNodeLabelsList() {
            return this.nodeLabels_;
        }
        
        @Override
        public int getNodeLabelsCount() {
            return this.nodeLabels_.size();
        }
        
        @Override
        public String getNodeLabels(final int index) {
            return this.nodeLabels_.get(index);
        }
        
        @Override
        public ByteString getNodeLabelsBytes(final int index) {
            return this.nodeLabels_.getByteString(index);
        }
        
        private void initFields() {
            this.nodeId_ = NodeIdProto.getDefaultInstance();
            this.httpAddress_ = "";
            this.rackName_ = "";
            this.used_ = ResourceProto.getDefaultInstance();
            this.capability_ = ResourceProto.getDefaultInstance();
            this.numContainers_ = 0;
            this.nodeState_ = NodeStateProto.NS_NEW;
            this.healthReport_ = "";
            this.lastHealthReportTime_ = 0L;
            this.nodeLabels_ = LazyStringArrayList.EMPTY;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.nodeId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getHttpAddressBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeBytes(3, this.getRackNameBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeMessage(4, this.used_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeMessage(5, this.capability_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeInt32(6, this.numContainers_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                output.writeEnum(7, this.nodeState_.getNumber());
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                output.writeBytes(8, this.getHealthReportBytes());
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                output.writeInt64(9, this.lastHealthReportTime_);
            }
            for (int i = 0; i < this.nodeLabels_.size(); ++i) {
                output.writeBytes(10, this.nodeLabels_.getByteString(i));
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.nodeId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getHttpAddressBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeBytesSize(3, this.getRackNameBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeMessageSize(4, this.used_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeMessageSize(5, this.capability_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeInt32Size(6, this.numContainers_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                size += CodedOutputStream.computeEnumSize(7, this.nodeState_.getNumber());
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                size += CodedOutputStream.computeBytesSize(8, this.getHealthReportBytes());
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                size += CodedOutputStream.computeInt64Size(9, this.lastHealthReportTime_);
            }
            int dataSize = 0;
            for (int i = 0; i < this.nodeLabels_.size(); ++i) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.nodeLabels_.getByteString(i));
            }
            size += dataSize;
            size += 1 * this.getNodeLabelsList().size();
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof NodeReportProto)) {
                return super.equals(obj);
            }
            final NodeReportProto other = (NodeReportProto)obj;
            boolean result = true;
            result = (result && this.hasNodeId() == other.hasNodeId());
            if (this.hasNodeId()) {
                result = (result && this.getNodeId().equals(other.getNodeId()));
            }
            result = (result && this.hasHttpAddress() == other.hasHttpAddress());
            if (this.hasHttpAddress()) {
                result = (result && this.getHttpAddress().equals(other.getHttpAddress()));
            }
            result = (result && this.hasRackName() == other.hasRackName());
            if (this.hasRackName()) {
                result = (result && this.getRackName().equals(other.getRackName()));
            }
            result = (result && this.hasUsed() == other.hasUsed());
            if (this.hasUsed()) {
                result = (result && this.getUsed().equals(other.getUsed()));
            }
            result = (result && this.hasCapability() == other.hasCapability());
            if (this.hasCapability()) {
                result = (result && this.getCapability().equals(other.getCapability()));
            }
            result = (result && this.hasNumContainers() == other.hasNumContainers());
            if (this.hasNumContainers()) {
                result = (result && this.getNumContainers() == other.getNumContainers());
            }
            result = (result && this.hasNodeState() == other.hasNodeState());
            if (this.hasNodeState()) {
                result = (result && this.getNodeState() == other.getNodeState());
            }
            result = (result && this.hasHealthReport() == other.hasHealthReport());
            if (this.hasHealthReport()) {
                result = (result && this.getHealthReport().equals(other.getHealthReport()));
            }
            result = (result && this.hasLastHealthReportTime() == other.hasLastHealthReportTime());
            if (this.hasLastHealthReportTime()) {
                result = (result && this.getLastHealthReportTime() == other.getLastHealthReportTime());
            }
            result = (result && this.getNodeLabelsList().equals(other.getNodeLabelsList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasNodeId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getNodeId().hashCode();
            }
            if (this.hasHttpAddress()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getHttpAddress().hashCode();
            }
            if (this.hasRackName()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getRackName().hashCode();
            }
            if (this.hasUsed()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getUsed().hashCode();
            }
            if (this.hasCapability()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getCapability().hashCode();
            }
            if (this.hasNumContainers()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + this.getNumContainers();
            }
            if (this.hasNodeState()) {
                hash = 37 * hash + 7;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getNodeState());
            }
            if (this.hasHealthReport()) {
                hash = 37 * hash + 8;
                hash = 53 * hash + this.getHealthReport().hashCode();
            }
            if (this.hasLastHealthReportTime()) {
                hash = 37 * hash + 9;
                hash = 53 * hash + AbstractMessage.hashLong(this.getLastHealthReportTime());
            }
            if (this.getNodeLabelsCount() > 0) {
                hash = 37 * hash + 10;
                hash = 53 * hash + this.getNodeLabelsList().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static NodeReportProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return NodeReportProto.PARSER.parseFrom(data);
        }
        
        public static NodeReportProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeReportProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return NodeReportProto.PARSER.parseFrom(data);
        }
        
        public static NodeReportProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeReportProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeReportProto parseFrom(final InputStream input) throws IOException {
            return NodeReportProto.PARSER.parseFrom(input);
        }
        
        public static NodeReportProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static NodeReportProto parseDelimitedFrom(final InputStream input) throws IOException {
            return NodeReportProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static NodeReportProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeReportProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static NodeReportProto parseFrom(final CodedInputStream input) throws IOException {
            return NodeReportProto.PARSER.parseFrom(input);
        }
        
        public static NodeReportProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeReportProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final NodeReportProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            NodeReportProto.PARSER = new AbstractParser<NodeReportProto>() {
                @Override
                public NodeReportProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new NodeReportProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new NodeReportProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements NodeReportProtoOrBuilder
        {
            private int bitField0_;
            private NodeIdProto nodeId_;
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> nodeIdBuilder_;
            private Object httpAddress_;
            private Object rackName_;
            private ResourceProto used_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> usedBuilder_;
            private ResourceProto capability_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> capabilityBuilder_;
            private int numContainers_;
            private NodeStateProto nodeState_;
            private Object healthReport_;
            private long lastHealthReportTime_;
            private LazyStringList nodeLabels_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_NodeReportProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_NodeReportProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeReportProto.class, Builder.class);
            }
            
            private Builder() {
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.httpAddress_ = "";
                this.rackName_ = "";
                this.used_ = ResourceProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.nodeState_ = NodeStateProto.NS_NEW;
                this.healthReport_ = "";
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.httpAddress_ = "";
                this.rackName_ = "";
                this.used_ = ResourceProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.nodeState_ = NodeStateProto.NS_NEW;
                this.healthReport_ = "";
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (NodeReportProto.alwaysUseFieldBuilders) {
                    this.getNodeIdFieldBuilder();
                    this.getUsedFieldBuilder();
                    this.getCapabilityFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.httpAddress_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                this.rackName_ = "";
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.usedBuilder_ == null) {
                    this.used_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.usedBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                this.numContainers_ = 0;
                this.bitField0_ &= 0xFFFFFFDF;
                this.nodeState_ = NodeStateProto.NS_NEW;
                this.bitField0_ &= 0xFFFFFFBF;
                this.healthReport_ = "";
                this.bitField0_ &= 0xFFFFFF7F;
                this.lastHealthReportTime_ = 0L;
                this.bitField0_ &= 0xFFFFFEFF;
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFDFF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_NodeReportProto_descriptor;
            }
            
            @Override
            public NodeReportProto getDefaultInstanceForType() {
                return NodeReportProto.getDefaultInstance();
            }
            
            @Override
            public NodeReportProto build() {
                final NodeReportProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public NodeReportProto buildPartial() {
                final NodeReportProto result = new NodeReportProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.nodeIdBuilder_ == null) {
                    result.nodeId_ = this.nodeId_;
                }
                else {
                    result.nodeId_ = this.nodeIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.httpAddress_ = this.httpAddress_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.rackName_ = this.rackName_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                if (this.usedBuilder_ == null) {
                    result.used_ = this.used_;
                }
                else {
                    result.used_ = this.usedBuilder_.build();
                }
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                if (this.capabilityBuilder_ == null) {
                    result.capability_ = this.capability_;
                }
                else {
                    result.capability_ = this.capabilityBuilder_.build();
                }
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.numContainers_ = this.numContainers_;
                if ((from_bitField0_ & 0x40) == 0x40) {
                    to_bitField0_ |= 0x40;
                }
                result.nodeState_ = this.nodeState_;
                if ((from_bitField0_ & 0x80) == 0x80) {
                    to_bitField0_ |= 0x80;
                }
                result.healthReport_ = this.healthReport_;
                if ((from_bitField0_ & 0x100) == 0x100) {
                    to_bitField0_ |= 0x100;
                }
                result.lastHealthReportTime_ = this.lastHealthReportTime_;
                if ((this.bitField0_ & 0x200) == 0x200) {
                    this.nodeLabels_ = new UnmodifiableLazyStringList(this.nodeLabels_);
                    this.bitField0_ &= 0xFFFFFDFF;
                }
                result.nodeLabels_ = this.nodeLabels_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof NodeReportProto) {
                    return this.mergeFrom((NodeReportProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final NodeReportProto other) {
                if (other == NodeReportProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasNodeId()) {
                    this.mergeNodeId(other.getNodeId());
                }
                if (other.hasHttpAddress()) {
                    this.bitField0_ |= 0x2;
                    this.httpAddress_ = other.httpAddress_;
                    this.onChanged();
                }
                if (other.hasRackName()) {
                    this.bitField0_ |= 0x4;
                    this.rackName_ = other.rackName_;
                    this.onChanged();
                }
                if (other.hasUsed()) {
                    this.mergeUsed(other.getUsed());
                }
                if (other.hasCapability()) {
                    this.mergeCapability(other.getCapability());
                }
                if (other.hasNumContainers()) {
                    this.setNumContainers(other.getNumContainers());
                }
                if (other.hasNodeState()) {
                    this.setNodeState(other.getNodeState());
                }
                if (other.hasHealthReport()) {
                    this.bitField0_ |= 0x80;
                    this.healthReport_ = other.healthReport_;
                    this.onChanged();
                }
                if (other.hasLastHealthReportTime()) {
                    this.setLastHealthReportTime(other.getLastHealthReportTime());
                }
                if (!other.nodeLabels_.isEmpty()) {
                    if (this.nodeLabels_.isEmpty()) {
                        this.nodeLabels_ = other.nodeLabels_;
                        this.bitField0_ &= 0xFFFFFDFF;
                    }
                    else {
                        this.ensureNodeLabelsIsMutable();
                        this.nodeLabels_.addAll(other.nodeLabels_);
                    }
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                NodeReportProto parsedMessage = null;
                try {
                    parsedMessage = NodeReportProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (NodeReportProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasNodeId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public NodeIdProto getNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    return this.nodeId_;
                }
                return this.nodeIdBuilder_.getMessage();
            }
            
            public Builder setNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.nodeId_ = value;
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setNodeId(final NodeIdProto.Builder builderForValue) {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.nodeId_ != NodeIdProto.getDefaultInstance()) {
                        this.nodeId_ = NodeIdProto.newBuilder(this.nodeId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.nodeId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public NodeIdProto.Builder getNodeIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getNodeIdFieldBuilder().getBuilder();
            }
            
            @Override
            public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
                if (this.nodeIdBuilder_ != null) {
                    return this.nodeIdBuilder_.getMessageOrBuilder();
                }
                return this.nodeId_;
            }
            
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> getNodeIdFieldBuilder() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeIdBuilder_ = new SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder>(this.nodeId_, this.getParentForChildren(), this.isClean());
                    this.nodeId_ = null;
                }
                return this.nodeIdBuilder_;
            }
            
            @Override
            public boolean hasHttpAddress() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getHttpAddress() {
                final Object ref = this.httpAddress_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.httpAddress_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getHttpAddressBytes() {
                final Object ref = this.httpAddress_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.httpAddress_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setHttpAddress(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.httpAddress_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearHttpAddress() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.httpAddress_ = NodeReportProto.getDefaultInstance().getHttpAddress();
                this.onChanged();
                return this;
            }
            
            public Builder setHttpAddressBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.httpAddress_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasRackName() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public String getRackName() {
                final Object ref = this.rackName_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.rackName_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getRackNameBytes() {
                final Object ref = this.rackName_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.rackName_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setRackName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.rackName_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearRackName() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.rackName_ = NodeReportProto.getDefaultInstance().getRackName();
                this.onChanged();
                return this;
            }
            
            public Builder setRackNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.rackName_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasUsed() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public ResourceProto getUsed() {
                if (this.usedBuilder_ == null) {
                    return this.used_;
                }
                return this.usedBuilder_.getMessage();
            }
            
            public Builder setUsed(final ResourceProto value) {
                if (this.usedBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.used_ = value;
                    this.onChanged();
                }
                else {
                    this.usedBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setUsed(final ResourceProto.Builder builderForValue) {
                if (this.usedBuilder_ == null) {
                    this.used_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.usedBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergeUsed(final ResourceProto value) {
                if (this.usedBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 0x8 && this.used_ != ResourceProto.getDefaultInstance()) {
                        this.used_ = ResourceProto.newBuilder(this.used_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.used_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.usedBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder clearUsed() {
                if (this.usedBuilder_ == null) {
                    this.used_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.usedBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public ResourceProto.Builder getUsedBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return this.getUsedFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getUsedOrBuilder() {
                if (this.usedBuilder_ != null) {
                    return this.usedBuilder_.getMessageOrBuilder();
                }
                return this.used_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getUsedFieldBuilder() {
                if (this.usedBuilder_ == null) {
                    this.usedBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.used_, this.getParentForChildren(), this.isClean());
                    this.used_ = null;
                }
                return this.usedBuilder_;
            }
            
            @Override
            public boolean hasCapability() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public ResourceProto getCapability() {
                if (this.capabilityBuilder_ == null) {
                    return this.capability_;
                }
                return this.capabilityBuilder_.getMessage();
            }
            
            public Builder setCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.capability_ = value;
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder setCapability(final ResourceProto.Builder builderForValue) {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder mergeCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) == 0x10 && this.capability_ != ResourceProto.getDefaultInstance()) {
                        this.capability_ = ResourceProto.newBuilder(this.capability_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.capability_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder clearCapability() {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public ResourceProto.Builder getCapabilityBuilder() {
                this.bitField0_ |= 0x10;
                this.onChanged();
                return this.getCapabilityFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getCapabilityOrBuilder() {
                if (this.capabilityBuilder_ != null) {
                    return this.capabilityBuilder_.getMessageOrBuilder();
                }
                return this.capability_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getCapabilityFieldBuilder() {
                if (this.capabilityBuilder_ == null) {
                    this.capabilityBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.capability_, this.getParentForChildren(), this.isClean());
                    this.capability_ = null;
                }
                return this.capabilityBuilder_;
            }
            
            @Override
            public boolean hasNumContainers() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public int getNumContainers() {
                return this.numContainers_;
            }
            
            public Builder setNumContainers(final int value) {
                this.bitField0_ |= 0x20;
                this.numContainers_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNumContainers() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.numContainers_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasNodeState() {
                return (this.bitField0_ & 0x40) == 0x40;
            }
            
            @Override
            public NodeStateProto getNodeState() {
                return this.nodeState_;
            }
            
            public Builder setNodeState(final NodeStateProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x40;
                this.nodeState_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNodeState() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.nodeState_ = NodeStateProto.NS_NEW;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasHealthReport() {
                return (this.bitField0_ & 0x80) == 0x80;
            }
            
            @Override
            public String getHealthReport() {
                final Object ref = this.healthReport_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.healthReport_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getHealthReportBytes() {
                final Object ref = this.healthReport_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.healthReport_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setHealthReport(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.healthReport_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearHealthReport() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.healthReport_ = NodeReportProto.getDefaultInstance().getHealthReport();
                this.onChanged();
                return this;
            }
            
            public Builder setHealthReportBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x80;
                this.healthReport_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasLastHealthReportTime() {
                return (this.bitField0_ & 0x100) == 0x100;
            }
            
            @Override
            public long getLastHealthReportTime() {
                return this.lastHealthReportTime_;
            }
            
            public Builder setLastHealthReportTime(final long value) {
                this.bitField0_ |= 0x100;
                this.lastHealthReportTime_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearLastHealthReportTime() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.lastHealthReportTime_ = 0L;
                this.onChanged();
                return this;
            }
            
            private void ensureNodeLabelsIsMutable() {
                if ((this.bitField0_ & 0x200) != 0x200) {
                    this.nodeLabels_ = new LazyStringArrayList(this.nodeLabels_);
                    this.bitField0_ |= 0x200;
                }
            }
            
            @Override
            public List<String> getNodeLabelsList() {
                return Collections.unmodifiableList((List<? extends String>)this.nodeLabels_);
            }
            
            @Override
            public int getNodeLabelsCount() {
                return this.nodeLabels_.size();
            }
            
            @Override
            public String getNodeLabels(final int index) {
                return this.nodeLabels_.get(index);
            }
            
            @Override
            public ByteString getNodeLabelsBytes(final int index) {
                return this.nodeLabels_.getByteString(index);
            }
            
            public Builder setNodeLabels(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureNodeLabelsIsMutable();
                this.nodeLabels_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addNodeLabels(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureNodeLabelsIsMutable();
                this.nodeLabels_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllNodeLabels(final Iterable<String> values) {
                this.ensureNodeLabelsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.nodeLabels_);
                this.onChanged();
                return this;
            }
            
            public Builder clearNodeLabels() {
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFDFF;
                this.onChanged();
                return this;
            }
            
            public Builder addNodeLabelsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureNodeLabelsIsMutable();
                this.nodeLabels_.add(value);
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class NodeIdToLabelsProto extends GeneratedMessage implements NodeIdToLabelsProtoOrBuilder
    {
        private static final NodeIdToLabelsProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<NodeIdToLabelsProto> PARSER;
        private int bitField0_;
        public static final int NODEID_FIELD_NUMBER = 1;
        private NodeIdProto nodeId_;
        public static final int NODELABELS_FIELD_NUMBER = 2;
        private LazyStringList nodeLabels_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private NodeIdToLabelsProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private NodeIdToLabelsProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static NodeIdToLabelsProto getDefaultInstance() {
            return NodeIdToLabelsProto.defaultInstance;
        }
        
        @Override
        public NodeIdToLabelsProto getDefaultInstanceForType() {
            return NodeIdToLabelsProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private NodeIdToLabelsProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            NodeIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.nodeId_.toBuilder();
                            }
                            this.nodeId_ = input.readMessage(NodeIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.nodeId_);
                                this.nodeId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            if ((mutable_bitField0_ & 0x2) != 0x2) {
                                this.nodeLabels_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x2;
                            }
                            this.nodeLabels_.add(input.readBytes());
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x2) == 0x2) {
                    this.nodeLabels_ = new UnmodifiableLazyStringList(this.nodeLabels_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeIdToLabelsProto.class, Builder.class);
        }
        
        @Override
        public Parser<NodeIdToLabelsProto> getParserForType() {
            return NodeIdToLabelsProto.PARSER;
        }
        
        @Override
        public boolean hasNodeId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public NodeIdProto getNodeId() {
            return this.nodeId_;
        }
        
        @Override
        public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
            return this.nodeId_;
        }
        
        @Override
        public List<String> getNodeLabelsList() {
            return this.nodeLabels_;
        }
        
        @Override
        public int getNodeLabelsCount() {
            return this.nodeLabels_.size();
        }
        
        @Override
        public String getNodeLabels(final int index) {
            return this.nodeLabels_.get(index);
        }
        
        @Override
        public ByteString getNodeLabelsBytes(final int index) {
            return this.nodeLabels_.getByteString(index);
        }
        
        private void initFields() {
            this.nodeId_ = NodeIdProto.getDefaultInstance();
            this.nodeLabels_ = LazyStringArrayList.EMPTY;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.nodeId_);
            }
            for (int i = 0; i < this.nodeLabels_.size(); ++i) {
                output.writeBytes(2, this.nodeLabels_.getByteString(i));
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.nodeId_);
            }
            int dataSize = 0;
            for (int i = 0; i < this.nodeLabels_.size(); ++i) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.nodeLabels_.getByteString(i));
            }
            size += dataSize;
            size += 1 * this.getNodeLabelsList().size();
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof NodeIdToLabelsProto)) {
                return super.equals(obj);
            }
            final NodeIdToLabelsProto other = (NodeIdToLabelsProto)obj;
            boolean result = true;
            result = (result && this.hasNodeId() == other.hasNodeId());
            if (this.hasNodeId()) {
                result = (result && this.getNodeId().equals(other.getNodeId()));
            }
            result = (result && this.getNodeLabelsList().equals(other.getNodeLabelsList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasNodeId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getNodeId().hashCode();
            }
            if (this.getNodeLabelsCount() > 0) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getNodeLabelsList().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static NodeIdToLabelsProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return NodeIdToLabelsProto.PARSER.parseFrom(data);
        }
        
        public static NodeIdToLabelsProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeIdToLabelsProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeIdToLabelsProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return NodeIdToLabelsProto.PARSER.parseFrom(data);
        }
        
        public static NodeIdToLabelsProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return NodeIdToLabelsProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static NodeIdToLabelsProto parseFrom(final InputStream input) throws IOException {
            return NodeIdToLabelsProto.PARSER.parseFrom(input);
        }
        
        public static NodeIdToLabelsProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeIdToLabelsProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static NodeIdToLabelsProto parseDelimitedFrom(final InputStream input) throws IOException {
            return NodeIdToLabelsProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static NodeIdToLabelsProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeIdToLabelsProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static NodeIdToLabelsProto parseFrom(final CodedInputStream input) throws IOException {
            return NodeIdToLabelsProto.PARSER.parseFrom(input);
        }
        
        public static NodeIdToLabelsProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return NodeIdToLabelsProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final NodeIdToLabelsProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            NodeIdToLabelsProto.PARSER = new AbstractParser<NodeIdToLabelsProto>() {
                @Override
                public NodeIdToLabelsProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new NodeIdToLabelsProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new NodeIdToLabelsProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements NodeIdToLabelsProtoOrBuilder
        {
            private int bitField0_;
            private NodeIdProto nodeId_;
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> nodeIdBuilder_;
            private LazyStringList nodeLabels_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_fieldAccessorTable.ensureFieldAccessorsInitialized(NodeIdToLabelsProto.class, Builder.class);
            }
            
            private Builder() {
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.nodeId_ = NodeIdProto.getDefaultInstance();
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (NodeIdToLabelsProto.alwaysUseFieldBuilders) {
                    this.getNodeIdFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_NodeIdToLabelsProto_descriptor;
            }
            
            @Override
            public NodeIdToLabelsProto getDefaultInstanceForType() {
                return NodeIdToLabelsProto.getDefaultInstance();
            }
            
            @Override
            public NodeIdToLabelsProto build() {
                final NodeIdToLabelsProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public NodeIdToLabelsProto buildPartial() {
                final NodeIdToLabelsProto result = new NodeIdToLabelsProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.nodeIdBuilder_ == null) {
                    result.nodeId_ = this.nodeId_;
                }
                else {
                    result.nodeId_ = this.nodeIdBuilder_.build();
                }
                if ((this.bitField0_ & 0x2) == 0x2) {
                    this.nodeLabels_ = new UnmodifiableLazyStringList(this.nodeLabels_);
                    this.bitField0_ &= 0xFFFFFFFD;
                }
                result.nodeLabels_ = this.nodeLabels_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof NodeIdToLabelsProto) {
                    return this.mergeFrom((NodeIdToLabelsProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final NodeIdToLabelsProto other) {
                if (other == NodeIdToLabelsProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasNodeId()) {
                    this.mergeNodeId(other.getNodeId());
                }
                if (!other.nodeLabels_.isEmpty()) {
                    if (this.nodeLabels_.isEmpty()) {
                        this.nodeLabels_ = other.nodeLabels_;
                        this.bitField0_ &= 0xFFFFFFFD;
                    }
                    else {
                        this.ensureNodeLabelsIsMutable();
                        this.nodeLabels_.addAll(other.nodeLabels_);
                    }
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                NodeIdToLabelsProto parsedMessage = null;
                try {
                    parsedMessage = NodeIdToLabelsProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (NodeIdToLabelsProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasNodeId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public NodeIdProto getNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    return this.nodeId_;
                }
                return this.nodeIdBuilder_.getMessage();
            }
            
            public Builder setNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.nodeId_ = value;
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setNodeId(final NodeIdProto.Builder builderForValue) {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeNodeId(final NodeIdProto value) {
                if (this.nodeIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.nodeId_ != NodeIdProto.getDefaultInstance()) {
                        this.nodeId_ = NodeIdProto.newBuilder(this.nodeId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.nodeId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearNodeId() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeId_ = NodeIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.nodeIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public NodeIdProto.Builder getNodeIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getNodeIdFieldBuilder().getBuilder();
            }
            
            @Override
            public NodeIdProtoOrBuilder getNodeIdOrBuilder() {
                if (this.nodeIdBuilder_ != null) {
                    return this.nodeIdBuilder_.getMessageOrBuilder();
                }
                return this.nodeId_;
            }
            
            private SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder> getNodeIdFieldBuilder() {
                if (this.nodeIdBuilder_ == null) {
                    this.nodeIdBuilder_ = new SingleFieldBuilder<NodeIdProto, NodeIdProto.Builder, NodeIdProtoOrBuilder>(this.nodeId_, this.getParentForChildren(), this.isClean());
                    this.nodeId_ = null;
                }
                return this.nodeIdBuilder_;
            }
            
            private void ensureNodeLabelsIsMutable() {
                if ((this.bitField0_ & 0x2) != 0x2) {
                    this.nodeLabels_ = new LazyStringArrayList(this.nodeLabels_);
                    this.bitField0_ |= 0x2;
                }
            }
            
            @Override
            public List<String> getNodeLabelsList() {
                return Collections.unmodifiableList((List<? extends String>)this.nodeLabels_);
            }
            
            @Override
            public int getNodeLabelsCount() {
                return this.nodeLabels_.size();
            }
            
            @Override
            public String getNodeLabels(final int index) {
                return this.nodeLabels_.get(index);
            }
            
            @Override
            public ByteString getNodeLabelsBytes(final int index) {
                return this.nodeLabels_.getByteString(index);
            }
            
            public Builder setNodeLabels(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureNodeLabelsIsMutable();
                this.nodeLabels_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addNodeLabels(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureNodeLabelsIsMutable();
                this.nodeLabels_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllNodeLabels(final Iterable<String> values) {
                this.ensureNodeLabelsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.nodeLabels_);
                this.onChanged();
                return this;
            }
            
            public Builder clearNodeLabels() {
                this.nodeLabels_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                this.onChanged();
                return this;
            }
            
            public Builder addNodeLabelsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureNodeLabelsIsMutable();
                this.nodeLabels_.add(value);
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ResourceRequestProto extends GeneratedMessage implements ResourceRequestProtoOrBuilder
    {
        private static final ResourceRequestProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ResourceRequestProto> PARSER;
        private int bitField0_;
        public static final int PRIORITY_FIELD_NUMBER = 1;
        private PriorityProto priority_;
        public static final int RESOURCE_NAME_FIELD_NUMBER = 2;
        private Object resourceName_;
        public static final int CAPABILITY_FIELD_NUMBER = 3;
        private ResourceProto capability_;
        public static final int NUM_CONTAINERS_FIELD_NUMBER = 4;
        private int numContainers_;
        public static final int RELAX_LOCALITY_FIELD_NUMBER = 5;
        private boolean relaxLocality_;
        public static final int NODE_LABEL_EXPRESSION_FIELD_NUMBER = 6;
        private Object nodeLabelExpression_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ResourceRequestProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ResourceRequestProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ResourceRequestProto getDefaultInstance() {
            return ResourceRequestProto.defaultInstance;
        }
        
        @Override
        public ResourceRequestProto getDefaultInstanceForType() {
            return ResourceRequestProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ResourceRequestProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            PriorityProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.priority_.toBuilder();
                            }
                            this.priority_ = input.readMessage(PriorityProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.priority_);
                                this.priority_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.resourceName_ = input.readBytes();
                            continue;
                        }
                        case 26: {
                            ResourceProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x4) == 0x4) {
                                subBuilder2 = this.capability_.toBuilder();
                            }
                            this.capability_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.capability_);
                                this.capability_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x8;
                            this.numContainers_ = input.readInt32();
                            continue;
                        }
                        case 40: {
                            this.bitField0_ |= 0x10;
                            this.relaxLocality_ = input.readBool();
                            continue;
                        }
                        case 50: {
                            this.bitField0_ |= 0x20;
                            this.nodeLabelExpression_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceRequestProto.class, Builder.class);
        }
        
        @Override
        public Parser<ResourceRequestProto> getParserForType() {
            return ResourceRequestProto.PARSER;
        }
        
        @Override
        public boolean hasPriority() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public PriorityProto getPriority() {
            return this.priority_;
        }
        
        @Override
        public PriorityProtoOrBuilder getPriorityOrBuilder() {
            return this.priority_;
        }
        
        @Override
        public boolean hasResourceName() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getResourceName() {
            final Object ref = this.resourceName_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.resourceName_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getResourceNameBytes() {
            final Object ref = this.resourceName_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.resourceName_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasCapability() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public ResourceProto getCapability() {
            return this.capability_;
        }
        
        @Override
        public ResourceProtoOrBuilder getCapabilityOrBuilder() {
            return this.capability_;
        }
        
        @Override
        public boolean hasNumContainers() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public int getNumContainers() {
            return this.numContainers_;
        }
        
        @Override
        public boolean hasRelaxLocality() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public boolean getRelaxLocality() {
            return this.relaxLocality_;
        }
        
        @Override
        public boolean hasNodeLabelExpression() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public String getNodeLabelExpression() {
            final Object ref = this.nodeLabelExpression_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.nodeLabelExpression_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getNodeLabelExpressionBytes() {
            final Object ref = this.nodeLabelExpression_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.nodeLabelExpression_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.priority_ = PriorityProto.getDefaultInstance();
            this.resourceName_ = "";
            this.capability_ = ResourceProto.getDefaultInstance();
            this.numContainers_ = 0;
            this.relaxLocality_ = true;
            this.nodeLabelExpression_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.priority_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getResourceNameBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeMessage(3, this.capability_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeInt32(4, this.numContainers_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeBool(5, this.relaxLocality_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeBytes(6, this.getNodeLabelExpressionBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.priority_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getResourceNameBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeMessageSize(3, this.capability_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeInt32Size(4, this.numContainers_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeBoolSize(5, this.relaxLocality_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeBytesSize(6, this.getNodeLabelExpressionBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ResourceRequestProto)) {
                return super.equals(obj);
            }
            final ResourceRequestProto other = (ResourceRequestProto)obj;
            boolean result = true;
            result = (result && this.hasPriority() == other.hasPriority());
            if (this.hasPriority()) {
                result = (result && this.getPriority().equals(other.getPriority()));
            }
            result = (result && this.hasResourceName() == other.hasResourceName());
            if (this.hasResourceName()) {
                result = (result && this.getResourceName().equals(other.getResourceName()));
            }
            result = (result && this.hasCapability() == other.hasCapability());
            if (this.hasCapability()) {
                result = (result && this.getCapability().equals(other.getCapability()));
            }
            result = (result && this.hasNumContainers() == other.hasNumContainers());
            if (this.hasNumContainers()) {
                result = (result && this.getNumContainers() == other.getNumContainers());
            }
            result = (result && this.hasRelaxLocality() == other.hasRelaxLocality());
            if (this.hasRelaxLocality()) {
                result = (result && this.getRelaxLocality() == other.getRelaxLocality());
            }
            result = (result && this.hasNodeLabelExpression() == other.hasNodeLabelExpression());
            if (this.hasNodeLabelExpression()) {
                result = (result && this.getNodeLabelExpression().equals(other.getNodeLabelExpression()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasPriority()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getPriority().hashCode();
            }
            if (this.hasResourceName()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getResourceName().hashCode();
            }
            if (this.hasCapability()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getCapability().hashCode();
            }
            if (this.hasNumContainers()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getNumContainers();
            }
            if (this.hasRelaxLocality()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + AbstractMessage.hashBoolean(this.getRelaxLocality());
            }
            if (this.hasNodeLabelExpression()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + this.getNodeLabelExpression().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ResourceRequestProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ResourceRequestProto.PARSER.parseFrom(data);
        }
        
        public static ResourceRequestProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceRequestProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ResourceRequestProto.PARSER.parseFrom(data);
        }
        
        public static ResourceRequestProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceRequestProto parseFrom(final InputStream input) throws IOException {
            return ResourceRequestProto.PARSER.parseFrom(input);
        }
        
        public static ResourceRequestProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ResourceRequestProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ResourceRequestProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ResourceRequestProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceRequestProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ResourceRequestProto parseFrom(final CodedInputStream input) throws IOException {
            return ResourceRequestProto.PARSER.parseFrom(input);
        }
        
        public static ResourceRequestProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ResourceRequestProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ResourceRequestProto.PARSER = new AbstractParser<ResourceRequestProto>() {
                @Override
                public ResourceRequestProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ResourceRequestProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ResourceRequestProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ResourceRequestProtoOrBuilder
        {
            private int bitField0_;
            private PriorityProto priority_;
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> priorityBuilder_;
            private Object resourceName_;
            private ResourceProto capability_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> capabilityBuilder_;
            private int numContainers_;
            private boolean relaxLocality_;
            private Object nodeLabelExpression_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceRequestProto.class, Builder.class);
            }
            
            private Builder() {
                this.priority_ = PriorityProto.getDefaultInstance();
                this.resourceName_ = "";
                this.capability_ = ResourceProto.getDefaultInstance();
                this.relaxLocality_ = true;
                this.nodeLabelExpression_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.priority_ = PriorityProto.getDefaultInstance();
                this.resourceName_ = "";
                this.capability_ = ResourceProto.getDefaultInstance();
                this.relaxLocality_ = true;
                this.nodeLabelExpression_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ResourceRequestProto.alwaysUseFieldBuilders) {
                    this.getPriorityFieldBuilder();
                    this.getCapabilityFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.resourceName_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                this.numContainers_ = 0;
                this.bitField0_ &= 0xFFFFFFF7;
                this.relaxLocality_ = true;
                this.bitField0_ &= 0xFFFFFFEF;
                this.nodeLabelExpression_ = "";
                this.bitField0_ &= 0xFFFFFFDF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceRequestProto_descriptor;
            }
            
            @Override
            public ResourceRequestProto getDefaultInstanceForType() {
                return ResourceRequestProto.getDefaultInstance();
            }
            
            @Override
            public ResourceRequestProto build() {
                final ResourceRequestProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ResourceRequestProto buildPartial() {
                final ResourceRequestProto result = new ResourceRequestProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.priorityBuilder_ == null) {
                    result.priority_ = this.priority_;
                }
                else {
                    result.priority_ = this.priorityBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.resourceName_ = this.resourceName_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.capabilityBuilder_ == null) {
                    result.capability_ = this.capability_;
                }
                else {
                    result.capability_ = this.capabilityBuilder_.build();
                }
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.numContainers_ = this.numContainers_;
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                result.relaxLocality_ = this.relaxLocality_;
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.nodeLabelExpression_ = this.nodeLabelExpression_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ResourceRequestProto) {
                    return this.mergeFrom((ResourceRequestProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ResourceRequestProto other) {
                if (other == ResourceRequestProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasPriority()) {
                    this.mergePriority(other.getPriority());
                }
                if (other.hasResourceName()) {
                    this.bitField0_ |= 0x2;
                    this.resourceName_ = other.resourceName_;
                    this.onChanged();
                }
                if (other.hasCapability()) {
                    this.mergeCapability(other.getCapability());
                }
                if (other.hasNumContainers()) {
                    this.setNumContainers(other.getNumContainers());
                }
                if (other.hasRelaxLocality()) {
                    this.setRelaxLocality(other.getRelaxLocality());
                }
                if (other.hasNodeLabelExpression()) {
                    this.bitField0_ |= 0x20;
                    this.nodeLabelExpression_ = other.nodeLabelExpression_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ResourceRequestProto parsedMessage = null;
                try {
                    parsedMessage = ResourceRequestProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ResourceRequestProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasPriority() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public PriorityProto getPriority() {
                if (this.priorityBuilder_ == null) {
                    return this.priority_;
                }
                return this.priorityBuilder_.getMessage();
            }
            
            public Builder setPriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.priority_ = value;
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setPriority(final PriorityProto.Builder builderForValue) {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergePriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.priority_ != PriorityProto.getDefaultInstance()) {
                        this.priority_ = PriorityProto.newBuilder(this.priority_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.priority_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearPriority() {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public PriorityProto.Builder getPriorityBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getPriorityFieldBuilder().getBuilder();
            }
            
            @Override
            public PriorityProtoOrBuilder getPriorityOrBuilder() {
                if (this.priorityBuilder_ != null) {
                    return this.priorityBuilder_.getMessageOrBuilder();
                }
                return this.priority_;
            }
            
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> getPriorityFieldBuilder() {
                if (this.priorityBuilder_ == null) {
                    this.priorityBuilder_ = new SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder>(this.priority_, this.getParentForChildren(), this.isClean());
                    this.priority_ = null;
                }
                return this.priorityBuilder_;
            }
            
            @Override
            public boolean hasResourceName() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getResourceName() {
                final Object ref = this.resourceName_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.resourceName_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getResourceNameBytes() {
                final Object ref = this.resourceName_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.resourceName_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setResourceName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.resourceName_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearResourceName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.resourceName_ = ResourceRequestProto.getDefaultInstance().getResourceName();
                this.onChanged();
                return this;
            }
            
            public Builder setResourceNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.resourceName_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasCapability() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public ResourceProto getCapability() {
                if (this.capabilityBuilder_ == null) {
                    return this.capability_;
                }
                return this.capabilityBuilder_.getMessage();
            }
            
            public Builder setCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.capability_ = value;
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder setCapability(final ResourceProto.Builder builderForValue) {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder mergeCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 0x4 && this.capability_ != ResourceProto.getDefaultInstance()) {
                        this.capability_ = ResourceProto.newBuilder(this.capability_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.capability_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder clearCapability() {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public ResourceProto.Builder getCapabilityBuilder() {
                this.bitField0_ |= 0x4;
                this.onChanged();
                return this.getCapabilityFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getCapabilityOrBuilder() {
                if (this.capabilityBuilder_ != null) {
                    return this.capabilityBuilder_.getMessageOrBuilder();
                }
                return this.capability_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getCapabilityFieldBuilder() {
                if (this.capabilityBuilder_ == null) {
                    this.capabilityBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.capability_, this.getParentForChildren(), this.isClean());
                    this.capability_ = null;
                }
                return this.capabilityBuilder_;
            }
            
            @Override
            public boolean hasNumContainers() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public int getNumContainers() {
                return this.numContainers_;
            }
            
            public Builder setNumContainers(final int value) {
                this.bitField0_ |= 0x8;
                this.numContainers_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNumContainers() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.numContainers_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasRelaxLocality() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public boolean getRelaxLocality() {
                return this.relaxLocality_;
            }
            
            public Builder setRelaxLocality(final boolean value) {
                this.bitField0_ |= 0x10;
                this.relaxLocality_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearRelaxLocality() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.relaxLocality_ = true;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasNodeLabelExpression() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public String getNodeLabelExpression() {
                final Object ref = this.nodeLabelExpression_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.nodeLabelExpression_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getNodeLabelExpressionBytes() {
                final Object ref = this.nodeLabelExpression_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.nodeLabelExpression_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setNodeLabelExpression(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.nodeLabelExpression_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNodeLabelExpression() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.nodeLabelExpression_ = ResourceRequestProto.getDefaultInstance().getNodeLabelExpression();
                this.onChanged();
                return this;
            }
            
            public Builder setNodeLabelExpressionBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x20;
                this.nodeLabelExpression_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class PreemptionMessageProto extends GeneratedMessage implements PreemptionMessageProtoOrBuilder
    {
        private static final PreemptionMessageProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<PreemptionMessageProto> PARSER;
        private int bitField0_;
        public static final int STRICTCONTRACT_FIELD_NUMBER = 1;
        private StrictPreemptionContractProto strictContract_;
        public static final int CONTRACT_FIELD_NUMBER = 2;
        private PreemptionContractProto contract_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private PreemptionMessageProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private PreemptionMessageProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static PreemptionMessageProto getDefaultInstance() {
            return PreemptionMessageProto.defaultInstance;
        }
        
        @Override
        public PreemptionMessageProto getDefaultInstanceForType() {
            return PreemptionMessageProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private PreemptionMessageProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            StrictPreemptionContractProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.strictContract_.toBuilder();
                            }
                            this.strictContract_ = input.readMessage(StrictPreemptionContractProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.strictContract_);
                                this.strictContract_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            PreemptionContractProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.contract_.toBuilder();
                            }
                            this.contract_ = input.readMessage(PreemptionContractProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.contract_);
                                this.contract_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionMessageProto.class, Builder.class);
        }
        
        @Override
        public Parser<PreemptionMessageProto> getParserForType() {
            return PreemptionMessageProto.PARSER;
        }
        
        @Override
        public boolean hasStrictContract() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public StrictPreemptionContractProto getStrictContract() {
            return this.strictContract_;
        }
        
        @Override
        public StrictPreemptionContractProtoOrBuilder getStrictContractOrBuilder() {
            return this.strictContract_;
        }
        
        @Override
        public boolean hasContract() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public PreemptionContractProto getContract() {
            return this.contract_;
        }
        
        @Override
        public PreemptionContractProtoOrBuilder getContractOrBuilder() {
            return this.contract_;
        }
        
        private void initFields() {
            this.strictContract_ = StrictPreemptionContractProto.getDefaultInstance();
            this.contract_ = PreemptionContractProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.strictContract_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.contract_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.strictContract_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.contract_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PreemptionMessageProto)) {
                return super.equals(obj);
            }
            final PreemptionMessageProto other = (PreemptionMessageProto)obj;
            boolean result = true;
            result = (result && this.hasStrictContract() == other.hasStrictContract());
            if (this.hasStrictContract()) {
                result = (result && this.getStrictContract().equals(other.getStrictContract()));
            }
            result = (result && this.hasContract() == other.hasContract());
            if (this.hasContract()) {
                result = (result && this.getContract().equals(other.getContract()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasStrictContract()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getStrictContract().hashCode();
            }
            if (this.hasContract()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getContract().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static PreemptionMessageProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return PreemptionMessageProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionMessageProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionMessageProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionMessageProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return PreemptionMessageProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionMessageProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionMessageProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionMessageProto parseFrom(final InputStream input) throws IOException {
            return PreemptionMessageProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionMessageProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionMessageProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static PreemptionMessageProto parseDelimitedFrom(final InputStream input) throws IOException {
            return PreemptionMessageProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static PreemptionMessageProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionMessageProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static PreemptionMessageProto parseFrom(final CodedInputStream input) throws IOException {
            return PreemptionMessageProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionMessageProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionMessageProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final PreemptionMessageProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            PreemptionMessageProto.PARSER = new AbstractParser<PreemptionMessageProto>() {
                @Override
                public PreemptionMessageProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new PreemptionMessageProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new PreemptionMessageProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PreemptionMessageProtoOrBuilder
        {
            private int bitField0_;
            private StrictPreemptionContractProto strictContract_;
            private SingleFieldBuilder<StrictPreemptionContractProto, StrictPreemptionContractProto.Builder, StrictPreemptionContractProtoOrBuilder> strictContractBuilder_;
            private PreemptionContractProto contract_;
            private SingleFieldBuilder<PreemptionContractProto, PreemptionContractProto.Builder, PreemptionContractProtoOrBuilder> contractBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionMessageProto.class, Builder.class);
            }
            
            private Builder() {
                this.strictContract_ = StrictPreemptionContractProto.getDefaultInstance();
                this.contract_ = PreemptionContractProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.strictContract_ = StrictPreemptionContractProto.getDefaultInstance();
                this.contract_ = PreemptionContractProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (PreemptionMessageProto.alwaysUseFieldBuilders) {
                    this.getStrictContractFieldBuilder();
                    this.getContractFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.strictContractBuilder_ == null) {
                    this.strictContract_ = StrictPreemptionContractProto.getDefaultInstance();
                }
                else {
                    this.strictContractBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.contractBuilder_ == null) {
                    this.contract_ = PreemptionContractProto.getDefaultInstance();
                }
                else {
                    this.contractBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionMessageProto_descriptor;
            }
            
            @Override
            public PreemptionMessageProto getDefaultInstanceForType() {
                return PreemptionMessageProto.getDefaultInstance();
            }
            
            @Override
            public PreemptionMessageProto build() {
                final PreemptionMessageProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public PreemptionMessageProto buildPartial() {
                final PreemptionMessageProto result = new PreemptionMessageProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.strictContractBuilder_ == null) {
                    result.strictContract_ = this.strictContract_;
                }
                else {
                    result.strictContract_ = this.strictContractBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.contractBuilder_ == null) {
                    result.contract_ = this.contract_;
                }
                else {
                    result.contract_ = this.contractBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof PreemptionMessageProto) {
                    return this.mergeFrom((PreemptionMessageProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final PreemptionMessageProto other) {
                if (other == PreemptionMessageProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasStrictContract()) {
                    this.mergeStrictContract(other.getStrictContract());
                }
                if (other.hasContract()) {
                    this.mergeContract(other.getContract());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                PreemptionMessageProto parsedMessage = null;
                try {
                    parsedMessage = PreemptionMessageProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PreemptionMessageProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasStrictContract() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public StrictPreemptionContractProto getStrictContract() {
                if (this.strictContractBuilder_ == null) {
                    return this.strictContract_;
                }
                return this.strictContractBuilder_.getMessage();
            }
            
            public Builder setStrictContract(final StrictPreemptionContractProto value) {
                if (this.strictContractBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.strictContract_ = value;
                    this.onChanged();
                }
                else {
                    this.strictContractBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setStrictContract(final StrictPreemptionContractProto.Builder builderForValue) {
                if (this.strictContractBuilder_ == null) {
                    this.strictContract_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.strictContractBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeStrictContract(final StrictPreemptionContractProto value) {
                if (this.strictContractBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.strictContract_ != StrictPreemptionContractProto.getDefaultInstance()) {
                        this.strictContract_ = StrictPreemptionContractProto.newBuilder(this.strictContract_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.strictContract_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.strictContractBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearStrictContract() {
                if (this.strictContractBuilder_ == null) {
                    this.strictContract_ = StrictPreemptionContractProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.strictContractBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public StrictPreemptionContractProto.Builder getStrictContractBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getStrictContractFieldBuilder().getBuilder();
            }
            
            @Override
            public StrictPreemptionContractProtoOrBuilder getStrictContractOrBuilder() {
                if (this.strictContractBuilder_ != null) {
                    return this.strictContractBuilder_.getMessageOrBuilder();
                }
                return this.strictContract_;
            }
            
            private SingleFieldBuilder<StrictPreemptionContractProto, StrictPreemptionContractProto.Builder, StrictPreemptionContractProtoOrBuilder> getStrictContractFieldBuilder() {
                if (this.strictContractBuilder_ == null) {
                    this.strictContractBuilder_ = new SingleFieldBuilder<StrictPreemptionContractProto, StrictPreemptionContractProto.Builder, StrictPreemptionContractProtoOrBuilder>(this.strictContract_, this.getParentForChildren(), this.isClean());
                    this.strictContract_ = null;
                }
                return this.strictContractBuilder_;
            }
            
            @Override
            public boolean hasContract() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public PreemptionContractProto getContract() {
                if (this.contractBuilder_ == null) {
                    return this.contract_;
                }
                return this.contractBuilder_.getMessage();
            }
            
            public Builder setContract(final PreemptionContractProto value) {
                if (this.contractBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.contract_ = value;
                    this.onChanged();
                }
                else {
                    this.contractBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setContract(final PreemptionContractProto.Builder builderForValue) {
                if (this.contractBuilder_ == null) {
                    this.contract_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.contractBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeContract(final PreemptionContractProto value) {
                if (this.contractBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.contract_ != PreemptionContractProto.getDefaultInstance()) {
                        this.contract_ = PreemptionContractProto.newBuilder(this.contract_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.contract_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.contractBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearContract() {
                if (this.contractBuilder_ == null) {
                    this.contract_ = PreemptionContractProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.contractBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public PreemptionContractProto.Builder getContractBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getContractFieldBuilder().getBuilder();
            }
            
            @Override
            public PreemptionContractProtoOrBuilder getContractOrBuilder() {
                if (this.contractBuilder_ != null) {
                    return this.contractBuilder_.getMessageOrBuilder();
                }
                return this.contract_;
            }
            
            private SingleFieldBuilder<PreemptionContractProto, PreemptionContractProto.Builder, PreemptionContractProtoOrBuilder> getContractFieldBuilder() {
                if (this.contractBuilder_ == null) {
                    this.contractBuilder_ = new SingleFieldBuilder<PreemptionContractProto, PreemptionContractProto.Builder, PreemptionContractProtoOrBuilder>(this.contract_, this.getParentForChildren(), this.isClean());
                    this.contract_ = null;
                }
                return this.contractBuilder_;
            }
        }
    }
    
    public static final class StrictPreemptionContractProto extends GeneratedMessage implements StrictPreemptionContractProtoOrBuilder
    {
        private static final StrictPreemptionContractProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StrictPreemptionContractProto> PARSER;
        public static final int CONTAINER_FIELD_NUMBER = 1;
        private List<PreemptionContainerProto> container_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private StrictPreemptionContractProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StrictPreemptionContractProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StrictPreemptionContractProto getDefaultInstance() {
            return StrictPreemptionContractProto.defaultInstance;
        }
        
        @Override
        public StrictPreemptionContractProto getDefaultInstanceForType() {
            return StrictPreemptionContractProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StrictPreemptionContractProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            if ((mutable_bitField0_ & 0x1) != 0x1) {
                                this.container_ = new ArrayList<PreemptionContainerProto>();
                                mutable_bitField0_ |= 0x1;
                            }
                            this.container_.add(input.readMessage(PreemptionContainerProto.PARSER, extensionRegistry));
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x1) == 0x1) {
                    this.container_ = Collections.unmodifiableList((List<? extends PreemptionContainerProto>)this.container_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StrictPreemptionContractProto.class, Builder.class);
        }
        
        @Override
        public Parser<StrictPreemptionContractProto> getParserForType() {
            return StrictPreemptionContractProto.PARSER;
        }
        
        @Override
        public List<PreemptionContainerProto> getContainerList() {
            return this.container_;
        }
        
        @Override
        public List<? extends PreemptionContainerProtoOrBuilder> getContainerOrBuilderList() {
            return this.container_;
        }
        
        @Override
        public int getContainerCount() {
            return this.container_.size();
        }
        
        @Override
        public PreemptionContainerProto getContainer(final int index) {
            return this.container_.get(index);
        }
        
        @Override
        public PreemptionContainerProtoOrBuilder getContainerOrBuilder(final int index) {
            return this.container_.get(index);
        }
        
        private void initFields() {
            this.container_ = Collections.emptyList();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            for (int i = 0; i < this.container_.size(); ++i) {
                output.writeMessage(1, this.container_.get(i));
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            for (int i = 0; i < this.container_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(1, this.container_.get(i));
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof StrictPreemptionContractProto)) {
                return super.equals(obj);
            }
            final StrictPreemptionContractProto other = (StrictPreemptionContractProto)obj;
            boolean result = true;
            result = (result && this.getContainerList().equals(other.getContainerList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.getContainerCount() > 0) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getContainerList().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static StrictPreemptionContractProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return StrictPreemptionContractProto.PARSER.parseFrom(data);
        }
        
        public static StrictPreemptionContractProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StrictPreemptionContractProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StrictPreemptionContractProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return StrictPreemptionContractProto.PARSER.parseFrom(data);
        }
        
        public static StrictPreemptionContractProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StrictPreemptionContractProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StrictPreemptionContractProto parseFrom(final InputStream input) throws IOException {
            return StrictPreemptionContractProto.PARSER.parseFrom(input);
        }
        
        public static StrictPreemptionContractProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StrictPreemptionContractProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static StrictPreemptionContractProto parseDelimitedFrom(final InputStream input) throws IOException {
            return StrictPreemptionContractProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static StrictPreemptionContractProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StrictPreemptionContractProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static StrictPreemptionContractProto parseFrom(final CodedInputStream input) throws IOException {
            return StrictPreemptionContractProto.PARSER.parseFrom(input);
        }
        
        public static StrictPreemptionContractProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StrictPreemptionContractProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StrictPreemptionContractProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            StrictPreemptionContractProto.PARSER = new AbstractParser<StrictPreemptionContractProto>() {
                @Override
                public StrictPreemptionContractProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new StrictPreemptionContractProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new StrictPreemptionContractProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StrictPreemptionContractProtoOrBuilder
        {
            private int bitField0_;
            private List<PreemptionContainerProto> container_;
            private RepeatedFieldBuilder<PreemptionContainerProto, PreemptionContainerProto.Builder, PreemptionContainerProtoOrBuilder> containerBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StrictPreemptionContractProto.class, Builder.class);
            }
            
            private Builder() {
                this.container_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.container_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (StrictPreemptionContractProto.alwaysUseFieldBuilders) {
                    this.getContainerFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.containerBuilder_ == null) {
                    this.container_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                }
                else {
                    this.containerBuilder_.clear();
                }
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_StrictPreemptionContractProto_descriptor;
            }
            
            @Override
            public StrictPreemptionContractProto getDefaultInstanceForType() {
                return StrictPreemptionContractProto.getDefaultInstance();
            }
            
            @Override
            public StrictPreemptionContractProto build() {
                final StrictPreemptionContractProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public StrictPreemptionContractProto buildPartial() {
                final StrictPreemptionContractProto result = new StrictPreemptionContractProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                if (this.containerBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        this.container_ = Collections.unmodifiableList((List<? extends PreemptionContainerProto>)this.container_);
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.container_ = this.container_;
                }
                else {
                    result.container_ = this.containerBuilder_.build();
                }
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof StrictPreemptionContractProto) {
                    return this.mergeFrom((StrictPreemptionContractProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final StrictPreemptionContractProto other) {
                if (other == StrictPreemptionContractProto.getDefaultInstance()) {
                    return this;
                }
                if (this.containerBuilder_ == null) {
                    if (!other.container_.isEmpty()) {
                        if (this.container_.isEmpty()) {
                            this.container_ = other.container_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        }
                        else {
                            this.ensureContainerIsMutable();
                            this.container_.addAll(other.container_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.container_.isEmpty()) {
                    if (this.containerBuilder_.isEmpty()) {
                        this.containerBuilder_.dispose();
                        this.containerBuilder_ = null;
                        this.container_ = other.container_;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.containerBuilder_ = (StrictPreemptionContractProto.alwaysUseFieldBuilders ? this.getContainerFieldBuilder() : null);
                    }
                    else {
                        this.containerBuilder_.addAllMessages(other.container_);
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                StrictPreemptionContractProto parsedMessage = null;
                try {
                    parsedMessage = StrictPreemptionContractProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (StrictPreemptionContractProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            private void ensureContainerIsMutable() {
                if ((this.bitField0_ & 0x1) != 0x1) {
                    this.container_ = new ArrayList<PreemptionContainerProto>(this.container_);
                    this.bitField0_ |= 0x1;
                }
            }
            
            @Override
            public List<PreemptionContainerProto> getContainerList() {
                if (this.containerBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends PreemptionContainerProto>)this.container_);
                }
                return this.containerBuilder_.getMessageList();
            }
            
            @Override
            public int getContainerCount() {
                if (this.containerBuilder_ == null) {
                    return this.container_.size();
                }
                return this.containerBuilder_.getCount();
            }
            
            @Override
            public PreemptionContainerProto getContainer(final int index) {
                if (this.containerBuilder_ == null) {
                    return this.container_.get(index);
                }
                return this.containerBuilder_.getMessage(index);
            }
            
            public Builder setContainer(final int index, final PreemptionContainerProto value) {
                if (this.containerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureContainerIsMutable();
                    this.container_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setContainer(final int index, final PreemptionContainerProto.Builder builderForValue) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addContainer(final PreemptionContainerProto value) {
                if (this.containerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureContainerIsMutable();
                    this.container_.add(value);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addContainer(final int index, final PreemptionContainerProto value) {
                if (this.containerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureContainerIsMutable();
                    this.container_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addContainer(final PreemptionContainerProto.Builder builderForValue) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addContainer(final int index, final PreemptionContainerProto.Builder builderForValue) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllContainer(final Iterable<? extends PreemptionContainerProto> values) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.container_);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearContainer() {
                if (this.containerBuilder_ == null) {
                    this.container_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeContainer(final int index) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.remove(index);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.remove(index);
                }
                return this;
            }
            
            public PreemptionContainerProto.Builder getContainerBuilder(final int index) {
                return this.getContainerFieldBuilder().getBuilder(index);
            }
            
            @Override
            public PreemptionContainerProtoOrBuilder getContainerOrBuilder(final int index) {
                if (this.containerBuilder_ == null) {
                    return this.container_.get(index);
                }
                return this.containerBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends PreemptionContainerProtoOrBuilder> getContainerOrBuilderList() {
                if (this.containerBuilder_ != null) {
                    return this.containerBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends PreemptionContainerProtoOrBuilder>)this.container_);
            }
            
            public PreemptionContainerProto.Builder addContainerBuilder() {
                return this.getContainerFieldBuilder().addBuilder(PreemptionContainerProto.getDefaultInstance());
            }
            
            public PreemptionContainerProto.Builder addContainerBuilder(final int index) {
                return this.getContainerFieldBuilder().addBuilder(index, PreemptionContainerProto.getDefaultInstance());
            }
            
            public List<PreemptionContainerProto.Builder> getContainerBuilderList() {
                return this.getContainerFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<PreemptionContainerProto, PreemptionContainerProto.Builder, PreemptionContainerProtoOrBuilder> getContainerFieldBuilder() {
                if (this.containerBuilder_ == null) {
                    this.containerBuilder_ = new RepeatedFieldBuilder<PreemptionContainerProto, PreemptionContainerProto.Builder, PreemptionContainerProtoOrBuilder>(this.container_, (this.bitField0_ & 0x1) == 0x1, this.getParentForChildren(), this.isClean());
                    this.container_ = null;
                }
                return this.containerBuilder_;
            }
        }
    }
    
    public static final class PreemptionContractProto extends GeneratedMessage implements PreemptionContractProtoOrBuilder
    {
        private static final PreemptionContractProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<PreemptionContractProto> PARSER;
        public static final int RESOURCE_FIELD_NUMBER = 1;
        private List<PreemptionResourceRequestProto> resource_;
        public static final int CONTAINER_FIELD_NUMBER = 2;
        private List<PreemptionContainerProto> container_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private PreemptionContractProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private PreemptionContractProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static PreemptionContractProto getDefaultInstance() {
            return PreemptionContractProto.defaultInstance;
        }
        
        @Override
        public PreemptionContractProto getDefaultInstanceForType() {
            return PreemptionContractProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private PreemptionContractProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            if ((mutable_bitField0_ & 0x1) != 0x1) {
                                this.resource_ = new ArrayList<PreemptionResourceRequestProto>();
                                mutable_bitField0_ |= 0x1;
                            }
                            this.resource_.add(input.readMessage(PreemptionResourceRequestProto.PARSER, extensionRegistry));
                            continue;
                        }
                        case 18: {
                            if ((mutable_bitField0_ & 0x2) != 0x2) {
                                this.container_ = new ArrayList<PreemptionContainerProto>();
                                mutable_bitField0_ |= 0x2;
                            }
                            this.container_.add(input.readMessage(PreemptionContainerProto.PARSER, extensionRegistry));
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x1) == 0x1) {
                    this.resource_ = Collections.unmodifiableList((List<? extends PreemptionResourceRequestProto>)this.resource_);
                }
                if ((mutable_bitField0_ & 0x2) == 0x2) {
                    this.container_ = Collections.unmodifiableList((List<? extends PreemptionContainerProto>)this.container_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionContractProto.class, Builder.class);
        }
        
        @Override
        public Parser<PreemptionContractProto> getParserForType() {
            return PreemptionContractProto.PARSER;
        }
        
        @Override
        public List<PreemptionResourceRequestProto> getResourceList() {
            return this.resource_;
        }
        
        @Override
        public List<? extends PreemptionResourceRequestProtoOrBuilder> getResourceOrBuilderList() {
            return this.resource_;
        }
        
        @Override
        public int getResourceCount() {
            return this.resource_.size();
        }
        
        @Override
        public PreemptionResourceRequestProto getResource(final int index) {
            return this.resource_.get(index);
        }
        
        @Override
        public PreemptionResourceRequestProtoOrBuilder getResourceOrBuilder(final int index) {
            return this.resource_.get(index);
        }
        
        @Override
        public List<PreemptionContainerProto> getContainerList() {
            return this.container_;
        }
        
        @Override
        public List<? extends PreemptionContainerProtoOrBuilder> getContainerOrBuilderList() {
            return this.container_;
        }
        
        @Override
        public int getContainerCount() {
            return this.container_.size();
        }
        
        @Override
        public PreemptionContainerProto getContainer(final int index) {
            return this.container_.get(index);
        }
        
        @Override
        public PreemptionContainerProtoOrBuilder getContainerOrBuilder(final int index) {
            return this.container_.get(index);
        }
        
        private void initFields() {
            this.resource_ = Collections.emptyList();
            this.container_ = Collections.emptyList();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            for (int i = 0; i < this.resource_.size(); ++i) {
                output.writeMessage(1, this.resource_.get(i));
            }
            for (int i = 0; i < this.container_.size(); ++i) {
                output.writeMessage(2, this.container_.get(i));
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            for (int i = 0; i < this.resource_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(1, this.resource_.get(i));
            }
            for (int i = 0; i < this.container_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(2, this.container_.get(i));
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PreemptionContractProto)) {
                return super.equals(obj);
            }
            final PreemptionContractProto other = (PreemptionContractProto)obj;
            boolean result = true;
            result = (result && this.getResourceList().equals(other.getResourceList()));
            result = (result && this.getContainerList().equals(other.getContainerList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.getResourceCount() > 0) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getResourceList().hashCode();
            }
            if (this.getContainerCount() > 0) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getContainerList().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static PreemptionContractProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return PreemptionContractProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionContractProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionContractProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionContractProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return PreemptionContractProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionContractProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionContractProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionContractProto parseFrom(final InputStream input) throws IOException {
            return PreemptionContractProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionContractProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionContractProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static PreemptionContractProto parseDelimitedFrom(final InputStream input) throws IOException {
            return PreemptionContractProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static PreemptionContractProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionContractProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static PreemptionContractProto parseFrom(final CodedInputStream input) throws IOException {
            return PreemptionContractProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionContractProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionContractProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final PreemptionContractProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            PreemptionContractProto.PARSER = new AbstractParser<PreemptionContractProto>() {
                @Override
                public PreemptionContractProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new PreemptionContractProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new PreemptionContractProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PreemptionContractProtoOrBuilder
        {
            private int bitField0_;
            private List<PreemptionResourceRequestProto> resource_;
            private RepeatedFieldBuilder<PreemptionResourceRequestProto, PreemptionResourceRequestProto.Builder, PreemptionResourceRequestProtoOrBuilder> resourceBuilder_;
            private List<PreemptionContainerProto> container_;
            private RepeatedFieldBuilder<PreemptionContainerProto, PreemptionContainerProto.Builder, PreemptionContainerProtoOrBuilder> containerBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionContractProto.class, Builder.class);
            }
            
            private Builder() {
                this.resource_ = Collections.emptyList();
                this.container_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.resource_ = Collections.emptyList();
                this.container_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (PreemptionContractProto.alwaysUseFieldBuilders) {
                    this.getResourceFieldBuilder();
                    this.getContainerFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.resourceBuilder_ == null) {
                    this.resource_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                }
                else {
                    this.resourceBuilder_.clear();
                }
                if (this.containerBuilder_ == null) {
                    this.container_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFD;
                }
                else {
                    this.containerBuilder_.clear();
                }
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionContractProto_descriptor;
            }
            
            @Override
            public PreemptionContractProto getDefaultInstanceForType() {
                return PreemptionContractProto.getDefaultInstance();
            }
            
            @Override
            public PreemptionContractProto build() {
                final PreemptionContractProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public PreemptionContractProto buildPartial() {
                final PreemptionContractProto result = new PreemptionContractProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                if (this.resourceBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        this.resource_ = Collections.unmodifiableList((List<? extends PreemptionResourceRequestProto>)this.resource_);
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.resource_ = this.resource_;
                }
                else {
                    result.resource_ = this.resourceBuilder_.build();
                }
                if (this.containerBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2) {
                        this.container_ = Collections.unmodifiableList((List<? extends PreemptionContainerProto>)this.container_);
                        this.bitField0_ &= 0xFFFFFFFD;
                    }
                    result.container_ = this.container_;
                }
                else {
                    result.container_ = this.containerBuilder_.build();
                }
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof PreemptionContractProto) {
                    return this.mergeFrom((PreemptionContractProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final PreemptionContractProto other) {
                if (other == PreemptionContractProto.getDefaultInstance()) {
                    return this;
                }
                if (this.resourceBuilder_ == null) {
                    if (!other.resource_.isEmpty()) {
                        if (this.resource_.isEmpty()) {
                            this.resource_ = other.resource_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        }
                        else {
                            this.ensureResourceIsMutable();
                            this.resource_.addAll(other.resource_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.resource_.isEmpty()) {
                    if (this.resourceBuilder_.isEmpty()) {
                        this.resourceBuilder_.dispose();
                        this.resourceBuilder_ = null;
                        this.resource_ = other.resource_;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.resourceBuilder_ = (PreemptionContractProto.alwaysUseFieldBuilders ? this.getResourceFieldBuilder() : null);
                    }
                    else {
                        this.resourceBuilder_.addAllMessages(other.resource_);
                    }
                }
                if (this.containerBuilder_ == null) {
                    if (!other.container_.isEmpty()) {
                        if (this.container_.isEmpty()) {
                            this.container_ = other.container_;
                            this.bitField0_ &= 0xFFFFFFFD;
                        }
                        else {
                            this.ensureContainerIsMutable();
                            this.container_.addAll(other.container_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.container_.isEmpty()) {
                    if (this.containerBuilder_.isEmpty()) {
                        this.containerBuilder_.dispose();
                        this.containerBuilder_ = null;
                        this.container_ = other.container_;
                        this.bitField0_ &= 0xFFFFFFFD;
                        this.containerBuilder_ = (PreemptionContractProto.alwaysUseFieldBuilders ? this.getContainerFieldBuilder() : null);
                    }
                    else {
                        this.containerBuilder_.addAllMessages(other.container_);
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                PreemptionContractProto parsedMessage = null;
                try {
                    parsedMessage = PreemptionContractProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PreemptionContractProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            private void ensureResourceIsMutable() {
                if ((this.bitField0_ & 0x1) != 0x1) {
                    this.resource_ = new ArrayList<PreemptionResourceRequestProto>(this.resource_);
                    this.bitField0_ |= 0x1;
                }
            }
            
            @Override
            public List<PreemptionResourceRequestProto> getResourceList() {
                if (this.resourceBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends PreemptionResourceRequestProto>)this.resource_);
                }
                return this.resourceBuilder_.getMessageList();
            }
            
            @Override
            public int getResourceCount() {
                if (this.resourceBuilder_ == null) {
                    return this.resource_.size();
                }
                return this.resourceBuilder_.getCount();
            }
            
            @Override
            public PreemptionResourceRequestProto getResource(final int index) {
                if (this.resourceBuilder_ == null) {
                    return this.resource_.get(index);
                }
                return this.resourceBuilder_.getMessage(index);
            }
            
            public Builder setResource(final int index, final PreemptionResourceRequestProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureResourceIsMutable();
                    this.resource_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setResource(final int index, final PreemptionResourceRequestProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.ensureResourceIsMutable();
                    this.resource_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addResource(final PreemptionResourceRequestProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureResourceIsMutable();
                    this.resource_.add(value);
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addResource(final int index, final PreemptionResourceRequestProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureResourceIsMutable();
                    this.resource_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addResource(final PreemptionResourceRequestProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.ensureResourceIsMutable();
                    this.resource_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addResource(final int index, final PreemptionResourceRequestProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.ensureResourceIsMutable();
                    this.resource_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllResource(final Iterable<? extends PreemptionResourceRequestProto> values) {
                if (this.resourceBuilder_ == null) {
                    this.ensureResourceIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.resource_);
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearResource() {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeResource(final int index) {
                if (this.resourceBuilder_ == null) {
                    this.ensureResourceIsMutable();
                    this.resource_.remove(index);
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.remove(index);
                }
                return this;
            }
            
            public PreemptionResourceRequestProto.Builder getResourceBuilder(final int index) {
                return this.getResourceFieldBuilder().getBuilder(index);
            }
            
            @Override
            public PreemptionResourceRequestProtoOrBuilder getResourceOrBuilder(final int index) {
                if (this.resourceBuilder_ == null) {
                    return this.resource_.get(index);
                }
                return this.resourceBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends PreemptionResourceRequestProtoOrBuilder> getResourceOrBuilderList() {
                if (this.resourceBuilder_ != null) {
                    return this.resourceBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends PreemptionResourceRequestProtoOrBuilder>)this.resource_);
            }
            
            public PreemptionResourceRequestProto.Builder addResourceBuilder() {
                return this.getResourceFieldBuilder().addBuilder(PreemptionResourceRequestProto.getDefaultInstance());
            }
            
            public PreemptionResourceRequestProto.Builder addResourceBuilder(final int index) {
                return this.getResourceFieldBuilder().addBuilder(index, PreemptionResourceRequestProto.getDefaultInstance());
            }
            
            public List<PreemptionResourceRequestProto.Builder> getResourceBuilderList() {
                return this.getResourceFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<PreemptionResourceRequestProto, PreemptionResourceRequestProto.Builder, PreemptionResourceRequestProtoOrBuilder> getResourceFieldBuilder() {
                if (this.resourceBuilder_ == null) {
                    this.resourceBuilder_ = new RepeatedFieldBuilder<PreemptionResourceRequestProto, PreemptionResourceRequestProto.Builder, PreemptionResourceRequestProtoOrBuilder>(this.resource_, (this.bitField0_ & 0x1) == 0x1, this.getParentForChildren(), this.isClean());
                    this.resource_ = null;
                }
                return this.resourceBuilder_;
            }
            
            private void ensureContainerIsMutable() {
                if ((this.bitField0_ & 0x2) != 0x2) {
                    this.container_ = new ArrayList<PreemptionContainerProto>(this.container_);
                    this.bitField0_ |= 0x2;
                }
            }
            
            @Override
            public List<PreemptionContainerProto> getContainerList() {
                if (this.containerBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends PreemptionContainerProto>)this.container_);
                }
                return this.containerBuilder_.getMessageList();
            }
            
            @Override
            public int getContainerCount() {
                if (this.containerBuilder_ == null) {
                    return this.container_.size();
                }
                return this.containerBuilder_.getCount();
            }
            
            @Override
            public PreemptionContainerProto getContainer(final int index) {
                if (this.containerBuilder_ == null) {
                    return this.container_.get(index);
                }
                return this.containerBuilder_.getMessage(index);
            }
            
            public Builder setContainer(final int index, final PreemptionContainerProto value) {
                if (this.containerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureContainerIsMutable();
                    this.container_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setContainer(final int index, final PreemptionContainerProto.Builder builderForValue) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addContainer(final PreemptionContainerProto value) {
                if (this.containerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureContainerIsMutable();
                    this.container_.add(value);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addContainer(final int index, final PreemptionContainerProto value) {
                if (this.containerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureContainerIsMutable();
                    this.container_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addContainer(final PreemptionContainerProto.Builder builderForValue) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addContainer(final int index, final PreemptionContainerProto.Builder builderForValue) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllContainer(final Iterable<? extends PreemptionContainerProto> values) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.container_);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearContainer() {
                if (this.containerBuilder_ == null) {
                    this.container_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFD;
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeContainer(final int index) {
                if (this.containerBuilder_ == null) {
                    this.ensureContainerIsMutable();
                    this.container_.remove(index);
                    this.onChanged();
                }
                else {
                    this.containerBuilder_.remove(index);
                }
                return this;
            }
            
            public PreemptionContainerProto.Builder getContainerBuilder(final int index) {
                return this.getContainerFieldBuilder().getBuilder(index);
            }
            
            @Override
            public PreemptionContainerProtoOrBuilder getContainerOrBuilder(final int index) {
                if (this.containerBuilder_ == null) {
                    return this.container_.get(index);
                }
                return this.containerBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends PreemptionContainerProtoOrBuilder> getContainerOrBuilderList() {
                if (this.containerBuilder_ != null) {
                    return this.containerBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends PreemptionContainerProtoOrBuilder>)this.container_);
            }
            
            public PreemptionContainerProto.Builder addContainerBuilder() {
                return this.getContainerFieldBuilder().addBuilder(PreemptionContainerProto.getDefaultInstance());
            }
            
            public PreemptionContainerProto.Builder addContainerBuilder(final int index) {
                return this.getContainerFieldBuilder().addBuilder(index, PreemptionContainerProto.getDefaultInstance());
            }
            
            public List<PreemptionContainerProto.Builder> getContainerBuilderList() {
                return this.getContainerFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<PreemptionContainerProto, PreemptionContainerProto.Builder, PreemptionContainerProtoOrBuilder> getContainerFieldBuilder() {
                if (this.containerBuilder_ == null) {
                    this.containerBuilder_ = new RepeatedFieldBuilder<PreemptionContainerProto, PreemptionContainerProto.Builder, PreemptionContainerProtoOrBuilder>(this.container_, (this.bitField0_ & 0x2) == 0x2, this.getParentForChildren(), this.isClean());
                    this.container_ = null;
                }
                return this.containerBuilder_;
            }
        }
    }
    
    public static final class PreemptionContainerProto extends GeneratedMessage implements PreemptionContainerProtoOrBuilder
    {
        private static final PreemptionContainerProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<PreemptionContainerProto> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private ContainerIdProto id_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private PreemptionContainerProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private PreemptionContainerProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static PreemptionContainerProto getDefaultInstance() {
            return PreemptionContainerProto.defaultInstance;
        }
        
        @Override
        public PreemptionContainerProto getDefaultInstanceForType() {
            return PreemptionContainerProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private PreemptionContainerProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ContainerIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.id_.toBuilder();
                            }
                            this.id_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.id_);
                                this.id_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionContainerProto.class, Builder.class);
        }
        
        @Override
        public Parser<PreemptionContainerProto> getParserForType() {
            return PreemptionContainerProto.PARSER;
        }
        
        @Override
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ContainerIdProto getId() {
            return this.id_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getIdOrBuilder() {
            return this.id_;
        }
        
        private void initFields() {
            this.id_ = ContainerIdProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.id_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.id_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PreemptionContainerProto)) {
                return super.equals(obj);
            }
            final PreemptionContainerProto other = (PreemptionContainerProto)obj;
            boolean result = true;
            result = (result && this.hasId() == other.hasId());
            if (this.hasId()) {
                result = (result && this.getId().equals(other.getId()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getId().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static PreemptionContainerProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return PreemptionContainerProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionContainerProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionContainerProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionContainerProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return PreemptionContainerProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionContainerProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionContainerProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionContainerProto parseFrom(final InputStream input) throws IOException {
            return PreemptionContainerProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionContainerProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionContainerProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static PreemptionContainerProto parseDelimitedFrom(final InputStream input) throws IOException {
            return PreemptionContainerProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static PreemptionContainerProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionContainerProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static PreemptionContainerProto parseFrom(final CodedInputStream input) throws IOException {
            return PreemptionContainerProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionContainerProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionContainerProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final PreemptionContainerProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            PreemptionContainerProto.PARSER = new AbstractParser<PreemptionContainerProto>() {
                @Override
                public PreemptionContainerProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new PreemptionContainerProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new PreemptionContainerProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PreemptionContainerProtoOrBuilder
        {
            private int bitField0_;
            private ContainerIdProto id_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> idBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionContainerProto.class, Builder.class);
            }
            
            private Builder() {
                this.id_ = ContainerIdProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.id_ = ContainerIdProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (PreemptionContainerProto.alwaysUseFieldBuilders) {
                    this.getIdFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.idBuilder_ == null) {
                    this.id_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.idBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionContainerProto_descriptor;
            }
            
            @Override
            public PreemptionContainerProto getDefaultInstanceForType() {
                return PreemptionContainerProto.getDefaultInstance();
            }
            
            @Override
            public PreemptionContainerProto build() {
                final PreemptionContainerProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public PreemptionContainerProto buildPartial() {
                final PreemptionContainerProto result = new PreemptionContainerProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.idBuilder_ == null) {
                    result.id_ = this.id_;
                }
                else {
                    result.id_ = this.idBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof PreemptionContainerProto) {
                    return this.mergeFrom((PreemptionContainerProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final PreemptionContainerProto other) {
                if (other == PreemptionContainerProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasId()) {
                    this.mergeId(other.getId());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                PreemptionContainerProto parsedMessage = null;
                try {
                    parsedMessage = PreemptionContainerProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PreemptionContainerProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ContainerIdProto getId() {
                if (this.idBuilder_ == null) {
                    return this.id_;
                }
                return this.idBuilder_.getMessage();
            }
            
            public Builder setId(final ContainerIdProto value) {
                if (this.idBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.id_ = value;
                    this.onChanged();
                }
                else {
                    this.idBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setId(final ContainerIdProto.Builder builderForValue) {
                if (this.idBuilder_ == null) {
                    this.id_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.idBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeId(final ContainerIdProto value) {
                if (this.idBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.id_ != ContainerIdProto.getDefaultInstance()) {
                        this.id_ = ContainerIdProto.newBuilder(this.id_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.id_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.idBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearId() {
                if (this.idBuilder_ == null) {
                    this.id_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.idBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ContainerIdProto.Builder getIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getIdOrBuilder() {
                if (this.idBuilder_ != null) {
                    return this.idBuilder_.getMessageOrBuilder();
                }
                return this.id_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getIdFieldBuilder() {
                if (this.idBuilder_ == null) {
                    this.idBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.id_, this.getParentForChildren(), this.isClean());
                    this.id_ = null;
                }
                return this.idBuilder_;
            }
        }
    }
    
    public static final class PreemptionResourceRequestProto extends GeneratedMessage implements PreemptionResourceRequestProtoOrBuilder
    {
        private static final PreemptionResourceRequestProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<PreemptionResourceRequestProto> PARSER;
        private int bitField0_;
        public static final int RESOURCE_FIELD_NUMBER = 1;
        private ResourceRequestProto resource_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private PreemptionResourceRequestProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private PreemptionResourceRequestProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static PreemptionResourceRequestProto getDefaultInstance() {
            return PreemptionResourceRequestProto.defaultInstance;
        }
        
        @Override
        public PreemptionResourceRequestProto getDefaultInstanceForType() {
            return PreemptionResourceRequestProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private PreemptionResourceRequestProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ResourceRequestProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.resource_.toBuilder();
                            }
                            this.resource_ = input.readMessage(ResourceRequestProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.resource_);
                                this.resource_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionResourceRequestProto.class, Builder.class);
        }
        
        @Override
        public Parser<PreemptionResourceRequestProto> getParserForType() {
            return PreemptionResourceRequestProto.PARSER;
        }
        
        @Override
        public boolean hasResource() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ResourceRequestProto getResource() {
            return this.resource_;
        }
        
        @Override
        public ResourceRequestProtoOrBuilder getResourceOrBuilder() {
            return this.resource_;
        }
        
        private void initFields() {
            this.resource_ = ResourceRequestProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.resource_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.resource_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PreemptionResourceRequestProto)) {
                return super.equals(obj);
            }
            final PreemptionResourceRequestProto other = (PreemptionResourceRequestProto)obj;
            boolean result = true;
            result = (result && this.hasResource() == other.hasResource());
            if (this.hasResource()) {
                result = (result && this.getResource().equals(other.getResource()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasResource()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getResource().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static PreemptionResourceRequestProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionResourceRequestProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionResourceRequestProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(data);
        }
        
        public static PreemptionResourceRequestProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static PreemptionResourceRequestProto parseFrom(final InputStream input) throws IOException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionResourceRequestProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static PreemptionResourceRequestProto parseDelimitedFrom(final InputStream input) throws IOException {
            return PreemptionResourceRequestProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static PreemptionResourceRequestProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionResourceRequestProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static PreemptionResourceRequestProto parseFrom(final CodedInputStream input) throws IOException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(input);
        }
        
        public static PreemptionResourceRequestProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return PreemptionResourceRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final PreemptionResourceRequestProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            PreemptionResourceRequestProto.PARSER = new AbstractParser<PreemptionResourceRequestProto>() {
                @Override
                public PreemptionResourceRequestProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new PreemptionResourceRequestProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new PreemptionResourceRequestProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements PreemptionResourceRequestProtoOrBuilder
        {
            private int bitField0_;
            private ResourceRequestProto resource_;
            private SingleFieldBuilder<ResourceRequestProto, ResourceRequestProto.Builder, ResourceRequestProtoOrBuilder> resourceBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(PreemptionResourceRequestProto.class, Builder.class);
            }
            
            private Builder() {
                this.resource_ = ResourceRequestProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.resource_ = ResourceRequestProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (PreemptionResourceRequestProto.alwaysUseFieldBuilders) {
                    this.getResourceFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceRequestProto.getDefaultInstance();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_PreemptionResourceRequestProto_descriptor;
            }
            
            @Override
            public PreemptionResourceRequestProto getDefaultInstanceForType() {
                return PreemptionResourceRequestProto.getDefaultInstance();
            }
            
            @Override
            public PreemptionResourceRequestProto build() {
                final PreemptionResourceRequestProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public PreemptionResourceRequestProto buildPartial() {
                final PreemptionResourceRequestProto result = new PreemptionResourceRequestProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.resourceBuilder_ == null) {
                    result.resource_ = this.resource_;
                }
                else {
                    result.resource_ = this.resourceBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof PreemptionResourceRequestProto) {
                    return this.mergeFrom((PreemptionResourceRequestProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final PreemptionResourceRequestProto other) {
                if (other == PreemptionResourceRequestProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasResource()) {
                    this.mergeResource(other.getResource());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                PreemptionResourceRequestProto parsedMessage = null;
                try {
                    parsedMessage = PreemptionResourceRequestProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PreemptionResourceRequestProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasResource() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ResourceRequestProto getResource() {
                if (this.resourceBuilder_ == null) {
                    return this.resource_;
                }
                return this.resourceBuilder_.getMessage();
            }
            
            public Builder setResource(final ResourceRequestProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.resource_ = value;
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setResource(final ResourceRequestProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeResource(final ResourceRequestProto value) {
                if (this.resourceBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.resource_ != ResourceRequestProto.getDefaultInstance()) {
                        this.resource_ = ResourceRequestProto.newBuilder(this.resource_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.resource_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearResource() {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceRequestProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ResourceRequestProto.Builder getResourceBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getResourceFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceRequestProtoOrBuilder getResourceOrBuilder() {
                if (this.resourceBuilder_ != null) {
                    return this.resourceBuilder_.getMessageOrBuilder();
                }
                return this.resource_;
            }
            
            private SingleFieldBuilder<ResourceRequestProto, ResourceRequestProto.Builder, ResourceRequestProtoOrBuilder> getResourceFieldBuilder() {
                if (this.resourceBuilder_ == null) {
                    this.resourceBuilder_ = new SingleFieldBuilder<ResourceRequestProto, ResourceRequestProto.Builder, ResourceRequestProtoOrBuilder>(this.resource_, this.getParentForChildren(), this.isClean());
                    this.resource_ = null;
                }
                return this.resourceBuilder_;
            }
        }
    }
    
    public static final class ResourceBlacklistRequestProto extends GeneratedMessage implements ResourceBlacklistRequestProtoOrBuilder
    {
        private static final ResourceBlacklistRequestProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ResourceBlacklistRequestProto> PARSER;
        public static final int BLACKLIST_ADDITIONS_FIELD_NUMBER = 1;
        private LazyStringList blacklistAdditions_;
        public static final int BLACKLIST_REMOVALS_FIELD_NUMBER = 2;
        private LazyStringList blacklistRemovals_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ResourceBlacklistRequestProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ResourceBlacklistRequestProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ResourceBlacklistRequestProto getDefaultInstance() {
            return ResourceBlacklistRequestProto.defaultInstance;
        }
        
        @Override
        public ResourceBlacklistRequestProto getDefaultInstanceForType() {
            return ResourceBlacklistRequestProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ResourceBlacklistRequestProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            if ((mutable_bitField0_ & 0x1) != 0x1) {
                                this.blacklistAdditions_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x1;
                            }
                            this.blacklistAdditions_.add(input.readBytes());
                            continue;
                        }
                        case 18: {
                            if ((mutable_bitField0_ & 0x2) != 0x2) {
                                this.blacklistRemovals_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x2;
                            }
                            this.blacklistRemovals_.add(input.readBytes());
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x1) == 0x1) {
                    this.blacklistAdditions_ = new UnmodifiableLazyStringList(this.blacklistAdditions_);
                }
                if ((mutable_bitField0_ & 0x2) == 0x2) {
                    this.blacklistRemovals_ = new UnmodifiableLazyStringList(this.blacklistRemovals_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceBlacklistRequestProto.class, Builder.class);
        }
        
        @Override
        public Parser<ResourceBlacklistRequestProto> getParserForType() {
            return ResourceBlacklistRequestProto.PARSER;
        }
        
        @Override
        public List<String> getBlacklistAdditionsList() {
            return this.blacklistAdditions_;
        }
        
        @Override
        public int getBlacklistAdditionsCount() {
            return this.blacklistAdditions_.size();
        }
        
        @Override
        public String getBlacklistAdditions(final int index) {
            return this.blacklistAdditions_.get(index);
        }
        
        @Override
        public ByteString getBlacklistAdditionsBytes(final int index) {
            return this.blacklistAdditions_.getByteString(index);
        }
        
        @Override
        public List<String> getBlacklistRemovalsList() {
            return this.blacklistRemovals_;
        }
        
        @Override
        public int getBlacklistRemovalsCount() {
            return this.blacklistRemovals_.size();
        }
        
        @Override
        public String getBlacklistRemovals(final int index) {
            return this.blacklistRemovals_.get(index);
        }
        
        @Override
        public ByteString getBlacklistRemovalsBytes(final int index) {
            return this.blacklistRemovals_.getByteString(index);
        }
        
        private void initFields() {
            this.blacklistAdditions_ = LazyStringArrayList.EMPTY;
            this.blacklistRemovals_ = LazyStringArrayList.EMPTY;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            for (int i = 0; i < this.blacklistAdditions_.size(); ++i) {
                output.writeBytes(1, this.blacklistAdditions_.getByteString(i));
            }
            for (int i = 0; i < this.blacklistRemovals_.size(); ++i) {
                output.writeBytes(2, this.blacklistRemovals_.getByteString(i));
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            int dataSize = 0;
            for (int i = 0; i < this.blacklistAdditions_.size(); ++i) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.blacklistAdditions_.getByteString(i));
            }
            size += dataSize;
            size += 1 * this.getBlacklistAdditionsList().size();
            dataSize = 0;
            for (int i = 0; i < this.blacklistRemovals_.size(); ++i) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.blacklistRemovals_.getByteString(i));
            }
            size += dataSize;
            size += 1 * this.getBlacklistRemovalsList().size();
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ResourceBlacklistRequestProto)) {
                return super.equals(obj);
            }
            final ResourceBlacklistRequestProto other = (ResourceBlacklistRequestProto)obj;
            boolean result = true;
            result = (result && this.getBlacklistAdditionsList().equals(other.getBlacklistAdditionsList()));
            result = (result && this.getBlacklistRemovalsList().equals(other.getBlacklistRemovalsList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.getBlacklistAdditionsCount() > 0) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getBlacklistAdditionsList().hashCode();
            }
            if (this.getBlacklistRemovalsCount() > 0) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getBlacklistRemovalsList().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(data);
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(data);
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final InputStream input) throws IOException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(input);
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ResourceBlacklistRequestProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ResourceBlacklistRequestProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ResourceBlacklistRequestProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceBlacklistRequestProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final CodedInputStream input) throws IOException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(input);
        }
        
        public static ResourceBlacklistRequestProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ResourceBlacklistRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ResourceBlacklistRequestProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ResourceBlacklistRequestProto.PARSER = new AbstractParser<ResourceBlacklistRequestProto>() {
                @Override
                public ResourceBlacklistRequestProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ResourceBlacklistRequestProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ResourceBlacklistRequestProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ResourceBlacklistRequestProtoOrBuilder
        {
            private int bitField0_;
            private LazyStringList blacklistAdditions_;
            private LazyStringList blacklistRemovals_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ResourceBlacklistRequestProto.class, Builder.class);
            }
            
            private Builder() {
                this.blacklistAdditions_ = LazyStringArrayList.EMPTY;
                this.blacklistRemovals_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.blacklistAdditions_ = LazyStringArrayList.EMPTY;
                this.blacklistRemovals_ = LazyStringArrayList.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ResourceBlacklistRequestProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.blacklistAdditions_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFE;
                this.blacklistRemovals_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ResourceBlacklistRequestProto_descriptor;
            }
            
            @Override
            public ResourceBlacklistRequestProto getDefaultInstanceForType() {
                return ResourceBlacklistRequestProto.getDefaultInstance();
            }
            
            @Override
            public ResourceBlacklistRequestProto build() {
                final ResourceBlacklistRequestProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ResourceBlacklistRequestProto buildPartial() {
                final ResourceBlacklistRequestProto result = new ResourceBlacklistRequestProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                if ((this.bitField0_ & 0x1) == 0x1) {
                    this.blacklistAdditions_ = new UnmodifiableLazyStringList(this.blacklistAdditions_);
                    this.bitField0_ &= 0xFFFFFFFE;
                }
                result.blacklistAdditions_ = this.blacklistAdditions_;
                if ((this.bitField0_ & 0x2) == 0x2) {
                    this.blacklistRemovals_ = new UnmodifiableLazyStringList(this.blacklistRemovals_);
                    this.bitField0_ &= 0xFFFFFFFD;
                }
                result.blacklistRemovals_ = this.blacklistRemovals_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ResourceBlacklistRequestProto) {
                    return this.mergeFrom((ResourceBlacklistRequestProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ResourceBlacklistRequestProto other) {
                if (other == ResourceBlacklistRequestProto.getDefaultInstance()) {
                    return this;
                }
                if (!other.blacklistAdditions_.isEmpty()) {
                    if (this.blacklistAdditions_.isEmpty()) {
                        this.blacklistAdditions_ = other.blacklistAdditions_;
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    else {
                        this.ensureBlacklistAdditionsIsMutable();
                        this.blacklistAdditions_.addAll(other.blacklistAdditions_);
                    }
                    this.onChanged();
                }
                if (!other.blacklistRemovals_.isEmpty()) {
                    if (this.blacklistRemovals_.isEmpty()) {
                        this.blacklistRemovals_ = other.blacklistRemovals_;
                        this.bitField0_ &= 0xFFFFFFFD;
                    }
                    else {
                        this.ensureBlacklistRemovalsIsMutable();
                        this.blacklistRemovals_.addAll(other.blacklistRemovals_);
                    }
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ResourceBlacklistRequestProto parsedMessage = null;
                try {
                    parsedMessage = ResourceBlacklistRequestProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ResourceBlacklistRequestProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            private void ensureBlacklistAdditionsIsMutable() {
                if ((this.bitField0_ & 0x1) != 0x1) {
                    this.blacklistAdditions_ = new LazyStringArrayList(this.blacklistAdditions_);
                    this.bitField0_ |= 0x1;
                }
            }
            
            @Override
            public List<String> getBlacklistAdditionsList() {
                return Collections.unmodifiableList((List<? extends String>)this.blacklistAdditions_);
            }
            
            @Override
            public int getBlacklistAdditionsCount() {
                return this.blacklistAdditions_.size();
            }
            
            @Override
            public String getBlacklistAdditions(final int index) {
                return this.blacklistAdditions_.get(index);
            }
            
            @Override
            public ByteString getBlacklistAdditionsBytes(final int index) {
                return this.blacklistAdditions_.getByteString(index);
            }
            
            public Builder setBlacklistAdditions(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureBlacklistAdditionsIsMutable();
                this.blacklistAdditions_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addBlacklistAdditions(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureBlacklistAdditionsIsMutable();
                this.blacklistAdditions_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllBlacklistAdditions(final Iterable<String> values) {
                this.ensureBlacklistAdditionsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.blacklistAdditions_);
                this.onChanged();
                return this;
            }
            
            public Builder clearBlacklistAdditions() {
                this.blacklistAdditions_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFE;
                this.onChanged();
                return this;
            }
            
            public Builder addBlacklistAdditionsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureBlacklistAdditionsIsMutable();
                this.blacklistAdditions_.add(value);
                this.onChanged();
                return this;
            }
            
            private void ensureBlacklistRemovalsIsMutable() {
                if ((this.bitField0_ & 0x2) != 0x2) {
                    this.blacklistRemovals_ = new LazyStringArrayList(this.blacklistRemovals_);
                    this.bitField0_ |= 0x2;
                }
            }
            
            @Override
            public List<String> getBlacklistRemovalsList() {
                return Collections.unmodifiableList((List<? extends String>)this.blacklistRemovals_);
            }
            
            @Override
            public int getBlacklistRemovalsCount() {
                return this.blacklistRemovals_.size();
            }
            
            @Override
            public String getBlacklistRemovals(final int index) {
                return this.blacklistRemovals_.get(index);
            }
            
            @Override
            public ByteString getBlacklistRemovalsBytes(final int index) {
                return this.blacklistRemovals_.getByteString(index);
            }
            
            public Builder setBlacklistRemovals(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureBlacklistRemovalsIsMutable();
                this.blacklistRemovals_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addBlacklistRemovals(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureBlacklistRemovalsIsMutable();
                this.blacklistRemovals_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllBlacklistRemovals(final Iterable<String> values) {
                this.ensureBlacklistRemovalsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.blacklistRemovals_);
                this.onChanged();
                return this;
            }
            
            public Builder clearBlacklistRemovals() {
                this.blacklistRemovals_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                this.onChanged();
                return this;
            }
            
            public Builder addBlacklistRemovalsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureBlacklistRemovalsIsMutable();
                this.blacklistRemovals_.add(value);
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ApplicationSubmissionContextProto extends GeneratedMessage implements ApplicationSubmissionContextProtoOrBuilder
    {
        private static final ApplicationSubmissionContextProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ApplicationSubmissionContextProto> PARSER;
        private int bitField0_;
        public static final int APPLICATION_ID_FIELD_NUMBER = 1;
        private ApplicationIdProto applicationId_;
        public static final int APPLICATION_NAME_FIELD_NUMBER = 2;
        private Object applicationName_;
        public static final int QUEUE_FIELD_NUMBER = 3;
        private Object queue_;
        public static final int PRIORITY_FIELD_NUMBER = 4;
        private PriorityProto priority_;
        public static final int AM_CONTAINER_SPEC_FIELD_NUMBER = 5;
        private ContainerLaunchContextProto amContainerSpec_;
        public static final int CANCEL_TOKENS_WHEN_COMPLETE_FIELD_NUMBER = 6;
        private boolean cancelTokensWhenComplete_;
        public static final int UNMANAGED_AM_FIELD_NUMBER = 7;
        private boolean unmanagedAm_;
        public static final int MAXAPPATTEMPTS_FIELD_NUMBER = 8;
        private int maxAppAttempts_;
        public static final int RESOURCE_FIELD_NUMBER = 9;
        private ResourceProto resource_;
        public static final int APPLICATIONTYPE_FIELD_NUMBER = 10;
        private Object applicationType_;
        public static final int KEEP_CONTAINERS_ACROSS_APPLICATION_ATTEMPTS_FIELD_NUMBER = 11;
        private boolean keepContainersAcrossApplicationAttempts_;
        public static final int APPLICATIONTAGS_FIELD_NUMBER = 12;
        private LazyStringList applicationTags_;
        public static final int ATTEMPT_FAILURES_VALIDITY_INTERVAL_FIELD_NUMBER = 13;
        private long attemptFailuresValidityInterval_;
        public static final int LOG_AGGREGATION_CONTEXT_FIELD_NUMBER = 14;
        private LogAggregationContextProto logAggregationContext_;
        public static final int RESERVATION_ID_FIELD_NUMBER = 15;
        private ReservationIdProto reservationId_;
        public static final int NODE_LABEL_EXPRESSION_FIELD_NUMBER = 16;
        private Object nodeLabelExpression_;
        public static final int AM_CONTAINER_RESOURCE_REQUEST_FIELD_NUMBER = 17;
        private ResourceRequestProto amContainerResourceRequest_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ApplicationSubmissionContextProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ApplicationSubmissionContextProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ApplicationSubmissionContextProto getDefaultInstance() {
            return ApplicationSubmissionContextProto.defaultInstance;
        }
        
        @Override
        public ApplicationSubmissionContextProto getDefaultInstanceForType() {
            return ApplicationSubmissionContextProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ApplicationSubmissionContextProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ApplicationIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.applicationId_.toBuilder();
                            }
                            this.applicationId_ = input.readMessage(ApplicationIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.applicationId_);
                                this.applicationId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.applicationName_ = input.readBytes();
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x4;
                            this.queue_ = input.readBytes();
                            continue;
                        }
                        case 34: {
                            PriorityProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x8) == 0x8) {
                                subBuilder2 = this.priority_.toBuilder();
                            }
                            this.priority_ = input.readMessage(PriorityProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.priority_);
                                this.priority_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x8;
                            continue;
                        }
                        case 42: {
                            ContainerLaunchContextProto.Builder subBuilder3 = null;
                            if ((this.bitField0_ & 0x10) == 0x10) {
                                subBuilder3 = this.amContainerSpec_.toBuilder();
                            }
                            this.amContainerSpec_ = input.readMessage(ContainerLaunchContextProto.PARSER, extensionRegistry);
                            if (subBuilder3 != null) {
                                subBuilder3.mergeFrom(this.amContainerSpec_);
                                this.amContainerSpec_ = subBuilder3.buildPartial();
                            }
                            this.bitField0_ |= 0x10;
                            continue;
                        }
                        case 48: {
                            this.bitField0_ |= 0x20;
                            this.cancelTokensWhenComplete_ = input.readBool();
                            continue;
                        }
                        case 56: {
                            this.bitField0_ |= 0x40;
                            this.unmanagedAm_ = input.readBool();
                            continue;
                        }
                        case 64: {
                            this.bitField0_ |= 0x80;
                            this.maxAppAttempts_ = input.readInt32();
                            continue;
                        }
                        case 74: {
                            ResourceProto.Builder subBuilder4 = null;
                            if ((this.bitField0_ & 0x100) == 0x100) {
                                subBuilder4 = this.resource_.toBuilder();
                            }
                            this.resource_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder4 != null) {
                                subBuilder4.mergeFrom(this.resource_);
                                this.resource_ = subBuilder4.buildPartial();
                            }
                            this.bitField0_ |= 0x100;
                            continue;
                        }
                        case 82: {
                            this.bitField0_ |= 0x200;
                            this.applicationType_ = input.readBytes();
                            continue;
                        }
                        case 88: {
                            this.bitField0_ |= 0x400;
                            this.keepContainersAcrossApplicationAttempts_ = input.readBool();
                            continue;
                        }
                        case 98: {
                            if ((mutable_bitField0_ & 0x800) != 0x800) {
                                this.applicationTags_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x800;
                            }
                            this.applicationTags_.add(input.readBytes());
                            continue;
                        }
                        case 104: {
                            this.bitField0_ |= 0x800;
                            this.attemptFailuresValidityInterval_ = input.readInt64();
                            continue;
                        }
                        case 114: {
                            LogAggregationContextProto.Builder subBuilder5 = null;
                            if ((this.bitField0_ & 0x1000) == 0x1000) {
                                subBuilder5 = this.logAggregationContext_.toBuilder();
                            }
                            this.logAggregationContext_ = input.readMessage(LogAggregationContextProto.PARSER, extensionRegistry);
                            if (subBuilder5 != null) {
                                subBuilder5.mergeFrom(this.logAggregationContext_);
                                this.logAggregationContext_ = subBuilder5.buildPartial();
                            }
                            this.bitField0_ |= 0x1000;
                            continue;
                        }
                        case 122: {
                            ReservationIdProto.Builder subBuilder6 = null;
                            if ((this.bitField0_ & 0x2000) == 0x2000) {
                                subBuilder6 = this.reservationId_.toBuilder();
                            }
                            this.reservationId_ = input.readMessage(ReservationIdProto.PARSER, extensionRegistry);
                            if (subBuilder6 != null) {
                                subBuilder6.mergeFrom(this.reservationId_);
                                this.reservationId_ = subBuilder6.buildPartial();
                            }
                            this.bitField0_ |= 0x2000;
                            continue;
                        }
                        case 130: {
                            this.bitField0_ |= 0x4000;
                            this.nodeLabelExpression_ = input.readBytes();
                            continue;
                        }
                        case 138: {
                            ResourceRequestProto.Builder subBuilder7 = null;
                            if ((this.bitField0_ & 0x8000) == 0x8000) {
                                subBuilder7 = this.amContainerResourceRequest_.toBuilder();
                            }
                            this.amContainerResourceRequest_ = input.readMessage(ResourceRequestProto.PARSER, extensionRegistry);
                            if (subBuilder7 != null) {
                                subBuilder7.mergeFrom(this.amContainerResourceRequest_);
                                this.amContainerResourceRequest_ = subBuilder7.buildPartial();
                            }
                            this.bitField0_ |= 0x8000;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x800) == 0x800) {
                    this.applicationTags_ = new UnmodifiableLazyStringList(this.applicationTags_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationSubmissionContextProto.class, Builder.class);
        }
        
        @Override
        public Parser<ApplicationSubmissionContextProto> getParserForType() {
            return ApplicationSubmissionContextProto.PARSER;
        }
        
        @Override
        public boolean hasApplicationId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ApplicationIdProto getApplicationId() {
            return this.applicationId_;
        }
        
        @Override
        public ApplicationIdProtoOrBuilder getApplicationIdOrBuilder() {
            return this.applicationId_;
        }
        
        @Override
        public boolean hasApplicationName() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getApplicationName() {
            final Object ref = this.applicationName_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.applicationName_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getApplicationNameBytes() {
            final Object ref = this.applicationName_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.applicationName_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasQueue() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public String getQueue() {
            final Object ref = this.queue_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.queue_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getQueueBytes() {
            final Object ref = this.queue_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.queue_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasPriority() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public PriorityProto getPriority() {
            return this.priority_;
        }
        
        @Override
        public PriorityProtoOrBuilder getPriorityOrBuilder() {
            return this.priority_;
        }
        
        @Override
        public boolean hasAmContainerSpec() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public ContainerLaunchContextProto getAmContainerSpec() {
            return this.amContainerSpec_;
        }
        
        @Override
        public ContainerLaunchContextProtoOrBuilder getAmContainerSpecOrBuilder() {
            return this.amContainerSpec_;
        }
        
        @Override
        public boolean hasCancelTokensWhenComplete() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public boolean getCancelTokensWhenComplete() {
            return this.cancelTokensWhenComplete_;
        }
        
        @Override
        public boolean hasUnmanagedAm() {
            return (this.bitField0_ & 0x40) == 0x40;
        }
        
        @Override
        public boolean getUnmanagedAm() {
            return this.unmanagedAm_;
        }
        
        @Override
        public boolean hasMaxAppAttempts() {
            return (this.bitField0_ & 0x80) == 0x80;
        }
        
        @Override
        public int getMaxAppAttempts() {
            return this.maxAppAttempts_;
        }
        
        @Override
        public boolean hasResource() {
            return (this.bitField0_ & 0x100) == 0x100;
        }
        
        @Override
        public ResourceProto getResource() {
            return this.resource_;
        }
        
        @Override
        public ResourceProtoOrBuilder getResourceOrBuilder() {
            return this.resource_;
        }
        
        @Override
        public boolean hasApplicationType() {
            return (this.bitField0_ & 0x200) == 0x200;
        }
        
        @Override
        public String getApplicationType() {
            final Object ref = this.applicationType_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.applicationType_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getApplicationTypeBytes() {
            final Object ref = this.applicationType_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.applicationType_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasKeepContainersAcrossApplicationAttempts() {
            return (this.bitField0_ & 0x400) == 0x400;
        }
        
        @Override
        public boolean getKeepContainersAcrossApplicationAttempts() {
            return this.keepContainersAcrossApplicationAttempts_;
        }
        
        @Override
        public List<String> getApplicationTagsList() {
            return this.applicationTags_;
        }
        
        @Override
        public int getApplicationTagsCount() {
            return this.applicationTags_.size();
        }
        
        @Override
        public String getApplicationTags(final int index) {
            return this.applicationTags_.get(index);
        }
        
        @Override
        public ByteString getApplicationTagsBytes(final int index) {
            return this.applicationTags_.getByteString(index);
        }
        
        @Override
        public boolean hasAttemptFailuresValidityInterval() {
            return (this.bitField0_ & 0x800) == 0x800;
        }
        
        @Override
        public long getAttemptFailuresValidityInterval() {
            return this.attemptFailuresValidityInterval_;
        }
        
        @Override
        public boolean hasLogAggregationContext() {
            return (this.bitField0_ & 0x1000) == 0x1000;
        }
        
        @Override
        public LogAggregationContextProto getLogAggregationContext() {
            return this.logAggregationContext_;
        }
        
        @Override
        public LogAggregationContextProtoOrBuilder getLogAggregationContextOrBuilder() {
            return this.logAggregationContext_;
        }
        
        @Override
        public boolean hasReservationId() {
            return (this.bitField0_ & 0x2000) == 0x2000;
        }
        
        @Override
        public ReservationIdProto getReservationId() {
            return this.reservationId_;
        }
        
        @Override
        public ReservationIdProtoOrBuilder getReservationIdOrBuilder() {
            return this.reservationId_;
        }
        
        @Override
        public boolean hasNodeLabelExpression() {
            return (this.bitField0_ & 0x4000) == 0x4000;
        }
        
        @Override
        public String getNodeLabelExpression() {
            final Object ref = this.nodeLabelExpression_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.nodeLabelExpression_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getNodeLabelExpressionBytes() {
            final Object ref = this.nodeLabelExpression_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.nodeLabelExpression_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasAmContainerResourceRequest() {
            return (this.bitField0_ & 0x8000) == 0x8000;
        }
        
        @Override
        public ResourceRequestProto getAmContainerResourceRequest() {
            return this.amContainerResourceRequest_;
        }
        
        @Override
        public ResourceRequestProtoOrBuilder getAmContainerResourceRequestOrBuilder() {
            return this.amContainerResourceRequest_;
        }
        
        private void initFields() {
            this.applicationId_ = ApplicationIdProto.getDefaultInstance();
            this.applicationName_ = "N/A";
            this.queue_ = "default";
            this.priority_ = PriorityProto.getDefaultInstance();
            this.amContainerSpec_ = ContainerLaunchContextProto.getDefaultInstance();
            this.cancelTokensWhenComplete_ = true;
            this.unmanagedAm_ = false;
            this.maxAppAttempts_ = 0;
            this.resource_ = ResourceProto.getDefaultInstance();
            this.applicationType_ = "YARN";
            this.keepContainersAcrossApplicationAttempts_ = false;
            this.applicationTags_ = LazyStringArrayList.EMPTY;
            this.attemptFailuresValidityInterval_ = -1L;
            this.logAggregationContext_ = LogAggregationContextProto.getDefaultInstance();
            this.reservationId_ = ReservationIdProto.getDefaultInstance();
            this.nodeLabelExpression_ = "";
            this.amContainerResourceRequest_ = ResourceRequestProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.applicationId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getApplicationNameBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeBytes(3, this.getQueueBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeMessage(4, this.priority_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeMessage(5, this.amContainerSpec_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeBool(6, this.cancelTokensWhenComplete_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                output.writeBool(7, this.unmanagedAm_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                output.writeInt32(8, this.maxAppAttempts_);
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                output.writeMessage(9, this.resource_);
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                output.writeBytes(10, this.getApplicationTypeBytes());
            }
            if ((this.bitField0_ & 0x400) == 0x400) {
                output.writeBool(11, this.keepContainersAcrossApplicationAttempts_);
            }
            for (int i = 0; i < this.applicationTags_.size(); ++i) {
                output.writeBytes(12, this.applicationTags_.getByteString(i));
            }
            if ((this.bitField0_ & 0x800) == 0x800) {
                output.writeInt64(13, this.attemptFailuresValidityInterval_);
            }
            if ((this.bitField0_ & 0x1000) == 0x1000) {
                output.writeMessage(14, this.logAggregationContext_);
            }
            if ((this.bitField0_ & 0x2000) == 0x2000) {
                output.writeMessage(15, this.reservationId_);
            }
            if ((this.bitField0_ & 0x4000) == 0x4000) {
                output.writeBytes(16, this.getNodeLabelExpressionBytes());
            }
            if ((this.bitField0_ & 0x8000) == 0x8000) {
                output.writeMessage(17, this.amContainerResourceRequest_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.applicationId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getApplicationNameBytes());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeBytesSize(3, this.getQueueBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeMessageSize(4, this.priority_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeMessageSize(5, this.amContainerSpec_);
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeBoolSize(6, this.cancelTokensWhenComplete_);
            }
            if ((this.bitField0_ & 0x40) == 0x40) {
                size += CodedOutputStream.computeBoolSize(7, this.unmanagedAm_);
            }
            if ((this.bitField0_ & 0x80) == 0x80) {
                size += CodedOutputStream.computeInt32Size(8, this.maxAppAttempts_);
            }
            if ((this.bitField0_ & 0x100) == 0x100) {
                size += CodedOutputStream.computeMessageSize(9, this.resource_);
            }
            if ((this.bitField0_ & 0x200) == 0x200) {
                size += CodedOutputStream.computeBytesSize(10, this.getApplicationTypeBytes());
            }
            if ((this.bitField0_ & 0x400) == 0x400) {
                size += CodedOutputStream.computeBoolSize(11, this.keepContainersAcrossApplicationAttempts_);
            }
            int dataSize = 0;
            for (int i = 0; i < this.applicationTags_.size(); ++i) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.applicationTags_.getByteString(i));
            }
            size += dataSize;
            size += 1 * this.getApplicationTagsList().size();
            if ((this.bitField0_ & 0x800) == 0x800) {
                size += CodedOutputStream.computeInt64Size(13, this.attemptFailuresValidityInterval_);
            }
            if ((this.bitField0_ & 0x1000) == 0x1000) {
                size += CodedOutputStream.computeMessageSize(14, this.logAggregationContext_);
            }
            if ((this.bitField0_ & 0x2000) == 0x2000) {
                size += CodedOutputStream.computeMessageSize(15, this.reservationId_);
            }
            if ((this.bitField0_ & 0x4000) == 0x4000) {
                size += CodedOutputStream.computeBytesSize(16, this.getNodeLabelExpressionBytes());
            }
            if ((this.bitField0_ & 0x8000) == 0x8000) {
                size += CodedOutputStream.computeMessageSize(17, this.amContainerResourceRequest_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ApplicationSubmissionContextProto)) {
                return super.equals(obj);
            }
            final ApplicationSubmissionContextProto other = (ApplicationSubmissionContextProto)obj;
            boolean result = true;
            result = (result && this.hasApplicationId() == other.hasApplicationId());
            if (this.hasApplicationId()) {
                result = (result && this.getApplicationId().equals(other.getApplicationId()));
            }
            result = (result && this.hasApplicationName() == other.hasApplicationName());
            if (this.hasApplicationName()) {
                result = (result && this.getApplicationName().equals(other.getApplicationName()));
            }
            result = (result && this.hasQueue() == other.hasQueue());
            if (this.hasQueue()) {
                result = (result && this.getQueue().equals(other.getQueue()));
            }
            result = (result && this.hasPriority() == other.hasPriority());
            if (this.hasPriority()) {
                result = (result && this.getPriority().equals(other.getPriority()));
            }
            result = (result && this.hasAmContainerSpec() == other.hasAmContainerSpec());
            if (this.hasAmContainerSpec()) {
                result = (result && this.getAmContainerSpec().equals(other.getAmContainerSpec()));
            }
            result = (result && this.hasCancelTokensWhenComplete() == other.hasCancelTokensWhenComplete());
            if (this.hasCancelTokensWhenComplete()) {
                result = (result && this.getCancelTokensWhenComplete() == other.getCancelTokensWhenComplete());
            }
            result = (result && this.hasUnmanagedAm() == other.hasUnmanagedAm());
            if (this.hasUnmanagedAm()) {
                result = (result && this.getUnmanagedAm() == other.getUnmanagedAm());
            }
            result = (result && this.hasMaxAppAttempts() == other.hasMaxAppAttempts());
            if (this.hasMaxAppAttempts()) {
                result = (result && this.getMaxAppAttempts() == other.getMaxAppAttempts());
            }
            result = (result && this.hasResource() == other.hasResource());
            if (this.hasResource()) {
                result = (result && this.getResource().equals(other.getResource()));
            }
            result = (result && this.hasApplicationType() == other.hasApplicationType());
            if (this.hasApplicationType()) {
                result = (result && this.getApplicationType().equals(other.getApplicationType()));
            }
            result = (result && this.hasKeepContainersAcrossApplicationAttempts() == other.hasKeepContainersAcrossApplicationAttempts());
            if (this.hasKeepContainersAcrossApplicationAttempts()) {
                result = (result && this.getKeepContainersAcrossApplicationAttempts() == other.getKeepContainersAcrossApplicationAttempts());
            }
            result = (result && this.getApplicationTagsList().equals(other.getApplicationTagsList()));
            result = (result && this.hasAttemptFailuresValidityInterval() == other.hasAttemptFailuresValidityInterval());
            if (this.hasAttemptFailuresValidityInterval()) {
                result = (result && this.getAttemptFailuresValidityInterval() == other.getAttemptFailuresValidityInterval());
            }
            result = (result && this.hasLogAggregationContext() == other.hasLogAggregationContext());
            if (this.hasLogAggregationContext()) {
                result = (result && this.getLogAggregationContext().equals(other.getLogAggregationContext()));
            }
            result = (result && this.hasReservationId() == other.hasReservationId());
            if (this.hasReservationId()) {
                result = (result && this.getReservationId().equals(other.getReservationId()));
            }
            result = (result && this.hasNodeLabelExpression() == other.hasNodeLabelExpression());
            if (this.hasNodeLabelExpression()) {
                result = (result && this.getNodeLabelExpression().equals(other.getNodeLabelExpression()));
            }
            result = (result && this.hasAmContainerResourceRequest() == other.hasAmContainerResourceRequest());
            if (this.hasAmContainerResourceRequest()) {
                result = (result && this.getAmContainerResourceRequest().equals(other.getAmContainerResourceRequest()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasApplicationId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getApplicationId().hashCode();
            }
            if (this.hasApplicationName()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getApplicationName().hashCode();
            }
            if (this.hasQueue()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getQueue().hashCode();
            }
            if (this.hasPriority()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getPriority().hashCode();
            }
            if (this.hasAmContainerSpec()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getAmContainerSpec().hashCode();
            }
            if (this.hasCancelTokensWhenComplete()) {
                hash = 37 * hash + 6;
                hash = 53 * hash + AbstractMessage.hashBoolean(this.getCancelTokensWhenComplete());
            }
            if (this.hasUnmanagedAm()) {
                hash = 37 * hash + 7;
                hash = 53 * hash + AbstractMessage.hashBoolean(this.getUnmanagedAm());
            }
            if (this.hasMaxAppAttempts()) {
                hash = 37 * hash + 8;
                hash = 53 * hash + this.getMaxAppAttempts();
            }
            if (this.hasResource()) {
                hash = 37 * hash + 9;
                hash = 53 * hash + this.getResource().hashCode();
            }
            if (this.hasApplicationType()) {
                hash = 37 * hash + 10;
                hash = 53 * hash + this.getApplicationType().hashCode();
            }
            if (this.hasKeepContainersAcrossApplicationAttempts()) {
                hash = 37 * hash + 11;
                hash = 53 * hash + AbstractMessage.hashBoolean(this.getKeepContainersAcrossApplicationAttempts());
            }
            if (this.getApplicationTagsCount() > 0) {
                hash = 37 * hash + 12;
                hash = 53 * hash + this.getApplicationTagsList().hashCode();
            }
            if (this.hasAttemptFailuresValidityInterval()) {
                hash = 37 * hash + 13;
                hash = 53 * hash + AbstractMessage.hashLong(this.getAttemptFailuresValidityInterval());
            }
            if (this.hasLogAggregationContext()) {
                hash = 37 * hash + 14;
                hash = 53 * hash + this.getLogAggregationContext().hashCode();
            }
            if (this.hasReservationId()) {
                hash = 37 * hash + 15;
                hash = 53 * hash + this.getReservationId().hashCode();
            }
            if (this.hasNodeLabelExpression()) {
                hash = 37 * hash + 16;
                hash = 53 * hash + this.getNodeLabelExpression().hashCode();
            }
            if (this.hasAmContainerResourceRequest()) {
                hash = 37 * hash + 17;
                hash = 53 * hash + this.getAmContainerResourceRequest().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final InputStream input) throws IOException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ApplicationSubmissionContextProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ApplicationSubmissionContextProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ApplicationSubmissionContextProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationSubmissionContextProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final CodedInputStream input) throws IOException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationSubmissionContextProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationSubmissionContextProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ApplicationSubmissionContextProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ApplicationSubmissionContextProto.PARSER = new AbstractParser<ApplicationSubmissionContextProto>() {
                @Override
                public ApplicationSubmissionContextProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ApplicationSubmissionContextProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ApplicationSubmissionContextProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ApplicationSubmissionContextProtoOrBuilder
        {
            private int bitField0_;
            private ApplicationIdProto applicationId_;
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> applicationIdBuilder_;
            private Object applicationName_;
            private Object queue_;
            private PriorityProto priority_;
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> priorityBuilder_;
            private ContainerLaunchContextProto amContainerSpec_;
            private SingleFieldBuilder<ContainerLaunchContextProto, ContainerLaunchContextProto.Builder, ContainerLaunchContextProtoOrBuilder> amContainerSpecBuilder_;
            private boolean cancelTokensWhenComplete_;
            private boolean unmanagedAm_;
            private int maxAppAttempts_;
            private ResourceProto resource_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> resourceBuilder_;
            private Object applicationType_;
            private boolean keepContainersAcrossApplicationAttempts_;
            private LazyStringList applicationTags_;
            private long attemptFailuresValidityInterval_;
            private LogAggregationContextProto logAggregationContext_;
            private SingleFieldBuilder<LogAggregationContextProto, LogAggregationContextProto.Builder, LogAggregationContextProtoOrBuilder> logAggregationContextBuilder_;
            private ReservationIdProto reservationId_;
            private SingleFieldBuilder<ReservationIdProto, ReservationIdProto.Builder, ReservationIdProtoOrBuilder> reservationIdBuilder_;
            private Object nodeLabelExpression_;
            private ResourceRequestProto amContainerResourceRequest_;
            private SingleFieldBuilder<ResourceRequestProto, ResourceRequestProto.Builder, ResourceRequestProtoOrBuilder> amContainerResourceRequestBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationSubmissionContextProto.class, Builder.class);
            }
            
            private Builder() {
                this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                this.applicationName_ = "N/A";
                this.queue_ = "default";
                this.priority_ = PriorityProto.getDefaultInstance();
                this.amContainerSpec_ = ContainerLaunchContextProto.getDefaultInstance();
                this.cancelTokensWhenComplete_ = true;
                this.resource_ = ResourceProto.getDefaultInstance();
                this.applicationType_ = "YARN";
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.attemptFailuresValidityInterval_ = -1L;
                this.logAggregationContext_ = LogAggregationContextProto.getDefaultInstance();
                this.reservationId_ = ReservationIdProto.getDefaultInstance();
                this.nodeLabelExpression_ = "";
                this.amContainerResourceRequest_ = ResourceRequestProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                this.applicationName_ = "N/A";
                this.queue_ = "default";
                this.priority_ = PriorityProto.getDefaultInstance();
                this.amContainerSpec_ = ContainerLaunchContextProto.getDefaultInstance();
                this.cancelTokensWhenComplete_ = true;
                this.resource_ = ResourceProto.getDefaultInstance();
                this.applicationType_ = "YARN";
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.attemptFailuresValidityInterval_ = -1L;
                this.logAggregationContext_ = LogAggregationContextProto.getDefaultInstance();
                this.reservationId_ = ReservationIdProto.getDefaultInstance();
                this.nodeLabelExpression_ = "";
                this.amContainerResourceRequest_ = ResourceRequestProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ApplicationSubmissionContextProto.alwaysUseFieldBuilders) {
                    this.getApplicationIdFieldBuilder();
                    this.getPriorityFieldBuilder();
                    this.getAmContainerSpecFieldBuilder();
                    this.getResourceFieldBuilder();
                    this.getLogAggregationContextFieldBuilder();
                    this.getReservationIdFieldBuilder();
                    this.getAmContainerResourceRequestFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                }
                else {
                    this.applicationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.applicationName_ = "N/A";
                this.bitField0_ &= 0xFFFFFFFD;
                this.queue_ = "default";
                this.bitField0_ &= 0xFFFFFFFB;
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                if (this.amContainerSpecBuilder_ == null) {
                    this.amContainerSpec_ = ContainerLaunchContextProto.getDefaultInstance();
                }
                else {
                    this.amContainerSpecBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                this.cancelTokensWhenComplete_ = true;
                this.bitField0_ &= 0xFFFFFFDF;
                this.unmanagedAm_ = false;
                this.bitField0_ &= 0xFFFFFFBF;
                this.maxAppAttempts_ = 0;
                this.bitField0_ &= 0xFFFFFF7F;
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                this.applicationType_ = "YARN";
                this.bitField0_ &= 0xFFFFFDFF;
                this.keepContainersAcrossApplicationAttempts_ = false;
                this.bitField0_ &= 0xFFFFFBFF;
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFF7FF;
                this.attemptFailuresValidityInterval_ = -1L;
                this.bitField0_ &= 0xFFFFEFFF;
                if (this.logAggregationContextBuilder_ == null) {
                    this.logAggregationContext_ = LogAggregationContextProto.getDefaultInstance();
                }
                else {
                    this.logAggregationContextBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFDFFF;
                if (this.reservationIdBuilder_ == null) {
                    this.reservationId_ = ReservationIdProto.getDefaultInstance();
                }
                else {
                    this.reservationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFBFFF;
                this.nodeLabelExpression_ = "";
                this.bitField0_ &= 0xFFFF7FFF;
                if (this.amContainerResourceRequestBuilder_ == null) {
                    this.amContainerResourceRequest_ = ResourceRequestProto.getDefaultInstance();
                }
                else {
                    this.amContainerResourceRequestBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFEFFFF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationSubmissionContextProto_descriptor;
            }
            
            @Override
            public ApplicationSubmissionContextProto getDefaultInstanceForType() {
                return ApplicationSubmissionContextProto.getDefaultInstance();
            }
            
            @Override
            public ApplicationSubmissionContextProto build() {
                final ApplicationSubmissionContextProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ApplicationSubmissionContextProto buildPartial() {
                final ApplicationSubmissionContextProto result = new ApplicationSubmissionContextProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.applicationIdBuilder_ == null) {
                    result.applicationId_ = this.applicationId_;
                }
                else {
                    result.applicationId_ = this.applicationIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.applicationName_ = this.applicationName_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.queue_ = this.queue_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                if (this.priorityBuilder_ == null) {
                    result.priority_ = this.priority_;
                }
                else {
                    result.priority_ = this.priorityBuilder_.build();
                }
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                if (this.amContainerSpecBuilder_ == null) {
                    result.amContainerSpec_ = this.amContainerSpec_;
                }
                else {
                    result.amContainerSpec_ = this.amContainerSpecBuilder_.build();
                }
                if ((from_bitField0_ & 0x20) == 0x20) {
                    to_bitField0_ |= 0x20;
                }
                result.cancelTokensWhenComplete_ = this.cancelTokensWhenComplete_;
                if ((from_bitField0_ & 0x40) == 0x40) {
                    to_bitField0_ |= 0x40;
                }
                result.unmanagedAm_ = this.unmanagedAm_;
                if ((from_bitField0_ & 0x80) == 0x80) {
                    to_bitField0_ |= 0x80;
                }
                result.maxAppAttempts_ = this.maxAppAttempts_;
                if ((from_bitField0_ & 0x100) == 0x100) {
                    to_bitField0_ |= 0x100;
                }
                if (this.resourceBuilder_ == null) {
                    result.resource_ = this.resource_;
                }
                else {
                    result.resource_ = this.resourceBuilder_.build();
                }
                if ((from_bitField0_ & 0x200) == 0x200) {
                    to_bitField0_ |= 0x200;
                }
                result.applicationType_ = this.applicationType_;
                if ((from_bitField0_ & 0x400) == 0x400) {
                    to_bitField0_ |= 0x400;
                }
                result.keepContainersAcrossApplicationAttempts_ = this.keepContainersAcrossApplicationAttempts_;
                if ((this.bitField0_ & 0x800) == 0x800) {
                    this.applicationTags_ = new UnmodifiableLazyStringList(this.applicationTags_);
                    this.bitField0_ &= 0xFFFFF7FF;
                }
                result.applicationTags_ = this.applicationTags_;
                if ((from_bitField0_ & 0x1000) == 0x1000) {
                    to_bitField0_ |= 0x800;
                }
                result.attemptFailuresValidityInterval_ = this.attemptFailuresValidityInterval_;
                if ((from_bitField0_ & 0x2000) == 0x2000) {
                    to_bitField0_ |= 0x1000;
                }
                if (this.logAggregationContextBuilder_ == null) {
                    result.logAggregationContext_ = this.logAggregationContext_;
                }
                else {
                    result.logAggregationContext_ = this.logAggregationContextBuilder_.build();
                }
                if ((from_bitField0_ & 0x4000) == 0x4000) {
                    to_bitField0_ |= 0x2000;
                }
                if (this.reservationIdBuilder_ == null) {
                    result.reservationId_ = this.reservationId_;
                }
                else {
                    result.reservationId_ = this.reservationIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x8000) == 0x8000) {
                    to_bitField0_ |= 0x4000;
                }
                result.nodeLabelExpression_ = this.nodeLabelExpression_;
                if ((from_bitField0_ & 0x10000) == 0x10000) {
                    to_bitField0_ |= 0x8000;
                }
                if (this.amContainerResourceRequestBuilder_ == null) {
                    result.amContainerResourceRequest_ = this.amContainerResourceRequest_;
                }
                else {
                    result.amContainerResourceRequest_ = this.amContainerResourceRequestBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ApplicationSubmissionContextProto) {
                    return this.mergeFrom((ApplicationSubmissionContextProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ApplicationSubmissionContextProto other) {
                if (other == ApplicationSubmissionContextProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasApplicationId()) {
                    this.mergeApplicationId(other.getApplicationId());
                }
                if (other.hasApplicationName()) {
                    this.bitField0_ |= 0x2;
                    this.applicationName_ = other.applicationName_;
                    this.onChanged();
                }
                if (other.hasQueue()) {
                    this.bitField0_ |= 0x4;
                    this.queue_ = other.queue_;
                    this.onChanged();
                }
                if (other.hasPriority()) {
                    this.mergePriority(other.getPriority());
                }
                if (other.hasAmContainerSpec()) {
                    this.mergeAmContainerSpec(other.getAmContainerSpec());
                }
                if (other.hasCancelTokensWhenComplete()) {
                    this.setCancelTokensWhenComplete(other.getCancelTokensWhenComplete());
                }
                if (other.hasUnmanagedAm()) {
                    this.setUnmanagedAm(other.getUnmanagedAm());
                }
                if (other.hasMaxAppAttempts()) {
                    this.setMaxAppAttempts(other.getMaxAppAttempts());
                }
                if (other.hasResource()) {
                    this.mergeResource(other.getResource());
                }
                if (other.hasApplicationType()) {
                    this.bitField0_ |= 0x200;
                    this.applicationType_ = other.applicationType_;
                    this.onChanged();
                }
                if (other.hasKeepContainersAcrossApplicationAttempts()) {
                    this.setKeepContainersAcrossApplicationAttempts(other.getKeepContainersAcrossApplicationAttempts());
                }
                if (!other.applicationTags_.isEmpty()) {
                    if (this.applicationTags_.isEmpty()) {
                        this.applicationTags_ = other.applicationTags_;
                        this.bitField0_ &= 0xFFFFF7FF;
                    }
                    else {
                        this.ensureApplicationTagsIsMutable();
                        this.applicationTags_.addAll(other.applicationTags_);
                    }
                    this.onChanged();
                }
                if (other.hasAttemptFailuresValidityInterval()) {
                    this.setAttemptFailuresValidityInterval(other.getAttemptFailuresValidityInterval());
                }
                if (other.hasLogAggregationContext()) {
                    this.mergeLogAggregationContext(other.getLogAggregationContext());
                }
                if (other.hasReservationId()) {
                    this.mergeReservationId(other.getReservationId());
                }
                if (other.hasNodeLabelExpression()) {
                    this.bitField0_ |= 0x8000;
                    this.nodeLabelExpression_ = other.nodeLabelExpression_;
                    this.onChanged();
                }
                if (other.hasAmContainerResourceRequest()) {
                    this.mergeAmContainerResourceRequest(other.getAmContainerResourceRequest());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ApplicationSubmissionContextProto parsedMessage = null;
                try {
                    parsedMessage = ApplicationSubmissionContextProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ApplicationSubmissionContextProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasApplicationId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ApplicationIdProto getApplicationId() {
                if (this.applicationIdBuilder_ == null) {
                    return this.applicationId_;
                }
                return this.applicationIdBuilder_.getMessage();
            }
            
            public Builder setApplicationId(final ApplicationIdProto value) {
                if (this.applicationIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.applicationId_ = value;
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setApplicationId(final ApplicationIdProto.Builder builderForValue) {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeApplicationId(final ApplicationIdProto value) {
                if (this.applicationIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.applicationId_ != ApplicationIdProto.getDefaultInstance()) {
                        this.applicationId_ = ApplicationIdProto.newBuilder(this.applicationId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.applicationId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearApplicationId() {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationId_ = ApplicationIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.applicationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ApplicationIdProto.Builder getApplicationIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getApplicationIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ApplicationIdProtoOrBuilder getApplicationIdOrBuilder() {
                if (this.applicationIdBuilder_ != null) {
                    return this.applicationIdBuilder_.getMessageOrBuilder();
                }
                return this.applicationId_;
            }
            
            private SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder> getApplicationIdFieldBuilder() {
                if (this.applicationIdBuilder_ == null) {
                    this.applicationIdBuilder_ = new SingleFieldBuilder<ApplicationIdProto, ApplicationIdProto.Builder, ApplicationIdProtoOrBuilder>(this.applicationId_, this.getParentForChildren(), this.isClean());
                    this.applicationId_ = null;
                }
                return this.applicationIdBuilder_;
            }
            
            @Override
            public boolean hasApplicationName() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getApplicationName() {
                final Object ref = this.applicationName_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.applicationName_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getApplicationNameBytes() {
                final Object ref = this.applicationName_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.applicationName_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setApplicationName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.applicationName_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearApplicationName() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.applicationName_ = ApplicationSubmissionContextProto.getDefaultInstance().getApplicationName();
                this.onChanged();
                return this;
            }
            
            public Builder setApplicationNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.applicationName_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasQueue() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public String getQueue() {
                final Object ref = this.queue_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.queue_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getQueueBytes() {
                final Object ref = this.queue_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.queue_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setQueue(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.queue_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearQueue() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.queue_ = ApplicationSubmissionContextProto.getDefaultInstance().getQueue();
                this.onChanged();
                return this;
            }
            
            public Builder setQueueBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.queue_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasPriority() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public PriorityProto getPriority() {
                if (this.priorityBuilder_ == null) {
                    return this.priority_;
                }
                return this.priorityBuilder_.getMessage();
            }
            
            public Builder setPriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.priority_ = value;
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder setPriority(final PriorityProto.Builder builderForValue) {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder mergePriority(final PriorityProto value) {
                if (this.priorityBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 0x8 && this.priority_ != PriorityProto.getDefaultInstance()) {
                        this.priority_ = PriorityProto.newBuilder(this.priority_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.priority_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x8;
                return this;
            }
            
            public Builder clearPriority() {
                if (this.priorityBuilder_ == null) {
                    this.priority_ = PriorityProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.priorityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            public PriorityProto.Builder getPriorityBuilder() {
                this.bitField0_ |= 0x8;
                this.onChanged();
                return this.getPriorityFieldBuilder().getBuilder();
            }
            
            @Override
            public PriorityProtoOrBuilder getPriorityOrBuilder() {
                if (this.priorityBuilder_ != null) {
                    return this.priorityBuilder_.getMessageOrBuilder();
                }
                return this.priority_;
            }
            
            private SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder> getPriorityFieldBuilder() {
                if (this.priorityBuilder_ == null) {
                    this.priorityBuilder_ = new SingleFieldBuilder<PriorityProto, PriorityProto.Builder, PriorityProtoOrBuilder>(this.priority_, this.getParentForChildren(), this.isClean());
                    this.priority_ = null;
                }
                return this.priorityBuilder_;
            }
            
            @Override
            public boolean hasAmContainerSpec() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public ContainerLaunchContextProto getAmContainerSpec() {
                if (this.amContainerSpecBuilder_ == null) {
                    return this.amContainerSpec_;
                }
                return this.amContainerSpecBuilder_.getMessage();
            }
            
            public Builder setAmContainerSpec(final ContainerLaunchContextProto value) {
                if (this.amContainerSpecBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.amContainerSpec_ = value;
                    this.onChanged();
                }
                else {
                    this.amContainerSpecBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder setAmContainerSpec(final ContainerLaunchContextProto.Builder builderForValue) {
                if (this.amContainerSpecBuilder_ == null) {
                    this.amContainerSpec_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.amContainerSpecBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder mergeAmContainerSpec(final ContainerLaunchContextProto value) {
                if (this.amContainerSpecBuilder_ == null) {
                    if ((this.bitField0_ & 0x10) == 0x10 && this.amContainerSpec_ != ContainerLaunchContextProto.getDefaultInstance()) {
                        this.amContainerSpec_ = ContainerLaunchContextProto.newBuilder(this.amContainerSpec_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.amContainerSpec_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.amContainerSpecBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x10;
                return this;
            }
            
            public Builder clearAmContainerSpec() {
                if (this.amContainerSpecBuilder_ == null) {
                    this.amContainerSpec_ = ContainerLaunchContextProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.amContainerSpecBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFEF;
                return this;
            }
            
            public ContainerLaunchContextProto.Builder getAmContainerSpecBuilder() {
                this.bitField0_ |= 0x10;
                this.onChanged();
                return this.getAmContainerSpecFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerLaunchContextProtoOrBuilder getAmContainerSpecOrBuilder() {
                if (this.amContainerSpecBuilder_ != null) {
                    return this.amContainerSpecBuilder_.getMessageOrBuilder();
                }
                return this.amContainerSpec_;
            }
            
            private SingleFieldBuilder<ContainerLaunchContextProto, ContainerLaunchContextProto.Builder, ContainerLaunchContextProtoOrBuilder> getAmContainerSpecFieldBuilder() {
                if (this.amContainerSpecBuilder_ == null) {
                    this.amContainerSpecBuilder_ = new SingleFieldBuilder<ContainerLaunchContextProto, ContainerLaunchContextProto.Builder, ContainerLaunchContextProtoOrBuilder>(this.amContainerSpec_, this.getParentForChildren(), this.isClean());
                    this.amContainerSpec_ = null;
                }
                return this.amContainerSpecBuilder_;
            }
            
            @Override
            public boolean hasCancelTokensWhenComplete() {
                return (this.bitField0_ & 0x20) == 0x20;
            }
            
            @Override
            public boolean getCancelTokensWhenComplete() {
                return this.cancelTokensWhenComplete_;
            }
            
            public Builder setCancelTokensWhenComplete(final boolean value) {
                this.bitField0_ |= 0x20;
                this.cancelTokensWhenComplete_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearCancelTokensWhenComplete() {
                this.bitField0_ &= 0xFFFFFFDF;
                this.cancelTokensWhenComplete_ = true;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasUnmanagedAm() {
                return (this.bitField0_ & 0x40) == 0x40;
            }
            
            @Override
            public boolean getUnmanagedAm() {
                return this.unmanagedAm_;
            }
            
            public Builder setUnmanagedAm(final boolean value) {
                this.bitField0_ |= 0x40;
                this.unmanagedAm_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearUnmanagedAm() {
                this.bitField0_ &= 0xFFFFFFBF;
                this.unmanagedAm_ = false;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasMaxAppAttempts() {
                return (this.bitField0_ & 0x80) == 0x80;
            }
            
            @Override
            public int getMaxAppAttempts() {
                return this.maxAppAttempts_;
            }
            
            public Builder setMaxAppAttempts(final int value) {
                this.bitField0_ |= 0x80;
                this.maxAppAttempts_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearMaxAppAttempts() {
                this.bitField0_ &= 0xFFFFFF7F;
                this.maxAppAttempts_ = 0;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasResource() {
                return (this.bitField0_ & 0x100) == 0x100;
            }
            
            @Override
            public ResourceProto getResource() {
                if (this.resourceBuilder_ == null) {
                    return this.resource_;
                }
                return this.resourceBuilder_.getMessage();
            }
            
            public Builder setResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.resource_ = value;
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x100;
                return this;
            }
            
            public Builder setResource(final ResourceProto.Builder builderForValue) {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x100;
                return this;
            }
            
            public Builder mergeResource(final ResourceProto value) {
                if (this.resourceBuilder_ == null) {
                    if ((this.bitField0_ & 0x100) == 0x100 && this.resource_ != ResourceProto.getDefaultInstance()) {
                        this.resource_ = ResourceProto.newBuilder(this.resource_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.resource_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x100;
                return this;
            }
            
            public Builder clearResource() {
                if (this.resourceBuilder_ == null) {
                    this.resource_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.resourceBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFEFF;
                return this;
            }
            
            public ResourceProto.Builder getResourceBuilder() {
                this.bitField0_ |= 0x100;
                this.onChanged();
                return this.getResourceFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getResourceOrBuilder() {
                if (this.resourceBuilder_ != null) {
                    return this.resourceBuilder_.getMessageOrBuilder();
                }
                return this.resource_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getResourceFieldBuilder() {
                if (this.resourceBuilder_ == null) {
                    this.resourceBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.resource_, this.getParentForChildren(), this.isClean());
                    this.resource_ = null;
                }
                return this.resourceBuilder_;
            }
            
            @Override
            public boolean hasApplicationType() {
                return (this.bitField0_ & 0x200) == 0x200;
            }
            
            @Override
            public String getApplicationType() {
                final Object ref = this.applicationType_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.applicationType_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getApplicationTypeBytes() {
                final Object ref = this.applicationType_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.applicationType_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setApplicationType(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x200;
                this.applicationType_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearApplicationType() {
                this.bitField0_ &= 0xFFFFFDFF;
                this.applicationType_ = ApplicationSubmissionContextProto.getDefaultInstance().getApplicationType();
                this.onChanged();
                return this;
            }
            
            public Builder setApplicationTypeBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x200;
                this.applicationType_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasKeepContainersAcrossApplicationAttempts() {
                return (this.bitField0_ & 0x400) == 0x400;
            }
            
            @Override
            public boolean getKeepContainersAcrossApplicationAttempts() {
                return this.keepContainersAcrossApplicationAttempts_;
            }
            
            public Builder setKeepContainersAcrossApplicationAttempts(final boolean value) {
                this.bitField0_ |= 0x400;
                this.keepContainersAcrossApplicationAttempts_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearKeepContainersAcrossApplicationAttempts() {
                this.bitField0_ &= 0xFFFFFBFF;
                this.keepContainersAcrossApplicationAttempts_ = false;
                this.onChanged();
                return this;
            }
            
            private void ensureApplicationTagsIsMutable() {
                if ((this.bitField0_ & 0x800) != 0x800) {
                    this.applicationTags_ = new LazyStringArrayList(this.applicationTags_);
                    this.bitField0_ |= 0x800;
                }
            }
            
            @Override
            public List<String> getApplicationTagsList() {
                return Collections.unmodifiableList((List<? extends String>)this.applicationTags_);
            }
            
            @Override
            public int getApplicationTagsCount() {
                return this.applicationTags_.size();
            }
            
            @Override
            public String getApplicationTags(final int index) {
                return this.applicationTags_.get(index);
            }
            
            @Override
            public ByteString getApplicationTagsBytes(final int index) {
                return this.applicationTags_.getByteString(index);
            }
            
            public Builder setApplicationTags(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureApplicationTagsIsMutable();
                this.applicationTags_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addApplicationTags(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureApplicationTagsIsMutable();
                this.applicationTags_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllApplicationTags(final Iterable<String> values) {
                this.ensureApplicationTagsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.applicationTags_);
                this.onChanged();
                return this;
            }
            
            public Builder clearApplicationTags() {
                this.applicationTags_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFF7FF;
                this.onChanged();
                return this;
            }
            
            public Builder addApplicationTagsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureApplicationTagsIsMutable();
                this.applicationTags_.add(value);
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasAttemptFailuresValidityInterval() {
                return (this.bitField0_ & 0x1000) == 0x1000;
            }
            
            @Override
            public long getAttemptFailuresValidityInterval() {
                return this.attemptFailuresValidityInterval_;
            }
            
            public Builder setAttemptFailuresValidityInterval(final long value) {
                this.bitField0_ |= 0x1000;
                this.attemptFailuresValidityInterval_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearAttemptFailuresValidityInterval() {
                this.bitField0_ &= 0xFFFFEFFF;
                this.attemptFailuresValidityInterval_ = -1L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasLogAggregationContext() {
                return (this.bitField0_ & 0x2000) == 0x2000;
            }
            
            @Override
            public LogAggregationContextProto getLogAggregationContext() {
                if (this.logAggregationContextBuilder_ == null) {
                    return this.logAggregationContext_;
                }
                return this.logAggregationContextBuilder_.getMessage();
            }
            
            public Builder setLogAggregationContext(final LogAggregationContextProto value) {
                if (this.logAggregationContextBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.logAggregationContext_ = value;
                    this.onChanged();
                }
                else {
                    this.logAggregationContextBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder setLogAggregationContext(final LogAggregationContextProto.Builder builderForValue) {
                if (this.logAggregationContextBuilder_ == null) {
                    this.logAggregationContext_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.logAggregationContextBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder mergeLogAggregationContext(final LogAggregationContextProto value) {
                if (this.logAggregationContextBuilder_ == null) {
                    if ((this.bitField0_ & 0x2000) == 0x2000 && this.logAggregationContext_ != LogAggregationContextProto.getDefaultInstance()) {
                        this.logAggregationContext_ = LogAggregationContextProto.newBuilder(this.logAggregationContext_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.logAggregationContext_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.logAggregationContextBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2000;
                return this;
            }
            
            public Builder clearLogAggregationContext() {
                if (this.logAggregationContextBuilder_ == null) {
                    this.logAggregationContext_ = LogAggregationContextProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.logAggregationContextBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFDFFF;
                return this;
            }
            
            public LogAggregationContextProto.Builder getLogAggregationContextBuilder() {
                this.bitField0_ |= 0x2000;
                this.onChanged();
                return this.getLogAggregationContextFieldBuilder().getBuilder();
            }
            
            @Override
            public LogAggregationContextProtoOrBuilder getLogAggregationContextOrBuilder() {
                if (this.logAggregationContextBuilder_ != null) {
                    return this.logAggregationContextBuilder_.getMessageOrBuilder();
                }
                return this.logAggregationContext_;
            }
            
            private SingleFieldBuilder<LogAggregationContextProto, LogAggregationContextProto.Builder, LogAggregationContextProtoOrBuilder> getLogAggregationContextFieldBuilder() {
                if (this.logAggregationContextBuilder_ == null) {
                    this.logAggregationContextBuilder_ = new SingleFieldBuilder<LogAggregationContextProto, LogAggregationContextProto.Builder, LogAggregationContextProtoOrBuilder>(this.logAggregationContext_, this.getParentForChildren(), this.isClean());
                    this.logAggregationContext_ = null;
                }
                return this.logAggregationContextBuilder_;
            }
            
            @Override
            public boolean hasReservationId() {
                return (this.bitField0_ & 0x4000) == 0x4000;
            }
            
            @Override
            public ReservationIdProto getReservationId() {
                if (this.reservationIdBuilder_ == null) {
                    return this.reservationId_;
                }
                return this.reservationIdBuilder_.getMessage();
            }
            
            public Builder setReservationId(final ReservationIdProto value) {
                if (this.reservationIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.reservationId_ = value;
                    this.onChanged();
                }
                else {
                    this.reservationIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4000;
                return this;
            }
            
            public Builder setReservationId(final ReservationIdProto.Builder builderForValue) {
                if (this.reservationIdBuilder_ == null) {
                    this.reservationId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.reservationIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4000;
                return this;
            }
            
            public Builder mergeReservationId(final ReservationIdProto value) {
                if (this.reservationIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x4000) == 0x4000 && this.reservationId_ != ReservationIdProto.getDefaultInstance()) {
                        this.reservationId_ = ReservationIdProto.newBuilder(this.reservationId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.reservationId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.reservationIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4000;
                return this;
            }
            
            public Builder clearReservationId() {
                if (this.reservationIdBuilder_ == null) {
                    this.reservationId_ = ReservationIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.reservationIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFBFFF;
                return this;
            }
            
            public ReservationIdProto.Builder getReservationIdBuilder() {
                this.bitField0_ |= 0x4000;
                this.onChanged();
                return this.getReservationIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ReservationIdProtoOrBuilder getReservationIdOrBuilder() {
                if (this.reservationIdBuilder_ != null) {
                    return this.reservationIdBuilder_.getMessageOrBuilder();
                }
                return this.reservationId_;
            }
            
            private SingleFieldBuilder<ReservationIdProto, ReservationIdProto.Builder, ReservationIdProtoOrBuilder> getReservationIdFieldBuilder() {
                if (this.reservationIdBuilder_ == null) {
                    this.reservationIdBuilder_ = new SingleFieldBuilder<ReservationIdProto, ReservationIdProto.Builder, ReservationIdProtoOrBuilder>(this.reservationId_, this.getParentForChildren(), this.isClean());
                    this.reservationId_ = null;
                }
                return this.reservationIdBuilder_;
            }
            
            @Override
            public boolean hasNodeLabelExpression() {
                return (this.bitField0_ & 0x8000) == 0x8000;
            }
            
            @Override
            public String getNodeLabelExpression() {
                final Object ref = this.nodeLabelExpression_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.nodeLabelExpression_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getNodeLabelExpressionBytes() {
                final Object ref = this.nodeLabelExpression_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.nodeLabelExpression_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setNodeLabelExpression(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8000;
                this.nodeLabelExpression_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNodeLabelExpression() {
                this.bitField0_ &= 0xFFFF7FFF;
                this.nodeLabelExpression_ = ApplicationSubmissionContextProto.getDefaultInstance().getNodeLabelExpression();
                this.onChanged();
                return this;
            }
            
            public Builder setNodeLabelExpressionBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8000;
                this.nodeLabelExpression_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasAmContainerResourceRequest() {
                return (this.bitField0_ & 0x10000) == 0x10000;
            }
            
            @Override
            public ResourceRequestProto getAmContainerResourceRequest() {
                if (this.amContainerResourceRequestBuilder_ == null) {
                    return this.amContainerResourceRequest_;
                }
                return this.amContainerResourceRequestBuilder_.getMessage();
            }
            
            public Builder setAmContainerResourceRequest(final ResourceRequestProto value) {
                if (this.amContainerResourceRequestBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.amContainerResourceRequest_ = value;
                    this.onChanged();
                }
                else {
                    this.amContainerResourceRequestBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x10000;
                return this;
            }
            
            public Builder setAmContainerResourceRequest(final ResourceRequestProto.Builder builderForValue) {
                if (this.amContainerResourceRequestBuilder_ == null) {
                    this.amContainerResourceRequest_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.amContainerResourceRequestBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x10000;
                return this;
            }
            
            public Builder mergeAmContainerResourceRequest(final ResourceRequestProto value) {
                if (this.amContainerResourceRequestBuilder_ == null) {
                    if ((this.bitField0_ & 0x10000) == 0x10000 && this.amContainerResourceRequest_ != ResourceRequestProto.getDefaultInstance()) {
                        this.amContainerResourceRequest_ = ResourceRequestProto.newBuilder(this.amContainerResourceRequest_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.amContainerResourceRequest_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.amContainerResourceRequestBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x10000;
                return this;
            }
            
            public Builder clearAmContainerResourceRequest() {
                if (this.amContainerResourceRequestBuilder_ == null) {
                    this.amContainerResourceRequest_ = ResourceRequestProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.amContainerResourceRequestBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFEFFFF;
                return this;
            }
            
            public ResourceRequestProto.Builder getAmContainerResourceRequestBuilder() {
                this.bitField0_ |= 0x10000;
                this.onChanged();
                return this.getAmContainerResourceRequestFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceRequestProtoOrBuilder getAmContainerResourceRequestOrBuilder() {
                if (this.amContainerResourceRequestBuilder_ != null) {
                    return this.amContainerResourceRequestBuilder_.getMessageOrBuilder();
                }
                return this.amContainerResourceRequest_;
            }
            
            private SingleFieldBuilder<ResourceRequestProto, ResourceRequestProto.Builder, ResourceRequestProtoOrBuilder> getAmContainerResourceRequestFieldBuilder() {
                if (this.amContainerResourceRequestBuilder_ == null) {
                    this.amContainerResourceRequestBuilder_ = new SingleFieldBuilder<ResourceRequestProto, ResourceRequestProto.Builder, ResourceRequestProtoOrBuilder>(this.amContainerResourceRequest_, this.getParentForChildren(), this.isClean());
                    this.amContainerResourceRequest_ = null;
                }
                return this.amContainerResourceRequestBuilder_;
            }
        }
    }
    
    public static final class LogAggregationContextProto extends GeneratedMessage implements LogAggregationContextProtoOrBuilder
    {
        private static final LogAggregationContextProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<LogAggregationContextProto> PARSER;
        private int bitField0_;
        public static final int INCLUDE_PATTERN_FIELD_NUMBER = 1;
        private Object includePattern_;
        public static final int EXCLUDE_PATTERN_FIELD_NUMBER = 2;
        private Object excludePattern_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private LogAggregationContextProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private LogAggregationContextProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static LogAggregationContextProto getDefaultInstance() {
            return LogAggregationContextProto.defaultInstance;
        }
        
        @Override
        public LogAggregationContextProto getDefaultInstanceForType() {
            return LogAggregationContextProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private LogAggregationContextProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.includePattern_ = input.readBytes();
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.excludePattern_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_fieldAccessorTable.ensureFieldAccessorsInitialized(LogAggregationContextProto.class, Builder.class);
        }
        
        @Override
        public Parser<LogAggregationContextProto> getParserForType() {
            return LogAggregationContextProto.PARSER;
        }
        
        @Override
        public boolean hasIncludePattern() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getIncludePattern() {
            final Object ref = this.includePattern_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.includePattern_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getIncludePatternBytes() {
            final Object ref = this.includePattern_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.includePattern_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasExcludePattern() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getExcludePattern() {
            final Object ref = this.excludePattern_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.excludePattern_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getExcludePatternBytes() {
            final Object ref = this.excludePattern_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.excludePattern_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.includePattern_ = ".*";
            this.excludePattern_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getIncludePatternBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getExcludePatternBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getIncludePatternBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getExcludePatternBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof LogAggregationContextProto)) {
                return super.equals(obj);
            }
            final LogAggregationContextProto other = (LogAggregationContextProto)obj;
            boolean result = true;
            result = (result && this.hasIncludePattern() == other.hasIncludePattern());
            if (this.hasIncludePattern()) {
                result = (result && this.getIncludePattern().equals(other.getIncludePattern()));
            }
            result = (result && this.hasExcludePattern() == other.hasExcludePattern());
            if (this.hasExcludePattern()) {
                result = (result && this.getExcludePattern().equals(other.getExcludePattern()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasIncludePattern()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getIncludePattern().hashCode();
            }
            if (this.hasExcludePattern()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getExcludePattern().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static LogAggregationContextProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return LogAggregationContextProto.PARSER.parseFrom(data);
        }
        
        public static LogAggregationContextProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return LogAggregationContextProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static LogAggregationContextProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return LogAggregationContextProto.PARSER.parseFrom(data);
        }
        
        public static LogAggregationContextProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return LogAggregationContextProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static LogAggregationContextProto parseFrom(final InputStream input) throws IOException {
            return LogAggregationContextProto.PARSER.parseFrom(input);
        }
        
        public static LogAggregationContextProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return LogAggregationContextProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static LogAggregationContextProto parseDelimitedFrom(final InputStream input) throws IOException {
            return LogAggregationContextProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static LogAggregationContextProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return LogAggregationContextProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static LogAggregationContextProto parseFrom(final CodedInputStream input) throws IOException {
            return LogAggregationContextProto.PARSER.parseFrom(input);
        }
        
        public static LogAggregationContextProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return LogAggregationContextProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final LogAggregationContextProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            LogAggregationContextProto.PARSER = new AbstractParser<LogAggregationContextProto>() {
                @Override
                public LogAggregationContextProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new LogAggregationContextProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new LogAggregationContextProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements LogAggregationContextProtoOrBuilder
        {
            private int bitField0_;
            private Object includePattern_;
            private Object excludePattern_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_fieldAccessorTable.ensureFieldAccessorsInitialized(LogAggregationContextProto.class, Builder.class);
            }
            
            private Builder() {
                this.includePattern_ = ".*";
                this.excludePattern_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.includePattern_ = ".*";
                this.excludePattern_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (LogAggregationContextProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.includePattern_ = ".*";
                this.bitField0_ &= 0xFFFFFFFE;
                this.excludePattern_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_LogAggregationContextProto_descriptor;
            }
            
            @Override
            public LogAggregationContextProto getDefaultInstanceForType() {
                return LogAggregationContextProto.getDefaultInstance();
            }
            
            @Override
            public LogAggregationContextProto build() {
                final LogAggregationContextProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public LogAggregationContextProto buildPartial() {
                final LogAggregationContextProto result = new LogAggregationContextProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.includePattern_ = this.includePattern_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.excludePattern_ = this.excludePattern_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof LogAggregationContextProto) {
                    return this.mergeFrom((LogAggregationContextProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final LogAggregationContextProto other) {
                if (other == LogAggregationContextProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasIncludePattern()) {
                    this.bitField0_ |= 0x1;
                    this.includePattern_ = other.includePattern_;
                    this.onChanged();
                }
                if (other.hasExcludePattern()) {
                    this.bitField0_ |= 0x2;
                    this.excludePattern_ = other.excludePattern_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                LogAggregationContextProto parsedMessage = null;
                try {
                    parsedMessage = LogAggregationContextProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (LogAggregationContextProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasIncludePattern() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getIncludePattern() {
                final Object ref = this.includePattern_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.includePattern_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getIncludePatternBytes() {
                final Object ref = this.includePattern_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.includePattern_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setIncludePattern(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.includePattern_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearIncludePattern() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.includePattern_ = LogAggregationContextProto.getDefaultInstance().getIncludePattern();
                this.onChanged();
                return this;
            }
            
            public Builder setIncludePatternBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.includePattern_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasExcludePattern() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getExcludePattern() {
                final Object ref = this.excludePattern_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.excludePattern_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getExcludePatternBytes() {
                final Object ref = this.excludePattern_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.excludePattern_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setExcludePattern(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.excludePattern_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearExcludePattern() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.excludePattern_ = LogAggregationContextProto.getDefaultInstance().getExcludePattern();
                this.onChanged();
                return this;
            }
            
            public Builder setExcludePatternBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.excludePattern_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ApplicationACLMapProto extends GeneratedMessage implements ApplicationACLMapProtoOrBuilder
    {
        private static final ApplicationACLMapProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ApplicationACLMapProto> PARSER;
        private int bitField0_;
        public static final int ACCESSTYPE_FIELD_NUMBER = 1;
        private ApplicationAccessTypeProto accessType_;
        public static final int ACL_FIELD_NUMBER = 2;
        private Object acl_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ApplicationACLMapProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ApplicationACLMapProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ApplicationACLMapProto getDefaultInstance() {
            return ApplicationACLMapProto.defaultInstance;
        }
        
        @Override
        public ApplicationACLMapProto getDefaultInstanceForType() {
            return ApplicationACLMapProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ApplicationACLMapProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            final int rawValue = input.readEnum();
                            final ApplicationAccessTypeProto value = ApplicationAccessTypeProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x1;
                            this.accessType_ = value;
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.acl_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationACLMapProto.class, Builder.class);
        }
        
        @Override
        public Parser<ApplicationACLMapProto> getParserForType() {
            return ApplicationACLMapProto.PARSER;
        }
        
        @Override
        public boolean hasAccessType() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ApplicationAccessTypeProto getAccessType() {
            return this.accessType_;
        }
        
        @Override
        public boolean hasAcl() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getAcl() {
            final Object ref = this.acl_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.acl_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getAclBytes() {
            final Object ref = this.acl_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.acl_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.accessType_ = ApplicationAccessTypeProto.APPACCESS_VIEW_APP;
            this.acl_ = " ";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeEnum(1, this.accessType_.getNumber());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getAclBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeEnumSize(1, this.accessType_.getNumber());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getAclBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ApplicationACLMapProto)) {
                return super.equals(obj);
            }
            final ApplicationACLMapProto other = (ApplicationACLMapProto)obj;
            boolean result = true;
            result = (result && this.hasAccessType() == other.hasAccessType());
            if (this.hasAccessType()) {
                result = (result && this.getAccessType() == other.getAccessType());
            }
            result = (result && this.hasAcl() == other.hasAcl());
            if (this.hasAcl()) {
                result = (result && this.getAcl().equals(other.getAcl()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasAccessType()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getAccessType());
            }
            if (this.hasAcl()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getAcl().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ApplicationACLMapProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ApplicationACLMapProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationACLMapProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationACLMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationACLMapProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ApplicationACLMapProto.PARSER.parseFrom(data);
        }
        
        public static ApplicationACLMapProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ApplicationACLMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ApplicationACLMapProto parseFrom(final InputStream input) throws IOException {
            return ApplicationACLMapProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationACLMapProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationACLMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ApplicationACLMapProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ApplicationACLMapProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ApplicationACLMapProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationACLMapProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ApplicationACLMapProto parseFrom(final CodedInputStream input) throws IOException {
            return ApplicationACLMapProto.PARSER.parseFrom(input);
        }
        
        public static ApplicationACLMapProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ApplicationACLMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ApplicationACLMapProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ApplicationACLMapProto.PARSER = new AbstractParser<ApplicationACLMapProto>() {
                @Override
                public ApplicationACLMapProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ApplicationACLMapProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ApplicationACLMapProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ApplicationACLMapProtoOrBuilder
        {
            private int bitField0_;
            private ApplicationAccessTypeProto accessType_;
            private Object acl_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ApplicationACLMapProto.class, Builder.class);
            }
            
            private Builder() {
                this.accessType_ = ApplicationAccessTypeProto.APPACCESS_VIEW_APP;
                this.acl_ = " ";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.accessType_ = ApplicationAccessTypeProto.APPACCESS_VIEW_APP;
                this.acl_ = " ";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ApplicationACLMapProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.accessType_ = ApplicationAccessTypeProto.APPACCESS_VIEW_APP;
                this.bitField0_ &= 0xFFFFFFFE;
                this.acl_ = " ";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ApplicationACLMapProto_descriptor;
            }
            
            @Override
            public ApplicationACLMapProto getDefaultInstanceForType() {
                return ApplicationACLMapProto.getDefaultInstance();
            }
            
            @Override
            public ApplicationACLMapProto build() {
                final ApplicationACLMapProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ApplicationACLMapProto buildPartial() {
                final ApplicationACLMapProto result = new ApplicationACLMapProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.accessType_ = this.accessType_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.acl_ = this.acl_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ApplicationACLMapProto) {
                    return this.mergeFrom((ApplicationACLMapProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ApplicationACLMapProto other) {
                if (other == ApplicationACLMapProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasAccessType()) {
                    this.setAccessType(other.getAccessType());
                }
                if (other.hasAcl()) {
                    this.bitField0_ |= 0x2;
                    this.acl_ = other.acl_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ApplicationACLMapProto parsedMessage = null;
                try {
                    parsedMessage = ApplicationACLMapProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ApplicationACLMapProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasAccessType() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ApplicationAccessTypeProto getAccessType() {
                return this.accessType_;
            }
            
            public Builder setAccessType(final ApplicationAccessTypeProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.accessType_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearAccessType() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.accessType_ = ApplicationAccessTypeProto.APPACCESS_VIEW_APP;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasAcl() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getAcl() {
                final Object ref = this.acl_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.acl_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getAclBytes() {
                final Object ref = this.acl_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.acl_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setAcl(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.acl_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearAcl() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.acl_ = ApplicationACLMapProto.getDefaultInstance().getAcl();
                this.onChanged();
                return this;
            }
            
            public Builder setAclBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.acl_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class YarnClusterMetricsProto extends GeneratedMessage implements YarnClusterMetricsProtoOrBuilder
    {
        private static final YarnClusterMetricsProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<YarnClusterMetricsProto> PARSER;
        private int bitField0_;
        public static final int NUM_NODE_MANAGERS_FIELD_NUMBER = 1;
        private int numNodeManagers_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private YarnClusterMetricsProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private YarnClusterMetricsProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static YarnClusterMetricsProto getDefaultInstance() {
            return YarnClusterMetricsProto.defaultInstance;
        }
        
        @Override
        public YarnClusterMetricsProto getDefaultInstanceForType() {
            return YarnClusterMetricsProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private YarnClusterMetricsProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            this.bitField0_ |= 0x1;
                            this.numNodeManagers_ = input.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_fieldAccessorTable.ensureFieldAccessorsInitialized(YarnClusterMetricsProto.class, Builder.class);
        }
        
        @Override
        public Parser<YarnClusterMetricsProto> getParserForType() {
            return YarnClusterMetricsProto.PARSER;
        }
        
        @Override
        public boolean hasNumNodeManagers() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public int getNumNodeManagers() {
            return this.numNodeManagers_;
        }
        
        private void initFields() {
            this.numNodeManagers_ = 0;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeInt32(1, this.numNodeManagers_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeInt32Size(1, this.numNodeManagers_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof YarnClusterMetricsProto)) {
                return super.equals(obj);
            }
            final YarnClusterMetricsProto other = (YarnClusterMetricsProto)obj;
            boolean result = true;
            result = (result && this.hasNumNodeManagers() == other.hasNumNodeManagers());
            if (this.hasNumNodeManagers()) {
                result = (result && this.getNumNodeManagers() == other.getNumNodeManagers());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasNumNodeManagers()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getNumNodeManagers();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static YarnClusterMetricsProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return YarnClusterMetricsProto.PARSER.parseFrom(data);
        }
        
        public static YarnClusterMetricsProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return YarnClusterMetricsProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static YarnClusterMetricsProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return YarnClusterMetricsProto.PARSER.parseFrom(data);
        }
        
        public static YarnClusterMetricsProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return YarnClusterMetricsProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static YarnClusterMetricsProto parseFrom(final InputStream input) throws IOException {
            return YarnClusterMetricsProto.PARSER.parseFrom(input);
        }
        
        public static YarnClusterMetricsProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return YarnClusterMetricsProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static YarnClusterMetricsProto parseDelimitedFrom(final InputStream input) throws IOException {
            return YarnClusterMetricsProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static YarnClusterMetricsProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return YarnClusterMetricsProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static YarnClusterMetricsProto parseFrom(final CodedInputStream input) throws IOException {
            return YarnClusterMetricsProto.PARSER.parseFrom(input);
        }
        
        public static YarnClusterMetricsProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return YarnClusterMetricsProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final YarnClusterMetricsProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            YarnClusterMetricsProto.PARSER = new AbstractParser<YarnClusterMetricsProto>() {
                @Override
                public YarnClusterMetricsProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new YarnClusterMetricsProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new YarnClusterMetricsProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements YarnClusterMetricsProtoOrBuilder
        {
            private int bitField0_;
            private int numNodeManagers_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_fieldAccessorTable.ensureFieldAccessorsInitialized(YarnClusterMetricsProto.class, Builder.class);
            }
            
            private Builder() {
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (YarnClusterMetricsProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.numNodeManagers_ = 0;
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_YarnClusterMetricsProto_descriptor;
            }
            
            @Override
            public YarnClusterMetricsProto getDefaultInstanceForType() {
                return YarnClusterMetricsProto.getDefaultInstance();
            }
            
            @Override
            public YarnClusterMetricsProto build() {
                final YarnClusterMetricsProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public YarnClusterMetricsProto buildPartial() {
                final YarnClusterMetricsProto result = new YarnClusterMetricsProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.numNodeManagers_ = this.numNodeManagers_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof YarnClusterMetricsProto) {
                    return this.mergeFrom((YarnClusterMetricsProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final YarnClusterMetricsProto other) {
                if (other == YarnClusterMetricsProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasNumNodeManagers()) {
                    this.setNumNodeManagers(other.getNumNodeManagers());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                YarnClusterMetricsProto parsedMessage = null;
                try {
                    parsedMessage = YarnClusterMetricsProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (YarnClusterMetricsProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasNumNodeManagers() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public int getNumNodeManagers() {
                return this.numNodeManagers_;
            }
            
            public Builder setNumNodeManagers(final int value) {
                this.bitField0_ |= 0x1;
                this.numNodeManagers_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNumNodeManagers() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.numNodeManagers_ = 0;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class QueueInfoProto extends GeneratedMessage implements QueueInfoProtoOrBuilder
    {
        private static final QueueInfoProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<QueueInfoProto> PARSER;
        private int bitField0_;
        public static final int QUEUENAME_FIELD_NUMBER = 1;
        private Object queueName_;
        public static final int CAPACITY_FIELD_NUMBER = 2;
        private float capacity_;
        public static final int MAXIMUMCAPACITY_FIELD_NUMBER = 3;
        private float maximumCapacity_;
        public static final int CURRENTCAPACITY_FIELD_NUMBER = 4;
        private float currentCapacity_;
        public static final int STATE_FIELD_NUMBER = 5;
        private QueueStateProto state_;
        public static final int CHILDQUEUES_FIELD_NUMBER = 6;
        private List<QueueInfoProto> childQueues_;
        public static final int APPLICATIONS_FIELD_NUMBER = 7;
        private List<ApplicationReportProto> applications_;
        public static final int ACCESSIBLENODELABELS_FIELD_NUMBER = 8;
        private LazyStringList accessibleNodeLabels_;
        public static final int DEFAULTNODELABELEXPRESSION_FIELD_NUMBER = 9;
        private Object defaultNodeLabelExpression_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private QueueInfoProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private QueueInfoProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static QueueInfoProto getDefaultInstance() {
            return QueueInfoProto.defaultInstance;
        }
        
        @Override
        public QueueInfoProto getDefaultInstanceForType() {
            return QueueInfoProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private QueueInfoProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.queueName_ = input.readBytes();
                            continue;
                        }
                        case 21: {
                            this.bitField0_ |= 0x2;
                            this.capacity_ = input.readFloat();
                            continue;
                        }
                        case 29: {
                            this.bitField0_ |= 0x4;
                            this.maximumCapacity_ = input.readFloat();
                            continue;
                        }
                        case 37: {
                            this.bitField0_ |= 0x8;
                            this.currentCapacity_ = input.readFloat();
                            continue;
                        }
                        case 40: {
                            final int rawValue = input.readEnum();
                            final QueueStateProto value = QueueStateProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(5, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x10;
                            this.state_ = value;
                            continue;
                        }
                        case 50: {
                            if ((mutable_bitField0_ & 0x20) != 0x20) {
                                this.childQueues_ = new ArrayList<QueueInfoProto>();
                                mutable_bitField0_ |= 0x20;
                            }
                            this.childQueues_.add(input.readMessage(QueueInfoProto.PARSER, extensionRegistry));
                            continue;
                        }
                        case 58: {
                            if ((mutable_bitField0_ & 0x40) != 0x40) {
                                this.applications_ = new ArrayList<ApplicationReportProto>();
                                mutable_bitField0_ |= 0x40;
                            }
                            this.applications_.add(input.readMessage(ApplicationReportProto.PARSER, extensionRegistry));
                            continue;
                        }
                        case 66: {
                            if ((mutable_bitField0_ & 0x80) != 0x80) {
                                this.accessibleNodeLabels_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x80;
                            }
                            this.accessibleNodeLabels_.add(input.readBytes());
                            continue;
                        }
                        case 74: {
                            this.bitField0_ |= 0x20;
                            this.defaultNodeLabelExpression_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x20) == 0x20) {
                    this.childQueues_ = Collections.unmodifiableList((List<? extends QueueInfoProto>)this.childQueues_);
                }
                if ((mutable_bitField0_ & 0x40) == 0x40) {
                    this.applications_ = Collections.unmodifiableList((List<? extends ApplicationReportProto>)this.applications_);
                }
                if ((mutable_bitField0_ & 0x80) == 0x80) {
                    this.accessibleNodeLabels_ = new UnmodifiableLazyStringList(this.accessibleNodeLabels_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_fieldAccessorTable.ensureFieldAccessorsInitialized(QueueInfoProto.class, Builder.class);
        }
        
        @Override
        public Parser<QueueInfoProto> getParserForType() {
            return QueueInfoProto.PARSER;
        }
        
        @Override
        public boolean hasQueueName() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getQueueName() {
            final Object ref = this.queueName_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.queueName_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getQueueNameBytes() {
            final Object ref = this.queueName_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.queueName_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasCapacity() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public float getCapacity() {
            return this.capacity_;
        }
        
        @Override
        public boolean hasMaximumCapacity() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public float getMaximumCapacity() {
            return this.maximumCapacity_;
        }
        
        @Override
        public boolean hasCurrentCapacity() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public float getCurrentCapacity() {
            return this.currentCapacity_;
        }
        
        @Override
        public boolean hasState() {
            return (this.bitField0_ & 0x10) == 0x10;
        }
        
        @Override
        public QueueStateProto getState() {
            return this.state_;
        }
        
        @Override
        public List<QueueInfoProto> getChildQueuesList() {
            return this.childQueues_;
        }
        
        @Override
        public List<? extends QueueInfoProtoOrBuilder> getChildQueuesOrBuilderList() {
            return this.childQueues_;
        }
        
        @Override
        public int getChildQueuesCount() {
            return this.childQueues_.size();
        }
        
        @Override
        public QueueInfoProto getChildQueues(final int index) {
            return this.childQueues_.get(index);
        }
        
        @Override
        public QueueInfoProtoOrBuilder getChildQueuesOrBuilder(final int index) {
            return this.childQueues_.get(index);
        }
        
        @Override
        public List<ApplicationReportProto> getApplicationsList() {
            return this.applications_;
        }
        
        @Override
        public List<? extends ApplicationReportProtoOrBuilder> getApplicationsOrBuilderList() {
            return this.applications_;
        }
        
        @Override
        public int getApplicationsCount() {
            return this.applications_.size();
        }
        
        @Override
        public ApplicationReportProto getApplications(final int index) {
            return this.applications_.get(index);
        }
        
        @Override
        public ApplicationReportProtoOrBuilder getApplicationsOrBuilder(final int index) {
            return this.applications_.get(index);
        }
        
        @Override
        public List<String> getAccessibleNodeLabelsList() {
            return this.accessibleNodeLabels_;
        }
        
        @Override
        public int getAccessibleNodeLabelsCount() {
            return this.accessibleNodeLabels_.size();
        }
        
        @Override
        public String getAccessibleNodeLabels(final int index) {
            return this.accessibleNodeLabels_.get(index);
        }
        
        @Override
        public ByteString getAccessibleNodeLabelsBytes(final int index) {
            return this.accessibleNodeLabels_.getByteString(index);
        }
        
        @Override
        public boolean hasDefaultNodeLabelExpression() {
            return (this.bitField0_ & 0x20) == 0x20;
        }
        
        @Override
        public String getDefaultNodeLabelExpression() {
            final Object ref = this.defaultNodeLabelExpression_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.defaultNodeLabelExpression_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getDefaultNodeLabelExpressionBytes() {
            final Object ref = this.defaultNodeLabelExpression_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.defaultNodeLabelExpression_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.queueName_ = "";
            this.capacity_ = 0.0f;
            this.maximumCapacity_ = 0.0f;
            this.currentCapacity_ = 0.0f;
            this.state_ = QueueStateProto.Q_STOPPED;
            this.childQueues_ = Collections.emptyList();
            this.applications_ = Collections.emptyList();
            this.accessibleNodeLabels_ = LazyStringArrayList.EMPTY;
            this.defaultNodeLabelExpression_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            for (int i = 0; i < this.getChildQueuesCount(); ++i) {
                if (!this.getChildQueues(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            for (int i = 0; i < this.getApplicationsCount(); ++i) {
                if (!this.getApplications(i).isInitialized()) {
                    this.memoizedIsInitialized = 0;
                    return false;
                }
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getQueueNameBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeFloat(2, this.capacity_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeFloat(3, this.maximumCapacity_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeFloat(4, this.currentCapacity_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                output.writeEnum(5, this.state_.getNumber());
            }
            for (int i = 0; i < this.childQueues_.size(); ++i) {
                output.writeMessage(6, this.childQueues_.get(i));
            }
            for (int i = 0; i < this.applications_.size(); ++i) {
                output.writeMessage(7, this.applications_.get(i));
            }
            for (int i = 0; i < this.accessibleNodeLabels_.size(); ++i) {
                output.writeBytes(8, this.accessibleNodeLabels_.getByteString(i));
            }
            if ((this.bitField0_ & 0x20) == 0x20) {
                output.writeBytes(9, this.getDefaultNodeLabelExpressionBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getQueueNameBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeFloatSize(2, this.capacity_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeFloatSize(3, this.maximumCapacity_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeFloatSize(4, this.currentCapacity_);
            }
            if ((this.bitField0_ & 0x10) == 0x10) {
                size += CodedOutputStream.computeEnumSize(5, this.state_.getNumber());
            }
            for (int i = 0; i < this.childQueues_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(6, this.childQueues_.get(i));
            }
            for (int i = 0; i < this.applications_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(7, this.applications_.get(i));
            }
            int dataSize = 0;
            for (int j = 0; j < this.accessibleNodeLabels_.size(); ++j) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.accessibleNodeLabels_.getByteString(j));
            }
            size += dataSize;
            size += 1 * this.getAccessibleNodeLabelsList().size();
            if ((this.bitField0_ & 0x20) == 0x20) {
                size += CodedOutputStream.computeBytesSize(9, this.getDefaultNodeLabelExpressionBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof QueueInfoProto)) {
                return super.equals(obj);
            }
            final QueueInfoProto other = (QueueInfoProto)obj;
            boolean result = true;
            result = (result && this.hasQueueName() == other.hasQueueName());
            if (this.hasQueueName()) {
                result = (result && this.getQueueName().equals(other.getQueueName()));
            }
            result = (result && this.hasCapacity() == other.hasCapacity());
            if (this.hasCapacity()) {
                result = (result && Float.floatToIntBits(this.getCapacity()) == Float.floatToIntBits(other.getCapacity()));
            }
            result = (result && this.hasMaximumCapacity() == other.hasMaximumCapacity());
            if (this.hasMaximumCapacity()) {
                result = (result && Float.floatToIntBits(this.getMaximumCapacity()) == Float.floatToIntBits(other.getMaximumCapacity()));
            }
            result = (result && this.hasCurrentCapacity() == other.hasCurrentCapacity());
            if (this.hasCurrentCapacity()) {
                result = (result && Float.floatToIntBits(this.getCurrentCapacity()) == Float.floatToIntBits(other.getCurrentCapacity()));
            }
            result = (result && this.hasState() == other.hasState());
            if (this.hasState()) {
                result = (result && this.getState() == other.getState());
            }
            result = (result && this.getChildQueuesList().equals(other.getChildQueuesList()));
            result = (result && this.getApplicationsList().equals(other.getApplicationsList()));
            result = (result && this.getAccessibleNodeLabelsList().equals(other.getAccessibleNodeLabelsList()));
            result = (result && this.hasDefaultNodeLabelExpression() == other.hasDefaultNodeLabelExpression());
            if (this.hasDefaultNodeLabelExpression()) {
                result = (result && this.getDefaultNodeLabelExpression().equals(other.getDefaultNodeLabelExpression()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasQueueName()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getQueueName().hashCode();
            }
            if (this.hasCapacity()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + Float.floatToIntBits(this.getCapacity());
            }
            if (this.hasMaximumCapacity()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + Float.floatToIntBits(this.getMaximumCapacity());
            }
            if (this.hasCurrentCapacity()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + Float.floatToIntBits(this.getCurrentCapacity());
            }
            if (this.hasState()) {
                hash = 37 * hash + 5;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getState());
            }
            if (this.getChildQueuesCount() > 0) {
                hash = 37 * hash + 6;
                hash = 53 * hash + this.getChildQueuesList().hashCode();
            }
            if (this.getApplicationsCount() > 0) {
                hash = 37 * hash + 7;
                hash = 53 * hash + this.getApplicationsList().hashCode();
            }
            if (this.getAccessibleNodeLabelsCount() > 0) {
                hash = 37 * hash + 8;
                hash = 53 * hash + this.getAccessibleNodeLabelsList().hashCode();
            }
            if (this.hasDefaultNodeLabelExpression()) {
                hash = 37 * hash + 9;
                hash = 53 * hash + this.getDefaultNodeLabelExpression().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static QueueInfoProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return QueueInfoProto.PARSER.parseFrom(data);
        }
        
        public static QueueInfoProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return QueueInfoProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static QueueInfoProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return QueueInfoProto.PARSER.parseFrom(data);
        }
        
        public static QueueInfoProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return QueueInfoProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static QueueInfoProto parseFrom(final InputStream input) throws IOException {
            return QueueInfoProto.PARSER.parseFrom(input);
        }
        
        public static QueueInfoProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return QueueInfoProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static QueueInfoProto parseDelimitedFrom(final InputStream input) throws IOException {
            return QueueInfoProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static QueueInfoProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return QueueInfoProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static QueueInfoProto parseFrom(final CodedInputStream input) throws IOException {
            return QueueInfoProto.PARSER.parseFrom(input);
        }
        
        public static QueueInfoProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return QueueInfoProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final QueueInfoProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            QueueInfoProto.PARSER = new AbstractParser<QueueInfoProto>() {
                @Override
                public QueueInfoProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new QueueInfoProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new QueueInfoProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements QueueInfoProtoOrBuilder
        {
            private int bitField0_;
            private Object queueName_;
            private float capacity_;
            private float maximumCapacity_;
            private float currentCapacity_;
            private QueueStateProto state_;
            private List<QueueInfoProto> childQueues_;
            private RepeatedFieldBuilder<QueueInfoProto, Builder, QueueInfoProtoOrBuilder> childQueuesBuilder_;
            private List<ApplicationReportProto> applications_;
            private RepeatedFieldBuilder<ApplicationReportProto, ApplicationReportProto.Builder, ApplicationReportProtoOrBuilder> applicationsBuilder_;
            private LazyStringList accessibleNodeLabels_;
            private Object defaultNodeLabelExpression_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_fieldAccessorTable.ensureFieldAccessorsInitialized(QueueInfoProto.class, Builder.class);
            }
            
            private Builder() {
                this.queueName_ = "";
                this.state_ = QueueStateProto.Q_STOPPED;
                this.childQueues_ = Collections.emptyList();
                this.applications_ = Collections.emptyList();
                this.accessibleNodeLabels_ = LazyStringArrayList.EMPTY;
                this.defaultNodeLabelExpression_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.queueName_ = "";
                this.state_ = QueueStateProto.Q_STOPPED;
                this.childQueues_ = Collections.emptyList();
                this.applications_ = Collections.emptyList();
                this.accessibleNodeLabels_ = LazyStringArrayList.EMPTY;
                this.defaultNodeLabelExpression_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (QueueInfoProto.alwaysUseFieldBuilders) {
                    this.getChildQueuesFieldBuilder();
                    this.getApplicationsFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.queueName_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.capacity_ = 0.0f;
                this.bitField0_ &= 0xFFFFFFFD;
                this.maximumCapacity_ = 0.0f;
                this.bitField0_ &= 0xFFFFFFFB;
                this.currentCapacity_ = 0.0f;
                this.bitField0_ &= 0xFFFFFFF7;
                this.state_ = QueueStateProto.Q_STOPPED;
                this.bitField0_ &= 0xFFFFFFEF;
                if (this.childQueuesBuilder_ == null) {
                    this.childQueues_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFDF;
                }
                else {
                    this.childQueuesBuilder_.clear();
                }
                if (this.applicationsBuilder_ == null) {
                    this.applications_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFBF;
                }
                else {
                    this.applicationsBuilder_.clear();
                }
                this.accessibleNodeLabels_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFF7F;
                this.defaultNodeLabelExpression_ = "";
                this.bitField0_ &= 0xFFFFFEFF;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_QueueInfoProto_descriptor;
            }
            
            @Override
            public QueueInfoProto getDefaultInstanceForType() {
                return QueueInfoProto.getDefaultInstance();
            }
            
            @Override
            public QueueInfoProto build() {
                final QueueInfoProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public QueueInfoProto buildPartial() {
                final QueueInfoProto result = new QueueInfoProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.queueName_ = this.queueName_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.capacity_ = this.capacity_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.maximumCapacity_ = this.maximumCapacity_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.currentCapacity_ = this.currentCapacity_;
                if ((from_bitField0_ & 0x10) == 0x10) {
                    to_bitField0_ |= 0x10;
                }
                result.state_ = this.state_;
                if (this.childQueuesBuilder_ == null) {
                    if ((this.bitField0_ & 0x20) == 0x20) {
                        this.childQueues_ = Collections.unmodifiableList((List<? extends QueueInfoProto>)this.childQueues_);
                        this.bitField0_ &= 0xFFFFFFDF;
                    }
                    result.childQueues_ = this.childQueues_;
                }
                else {
                    result.childQueues_ = this.childQueuesBuilder_.build();
                }
                if (this.applicationsBuilder_ == null) {
                    if ((this.bitField0_ & 0x40) == 0x40) {
                        this.applications_ = Collections.unmodifiableList((List<? extends ApplicationReportProto>)this.applications_);
                        this.bitField0_ &= 0xFFFFFFBF;
                    }
                    result.applications_ = this.applications_;
                }
                else {
                    result.applications_ = this.applicationsBuilder_.build();
                }
                if ((this.bitField0_ & 0x80) == 0x80) {
                    this.accessibleNodeLabels_ = new UnmodifiableLazyStringList(this.accessibleNodeLabels_);
                    this.bitField0_ &= 0xFFFFFF7F;
                }
                result.accessibleNodeLabels_ = this.accessibleNodeLabels_;
                if ((from_bitField0_ & 0x100) == 0x100) {
                    to_bitField0_ |= 0x20;
                }
                result.defaultNodeLabelExpression_ = this.defaultNodeLabelExpression_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof QueueInfoProto) {
                    return this.mergeFrom((QueueInfoProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final QueueInfoProto other) {
                if (other == QueueInfoProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasQueueName()) {
                    this.bitField0_ |= 0x1;
                    this.queueName_ = other.queueName_;
                    this.onChanged();
                }
                if (other.hasCapacity()) {
                    this.setCapacity(other.getCapacity());
                }
                if (other.hasMaximumCapacity()) {
                    this.setMaximumCapacity(other.getMaximumCapacity());
                }
                if (other.hasCurrentCapacity()) {
                    this.setCurrentCapacity(other.getCurrentCapacity());
                }
                if (other.hasState()) {
                    this.setState(other.getState());
                }
                if (this.childQueuesBuilder_ == null) {
                    if (!other.childQueues_.isEmpty()) {
                        if (this.childQueues_.isEmpty()) {
                            this.childQueues_ = other.childQueues_;
                            this.bitField0_ &= 0xFFFFFFDF;
                        }
                        else {
                            this.ensureChildQueuesIsMutable();
                            this.childQueues_.addAll(other.childQueues_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.childQueues_.isEmpty()) {
                    if (this.childQueuesBuilder_.isEmpty()) {
                        this.childQueuesBuilder_.dispose();
                        this.childQueuesBuilder_ = null;
                        this.childQueues_ = other.childQueues_;
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.childQueuesBuilder_ = (QueueInfoProto.alwaysUseFieldBuilders ? this.getChildQueuesFieldBuilder() : null);
                    }
                    else {
                        this.childQueuesBuilder_.addAllMessages(other.childQueues_);
                    }
                }
                if (this.applicationsBuilder_ == null) {
                    if (!other.applications_.isEmpty()) {
                        if (this.applications_.isEmpty()) {
                            this.applications_ = other.applications_;
                            this.bitField0_ &= 0xFFFFFFBF;
                        }
                        else {
                            this.ensureApplicationsIsMutable();
                            this.applications_.addAll(other.applications_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.applications_.isEmpty()) {
                    if (this.applicationsBuilder_.isEmpty()) {
                        this.applicationsBuilder_.dispose();
                        this.applicationsBuilder_ = null;
                        this.applications_ = other.applications_;
                        this.bitField0_ &= 0xFFFFFFBF;
                        this.applicationsBuilder_ = (QueueInfoProto.alwaysUseFieldBuilders ? this.getApplicationsFieldBuilder() : null);
                    }
                    else {
                        this.applicationsBuilder_.addAllMessages(other.applications_);
                    }
                }
                if (!other.accessibleNodeLabels_.isEmpty()) {
                    if (this.accessibleNodeLabels_.isEmpty()) {
                        this.accessibleNodeLabels_ = other.accessibleNodeLabels_;
                        this.bitField0_ &= 0xFFFFFF7F;
                    }
                    else {
                        this.ensureAccessibleNodeLabelsIsMutable();
                        this.accessibleNodeLabels_.addAll(other.accessibleNodeLabels_);
                    }
                    this.onChanged();
                }
                if (other.hasDefaultNodeLabelExpression()) {
                    this.bitField0_ |= 0x100;
                    this.defaultNodeLabelExpression_ = other.defaultNodeLabelExpression_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                for (int i = 0; i < this.getChildQueuesCount(); ++i) {
                    if (!this.getChildQueues(i).isInitialized()) {
                        return false;
                    }
                }
                for (int i = 0; i < this.getApplicationsCount(); ++i) {
                    if (!this.getApplications(i).isInitialized()) {
                        return false;
                    }
                }
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                QueueInfoProto parsedMessage = null;
                try {
                    parsedMessage = QueueInfoProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (QueueInfoProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasQueueName() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getQueueName() {
                final Object ref = this.queueName_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.queueName_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getQueueNameBytes() {
                final Object ref = this.queueName_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.queueName_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setQueueName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.queueName_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearQueueName() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.queueName_ = QueueInfoProto.getDefaultInstance().getQueueName();
                this.onChanged();
                return this;
            }
            
            public Builder setQueueNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.queueName_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasCapacity() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public float getCapacity() {
                return this.capacity_;
            }
            
            public Builder setCapacity(final float value) {
                this.bitField0_ |= 0x2;
                this.capacity_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearCapacity() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.capacity_ = 0.0f;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasMaximumCapacity() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public float getMaximumCapacity() {
                return this.maximumCapacity_;
            }
            
            public Builder setMaximumCapacity(final float value) {
                this.bitField0_ |= 0x4;
                this.maximumCapacity_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearMaximumCapacity() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.maximumCapacity_ = 0.0f;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasCurrentCapacity() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public float getCurrentCapacity() {
                return this.currentCapacity_;
            }
            
            public Builder setCurrentCapacity(final float value) {
                this.bitField0_ |= 0x8;
                this.currentCapacity_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearCurrentCapacity() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.currentCapacity_ = 0.0f;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasState() {
                return (this.bitField0_ & 0x10) == 0x10;
            }
            
            @Override
            public QueueStateProto getState() {
                return this.state_;
            }
            
            public Builder setState(final QueueStateProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x10;
                this.state_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearState() {
                this.bitField0_ &= 0xFFFFFFEF;
                this.state_ = QueueStateProto.Q_STOPPED;
                this.onChanged();
                return this;
            }
            
            private void ensureChildQueuesIsMutable() {
                if ((this.bitField0_ & 0x20) != 0x20) {
                    this.childQueues_ = new ArrayList<QueueInfoProto>(this.childQueues_);
                    this.bitField0_ |= 0x20;
                }
            }
            
            @Override
            public List<QueueInfoProto> getChildQueuesList() {
                if (this.childQueuesBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends QueueInfoProto>)this.childQueues_);
                }
                return this.childQueuesBuilder_.getMessageList();
            }
            
            @Override
            public int getChildQueuesCount() {
                if (this.childQueuesBuilder_ == null) {
                    return this.childQueues_.size();
                }
                return this.childQueuesBuilder_.getCount();
            }
            
            @Override
            public QueueInfoProto getChildQueues(final int index) {
                if (this.childQueuesBuilder_ == null) {
                    return this.childQueues_.get(index);
                }
                return this.childQueuesBuilder_.getMessage(index);
            }
            
            public Builder setChildQueues(final int index, final QueueInfoProto value) {
                if (this.childQueuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureChildQueuesIsMutable();
                    this.childQueues_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setChildQueues(final int index, final Builder builderForValue) {
                if (this.childQueuesBuilder_ == null) {
                    this.ensureChildQueuesIsMutable();
                    this.childQueues_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addChildQueues(final QueueInfoProto value) {
                if (this.childQueuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureChildQueuesIsMutable();
                    this.childQueues_.add(value);
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addChildQueues(final int index, final QueueInfoProto value) {
                if (this.childQueuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureChildQueuesIsMutable();
                    this.childQueues_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addChildQueues(final Builder builderForValue) {
                if (this.childQueuesBuilder_ == null) {
                    this.ensureChildQueuesIsMutable();
                    this.childQueues_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addChildQueues(final int index, final Builder builderForValue) {
                if (this.childQueuesBuilder_ == null) {
                    this.ensureChildQueuesIsMutable();
                    this.childQueues_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllChildQueues(final Iterable<? extends QueueInfoProto> values) {
                if (this.childQueuesBuilder_ == null) {
                    this.ensureChildQueuesIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.childQueues_);
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearChildQueues() {
                if (this.childQueuesBuilder_ == null) {
                    this.childQueues_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeChildQueues(final int index) {
                if (this.childQueuesBuilder_ == null) {
                    this.ensureChildQueuesIsMutable();
                    this.childQueues_.remove(index);
                    this.onChanged();
                }
                else {
                    this.childQueuesBuilder_.remove(index);
                }
                return this;
            }
            
            public Builder getChildQueuesBuilder(final int index) {
                return this.getChildQueuesFieldBuilder().getBuilder(index);
            }
            
            @Override
            public QueueInfoProtoOrBuilder getChildQueuesOrBuilder(final int index) {
                if (this.childQueuesBuilder_ == null) {
                    return this.childQueues_.get(index);
                }
                return this.childQueuesBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends QueueInfoProtoOrBuilder> getChildQueuesOrBuilderList() {
                if (this.childQueuesBuilder_ != null) {
                    return this.childQueuesBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends QueueInfoProtoOrBuilder>)this.childQueues_);
            }
            
            public Builder addChildQueuesBuilder() {
                return this.getChildQueuesFieldBuilder().addBuilder(QueueInfoProto.getDefaultInstance());
            }
            
            public Builder addChildQueuesBuilder(final int index) {
                return this.getChildQueuesFieldBuilder().addBuilder(index, QueueInfoProto.getDefaultInstance());
            }
            
            public List<Builder> getChildQueuesBuilderList() {
                return this.getChildQueuesFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<QueueInfoProto, Builder, QueueInfoProtoOrBuilder> getChildQueuesFieldBuilder() {
                if (this.childQueuesBuilder_ == null) {
                    this.childQueuesBuilder_ = new RepeatedFieldBuilder<QueueInfoProto, Builder, QueueInfoProtoOrBuilder>(this.childQueues_, (this.bitField0_ & 0x20) == 0x20, this.getParentForChildren(), this.isClean());
                    this.childQueues_ = null;
                }
                return this.childQueuesBuilder_;
            }
            
            private void ensureApplicationsIsMutable() {
                if ((this.bitField0_ & 0x40) != 0x40) {
                    this.applications_ = new ArrayList<ApplicationReportProto>(this.applications_);
                    this.bitField0_ |= 0x40;
                }
            }
            
            @Override
            public List<ApplicationReportProto> getApplicationsList() {
                if (this.applicationsBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends ApplicationReportProto>)this.applications_);
                }
                return this.applicationsBuilder_.getMessageList();
            }
            
            @Override
            public int getApplicationsCount() {
                if (this.applicationsBuilder_ == null) {
                    return this.applications_.size();
                }
                return this.applicationsBuilder_.getCount();
            }
            
            @Override
            public ApplicationReportProto getApplications(final int index) {
                if (this.applicationsBuilder_ == null) {
                    return this.applications_.get(index);
                }
                return this.applicationsBuilder_.getMessage(index);
            }
            
            public Builder setApplications(final int index, final ApplicationReportProto value) {
                if (this.applicationsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureApplicationsIsMutable();
                    this.applications_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setApplications(final int index, final ApplicationReportProto.Builder builderForValue) {
                if (this.applicationsBuilder_ == null) {
                    this.ensureApplicationsIsMutable();
                    this.applications_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addApplications(final ApplicationReportProto value) {
                if (this.applicationsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureApplicationsIsMutable();
                    this.applications_.add(value);
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addApplications(final int index, final ApplicationReportProto value) {
                if (this.applicationsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureApplicationsIsMutable();
                    this.applications_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addApplications(final ApplicationReportProto.Builder builderForValue) {
                if (this.applicationsBuilder_ == null) {
                    this.ensureApplicationsIsMutable();
                    this.applications_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addApplications(final int index, final ApplicationReportProto.Builder builderForValue) {
                if (this.applicationsBuilder_ == null) {
                    this.ensureApplicationsIsMutable();
                    this.applications_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllApplications(final Iterable<? extends ApplicationReportProto> values) {
                if (this.applicationsBuilder_ == null) {
                    this.ensureApplicationsIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.applications_);
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearApplications() {
                if (this.applicationsBuilder_ == null) {
                    this.applications_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFBF;
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeApplications(final int index) {
                if (this.applicationsBuilder_ == null) {
                    this.ensureApplicationsIsMutable();
                    this.applications_.remove(index);
                    this.onChanged();
                }
                else {
                    this.applicationsBuilder_.remove(index);
                }
                return this;
            }
            
            public ApplicationReportProto.Builder getApplicationsBuilder(final int index) {
                return this.getApplicationsFieldBuilder().getBuilder(index);
            }
            
            @Override
            public ApplicationReportProtoOrBuilder getApplicationsOrBuilder(final int index) {
                if (this.applicationsBuilder_ == null) {
                    return this.applications_.get(index);
                }
                return this.applicationsBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends ApplicationReportProtoOrBuilder> getApplicationsOrBuilderList() {
                if (this.applicationsBuilder_ != null) {
                    return this.applicationsBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends ApplicationReportProtoOrBuilder>)this.applications_);
            }
            
            public ApplicationReportProto.Builder addApplicationsBuilder() {
                return this.getApplicationsFieldBuilder().addBuilder(ApplicationReportProto.getDefaultInstance());
            }
            
            public ApplicationReportProto.Builder addApplicationsBuilder(final int index) {
                return this.getApplicationsFieldBuilder().addBuilder(index, ApplicationReportProto.getDefaultInstance());
            }
            
            public List<ApplicationReportProto.Builder> getApplicationsBuilderList() {
                return this.getApplicationsFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<ApplicationReportProto, ApplicationReportProto.Builder, ApplicationReportProtoOrBuilder> getApplicationsFieldBuilder() {
                if (this.applicationsBuilder_ == null) {
                    this.applicationsBuilder_ = new RepeatedFieldBuilder<ApplicationReportProto, ApplicationReportProto.Builder, ApplicationReportProtoOrBuilder>(this.applications_, (this.bitField0_ & 0x40) == 0x40, this.getParentForChildren(), this.isClean());
                    this.applications_ = null;
                }
                return this.applicationsBuilder_;
            }
            
            private void ensureAccessibleNodeLabelsIsMutable() {
                if ((this.bitField0_ & 0x80) != 0x80) {
                    this.accessibleNodeLabels_ = new LazyStringArrayList(this.accessibleNodeLabels_);
                    this.bitField0_ |= 0x80;
                }
            }
            
            @Override
            public List<String> getAccessibleNodeLabelsList() {
                return Collections.unmodifiableList((List<? extends String>)this.accessibleNodeLabels_);
            }
            
            @Override
            public int getAccessibleNodeLabelsCount() {
                return this.accessibleNodeLabels_.size();
            }
            
            @Override
            public String getAccessibleNodeLabels(final int index) {
                return this.accessibleNodeLabels_.get(index);
            }
            
            @Override
            public ByteString getAccessibleNodeLabelsBytes(final int index) {
                return this.accessibleNodeLabels_.getByteString(index);
            }
            
            public Builder setAccessibleNodeLabels(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureAccessibleNodeLabelsIsMutable();
                this.accessibleNodeLabels_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addAccessibleNodeLabels(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureAccessibleNodeLabelsIsMutable();
                this.accessibleNodeLabels_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllAccessibleNodeLabels(final Iterable<String> values) {
                this.ensureAccessibleNodeLabelsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.accessibleNodeLabels_);
                this.onChanged();
                return this;
            }
            
            public Builder clearAccessibleNodeLabels() {
                this.accessibleNodeLabels_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFF7F;
                this.onChanged();
                return this;
            }
            
            public Builder addAccessibleNodeLabelsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureAccessibleNodeLabelsIsMutable();
                this.accessibleNodeLabels_.add(value);
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasDefaultNodeLabelExpression() {
                return (this.bitField0_ & 0x100) == 0x100;
            }
            
            @Override
            public String getDefaultNodeLabelExpression() {
                final Object ref = this.defaultNodeLabelExpression_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.defaultNodeLabelExpression_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getDefaultNodeLabelExpressionBytes() {
                final Object ref = this.defaultNodeLabelExpression_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.defaultNodeLabelExpression_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setDefaultNodeLabelExpression(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x100;
                this.defaultNodeLabelExpression_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearDefaultNodeLabelExpression() {
                this.bitField0_ &= 0xFFFFFEFF;
                this.defaultNodeLabelExpression_ = QueueInfoProto.getDefaultInstance().getDefaultNodeLabelExpression();
                this.onChanged();
                return this;
            }
            
            public Builder setDefaultNodeLabelExpressionBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x100;
                this.defaultNodeLabelExpression_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class QueueUserACLInfoProto extends GeneratedMessage implements QueueUserACLInfoProtoOrBuilder
    {
        private static final QueueUserACLInfoProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<QueueUserACLInfoProto> PARSER;
        private int bitField0_;
        public static final int QUEUENAME_FIELD_NUMBER = 1;
        private Object queueName_;
        public static final int USERACLS_FIELD_NUMBER = 2;
        private List<QueueACLProto> userAcls_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private QueueUserACLInfoProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private QueueUserACLInfoProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static QueueUserACLInfoProto getDefaultInstance() {
            return QueueUserACLInfoProto.defaultInstance;
        }
        
        @Override
        public QueueUserACLInfoProto getDefaultInstanceForType() {
            return QueueUserACLInfoProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private QueueUserACLInfoProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.queueName_ = input.readBytes();
                            continue;
                        }
                        case 16: {
                            final int rawValue = input.readEnum();
                            final QueueACLProto value = QueueACLProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                                continue;
                            }
                            if ((mutable_bitField0_ & 0x2) != 0x2) {
                                this.userAcls_ = new ArrayList<QueueACLProto>();
                                mutable_bitField0_ |= 0x2;
                            }
                            this.userAcls_.add(value);
                            continue;
                        }
                        case 18: {
                            final int length = input.readRawVarint32();
                            final int oldLimit = input.pushLimit(length);
                            while (input.getBytesUntilLimit() > 0) {
                                final int rawValue2 = input.readEnum();
                                final QueueACLProto value2 = QueueACLProto.valueOf(rawValue2);
                                if (value2 == null) {
                                    unknownFields.mergeVarintField(2, rawValue2);
                                }
                                else {
                                    if ((mutable_bitField0_ & 0x2) != 0x2) {
                                        this.userAcls_ = new ArrayList<QueueACLProto>();
                                        mutable_bitField0_ |= 0x2;
                                    }
                                    this.userAcls_.add(value2);
                                }
                            }
                            input.popLimit(oldLimit);
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x2) == 0x2) {
                    this.userAcls_ = Collections.unmodifiableList((List<? extends QueueACLProto>)this.userAcls_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_fieldAccessorTable.ensureFieldAccessorsInitialized(QueueUserACLInfoProto.class, Builder.class);
        }
        
        @Override
        public Parser<QueueUserACLInfoProto> getParserForType() {
            return QueueUserACLInfoProto.PARSER;
        }
        
        @Override
        public boolean hasQueueName() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getQueueName() {
            final Object ref = this.queueName_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.queueName_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getQueueNameBytes() {
            final Object ref = this.queueName_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.queueName_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public List<QueueACLProto> getUserAclsList() {
            return this.userAcls_;
        }
        
        @Override
        public int getUserAclsCount() {
            return this.userAcls_.size();
        }
        
        @Override
        public QueueACLProto getUserAcls(final int index) {
            return this.userAcls_.get(index);
        }
        
        private void initFields() {
            this.queueName_ = "";
            this.userAcls_ = Collections.emptyList();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getQueueNameBytes());
            }
            for (int i = 0; i < this.userAcls_.size(); ++i) {
                output.writeEnum(2, this.userAcls_.get(i).getNumber());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getQueueNameBytes());
            }
            int dataSize = 0;
            for (int i = 0; i < this.userAcls_.size(); ++i) {
                dataSize += CodedOutputStream.computeEnumSizeNoTag(this.userAcls_.get(i).getNumber());
            }
            size += dataSize;
            size += 1 * this.userAcls_.size();
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof QueueUserACLInfoProto)) {
                return super.equals(obj);
            }
            final QueueUserACLInfoProto other = (QueueUserACLInfoProto)obj;
            boolean result = true;
            result = (result && this.hasQueueName() == other.hasQueueName());
            if (this.hasQueueName()) {
                result = (result && this.getQueueName().equals(other.getQueueName()));
            }
            result = (result && this.getUserAclsList().equals(other.getUserAclsList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasQueueName()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getQueueName().hashCode();
            }
            if (this.getUserAclsCount() > 0) {
                hash = 37 * hash + 2;
                hash = 53 * hash + AbstractMessage.hashEnumList(this.getUserAclsList());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static QueueUserACLInfoProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return QueueUserACLInfoProto.PARSER.parseFrom(data);
        }
        
        public static QueueUserACLInfoProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return QueueUserACLInfoProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static QueueUserACLInfoProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return QueueUserACLInfoProto.PARSER.parseFrom(data);
        }
        
        public static QueueUserACLInfoProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return QueueUserACLInfoProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static QueueUserACLInfoProto parseFrom(final InputStream input) throws IOException {
            return QueueUserACLInfoProto.PARSER.parseFrom(input);
        }
        
        public static QueueUserACLInfoProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return QueueUserACLInfoProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static QueueUserACLInfoProto parseDelimitedFrom(final InputStream input) throws IOException {
            return QueueUserACLInfoProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static QueueUserACLInfoProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return QueueUserACLInfoProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static QueueUserACLInfoProto parseFrom(final CodedInputStream input) throws IOException {
            return QueueUserACLInfoProto.PARSER.parseFrom(input);
        }
        
        public static QueueUserACLInfoProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return QueueUserACLInfoProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final QueueUserACLInfoProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            QueueUserACLInfoProto.PARSER = new AbstractParser<QueueUserACLInfoProto>() {
                @Override
                public QueueUserACLInfoProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new QueueUserACLInfoProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new QueueUserACLInfoProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements QueueUserACLInfoProtoOrBuilder
        {
            private int bitField0_;
            private Object queueName_;
            private List<QueueACLProto> userAcls_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_fieldAccessorTable.ensureFieldAccessorsInitialized(QueueUserACLInfoProto.class, Builder.class);
            }
            
            private Builder() {
                this.queueName_ = "";
                this.userAcls_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.queueName_ = "";
                this.userAcls_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (QueueUserACLInfoProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.queueName_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.userAcls_ = Collections.emptyList();
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_QueueUserACLInfoProto_descriptor;
            }
            
            @Override
            public QueueUserACLInfoProto getDefaultInstanceForType() {
                return QueueUserACLInfoProto.getDefaultInstance();
            }
            
            @Override
            public QueueUserACLInfoProto build() {
                final QueueUserACLInfoProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public QueueUserACLInfoProto buildPartial() {
                final QueueUserACLInfoProto result = new QueueUserACLInfoProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.queueName_ = this.queueName_;
                if ((this.bitField0_ & 0x2) == 0x2) {
                    this.userAcls_ = Collections.unmodifiableList((List<? extends QueueACLProto>)this.userAcls_);
                    this.bitField0_ &= 0xFFFFFFFD;
                }
                result.userAcls_ = this.userAcls_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof QueueUserACLInfoProto) {
                    return this.mergeFrom((QueueUserACLInfoProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final QueueUserACLInfoProto other) {
                if (other == QueueUserACLInfoProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasQueueName()) {
                    this.bitField0_ |= 0x1;
                    this.queueName_ = other.queueName_;
                    this.onChanged();
                }
                if (!other.userAcls_.isEmpty()) {
                    if (this.userAcls_.isEmpty()) {
                        this.userAcls_ = other.userAcls_;
                        this.bitField0_ &= 0xFFFFFFFD;
                    }
                    else {
                        this.ensureUserAclsIsMutable();
                        this.userAcls_.addAll(other.userAcls_);
                    }
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                QueueUserACLInfoProto parsedMessage = null;
                try {
                    parsedMessage = QueueUserACLInfoProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (QueueUserACLInfoProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasQueueName() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getQueueName() {
                final Object ref = this.queueName_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.queueName_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getQueueNameBytes() {
                final Object ref = this.queueName_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.queueName_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setQueueName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.queueName_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearQueueName() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.queueName_ = QueueUserACLInfoProto.getDefaultInstance().getQueueName();
                this.onChanged();
                return this;
            }
            
            public Builder setQueueNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.queueName_ = value;
                this.onChanged();
                return this;
            }
            
            private void ensureUserAclsIsMutable() {
                if ((this.bitField0_ & 0x2) != 0x2) {
                    this.userAcls_ = new ArrayList<QueueACLProto>(this.userAcls_);
                    this.bitField0_ |= 0x2;
                }
            }
            
            @Override
            public List<QueueACLProto> getUserAclsList() {
                return Collections.unmodifiableList((List<? extends QueueACLProto>)this.userAcls_);
            }
            
            @Override
            public int getUserAclsCount() {
                return this.userAcls_.size();
            }
            
            @Override
            public QueueACLProto getUserAcls(final int index) {
                return this.userAcls_.get(index);
            }
            
            public Builder setUserAcls(final int index, final QueueACLProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureUserAclsIsMutable();
                this.userAcls_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addUserAcls(final QueueACLProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureUserAclsIsMutable();
                this.userAcls_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllUserAcls(final Iterable<? extends QueueACLProto> values) {
                this.ensureUserAclsIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.userAcls_);
                this.onChanged();
                return this;
            }
            
            public Builder clearUserAcls() {
                this.userAcls_ = Collections.emptyList();
                this.bitField0_ &= 0xFFFFFFFD;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ReservationIdProto extends GeneratedMessage implements ReservationIdProtoOrBuilder
    {
        private static final ReservationIdProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ReservationIdProto> PARSER;
        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private long id_;
        public static final int CLUSTER_TIMESTAMP_FIELD_NUMBER = 2;
        private long clusterTimestamp_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ReservationIdProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ReservationIdProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ReservationIdProto getDefaultInstance() {
            return ReservationIdProto.defaultInstance;
        }
        
        @Override
        public ReservationIdProto getDefaultInstanceForType() {
            return ReservationIdProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ReservationIdProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 8: {
                            this.bitField0_ |= 0x1;
                            this.id_ = input.readInt64();
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.clusterTimestamp_ = input.readInt64();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationIdProto.class, Builder.class);
        }
        
        @Override
        public Parser<ReservationIdProto> getParserForType() {
            return ReservationIdProto.PARSER;
        }
        
        @Override
        public boolean hasId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public long getId() {
            return this.id_;
        }
        
        @Override
        public boolean hasClusterTimestamp() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public long getClusterTimestamp() {
            return this.clusterTimestamp_;
        }
        
        private void initFields() {
            this.id_ = 0L;
            this.clusterTimestamp_ = 0L;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeInt64(1, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt64(2, this.clusterTimestamp_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeInt64Size(1, this.id_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt64Size(2, this.clusterTimestamp_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ReservationIdProto)) {
                return super.equals(obj);
            }
            final ReservationIdProto other = (ReservationIdProto)obj;
            boolean result = true;
            result = (result && this.hasId() == other.hasId());
            if (this.hasId()) {
                result = (result && this.getId() == other.getId());
            }
            result = (result && this.hasClusterTimestamp() == other.hasClusterTimestamp());
            if (this.hasClusterTimestamp()) {
                result = (result && this.getClusterTimestamp() == other.getClusterTimestamp());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + AbstractMessage.hashLong(this.getId());
            }
            if (this.hasClusterTimestamp()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + AbstractMessage.hashLong(this.getClusterTimestamp());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ReservationIdProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ReservationIdProto.PARSER.parseFrom(data);
        }
        
        public static ReservationIdProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationIdProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ReservationIdProto.PARSER.parseFrom(data);
        }
        
        public static ReservationIdProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationIdProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationIdProto parseFrom(final InputStream input) throws IOException {
            return ReservationIdProto.PARSER.parseFrom(input);
        }
        
        public static ReservationIdProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ReservationIdProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ReservationIdProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ReservationIdProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationIdProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ReservationIdProto parseFrom(final CodedInputStream input) throws IOException {
            return ReservationIdProto.PARSER.parseFrom(input);
        }
        
        public static ReservationIdProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationIdProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ReservationIdProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ReservationIdProto.PARSER = new AbstractParser<ReservationIdProto>() {
                @Override
                public ReservationIdProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ReservationIdProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ReservationIdProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ReservationIdProtoOrBuilder
        {
            private int bitField0_;
            private long id_;
            private long clusterTimestamp_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationIdProto.class, Builder.class);
            }
            
            private Builder() {
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ReservationIdProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.id_ = 0L;
                this.bitField0_ &= 0xFFFFFFFE;
                this.clusterTimestamp_ = 0L;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationIdProto_descriptor;
            }
            
            @Override
            public ReservationIdProto getDefaultInstanceForType() {
                return ReservationIdProto.getDefaultInstance();
            }
            
            @Override
            public ReservationIdProto build() {
                final ReservationIdProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ReservationIdProto buildPartial() {
                final ReservationIdProto result = new ReservationIdProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.id_ = this.id_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.clusterTimestamp_ = this.clusterTimestamp_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ReservationIdProto) {
                    return this.mergeFrom((ReservationIdProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ReservationIdProto other) {
                if (other == ReservationIdProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasId()) {
                    this.setId(other.getId());
                }
                if (other.hasClusterTimestamp()) {
                    this.setClusterTimestamp(other.getClusterTimestamp());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ReservationIdProto parsedMessage = null;
                try {
                    parsedMessage = ReservationIdProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ReservationIdProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public long getId() {
                return this.id_;
            }
            
            public Builder setId(final long value) {
                this.bitField0_ |= 0x1;
                this.id_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearId() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.id_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasClusterTimestamp() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public long getClusterTimestamp() {
                return this.clusterTimestamp_;
            }
            
            public Builder setClusterTimestamp(final long value) {
                this.bitField0_ |= 0x2;
                this.clusterTimestamp_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearClusterTimestamp() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.clusterTimestamp_ = 0L;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ReservationRequestProto extends GeneratedMessage implements ReservationRequestProtoOrBuilder
    {
        private static final ReservationRequestProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ReservationRequestProto> PARSER;
        private int bitField0_;
        public static final int CAPABILITY_FIELD_NUMBER = 1;
        private ResourceProto capability_;
        public static final int NUM_CONTAINERS_FIELD_NUMBER = 2;
        private int numContainers_;
        public static final int CONCURRENCY_FIELD_NUMBER = 3;
        private int concurrency_;
        public static final int DURATION_FIELD_NUMBER = 4;
        private long duration_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ReservationRequestProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ReservationRequestProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ReservationRequestProto getDefaultInstance() {
            return ReservationRequestProto.defaultInstance;
        }
        
        @Override
        public ReservationRequestProto getDefaultInstanceForType() {
            return ReservationRequestProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ReservationRequestProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ResourceProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.capability_.toBuilder();
                            }
                            this.capability_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.capability_);
                                this.capability_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.numContainers_ = input.readInt32();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x4;
                            this.concurrency_ = input.readInt32();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x8;
                            this.duration_ = input.readInt64();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationRequestProto.class, Builder.class);
        }
        
        @Override
        public Parser<ReservationRequestProto> getParserForType() {
            return ReservationRequestProto.PARSER;
        }
        
        @Override
        public boolean hasCapability() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ResourceProto getCapability() {
            return this.capability_;
        }
        
        @Override
        public ResourceProtoOrBuilder getCapabilityOrBuilder() {
            return this.capability_;
        }
        
        @Override
        public boolean hasNumContainers() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public int getNumContainers() {
            return this.numContainers_;
        }
        
        @Override
        public boolean hasConcurrency() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public int getConcurrency() {
            return this.concurrency_;
        }
        
        @Override
        public boolean hasDuration() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public long getDuration() {
            return this.duration_;
        }
        
        private void initFields() {
            this.capability_ = ResourceProto.getDefaultInstance();
            this.numContainers_ = 1;
            this.concurrency_ = 1;
            this.duration_ = -1L;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.capability_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt32(2, this.numContainers_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeInt32(3, this.concurrency_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeInt64(4, this.duration_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.capability_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt32Size(2, this.numContainers_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeInt32Size(3, this.concurrency_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeInt64Size(4, this.duration_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ReservationRequestProto)) {
                return super.equals(obj);
            }
            final ReservationRequestProto other = (ReservationRequestProto)obj;
            boolean result = true;
            result = (result && this.hasCapability() == other.hasCapability());
            if (this.hasCapability()) {
                result = (result && this.getCapability().equals(other.getCapability()));
            }
            result = (result && this.hasNumContainers() == other.hasNumContainers());
            if (this.hasNumContainers()) {
                result = (result && this.getNumContainers() == other.getNumContainers());
            }
            result = (result && this.hasConcurrency() == other.hasConcurrency());
            if (this.hasConcurrency()) {
                result = (result && this.getConcurrency() == other.getConcurrency());
            }
            result = (result && this.hasDuration() == other.hasDuration());
            if (this.hasDuration()) {
                result = (result && this.getDuration() == other.getDuration());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasCapability()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getCapability().hashCode();
            }
            if (this.hasNumContainers()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getNumContainers();
            }
            if (this.hasConcurrency()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getConcurrency();
            }
            if (this.hasDuration()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + AbstractMessage.hashLong(this.getDuration());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ReservationRequestProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ReservationRequestProto.PARSER.parseFrom(data);
        }
        
        public static ReservationRequestProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationRequestProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ReservationRequestProto.PARSER.parseFrom(data);
        }
        
        public static ReservationRequestProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationRequestProto parseFrom(final InputStream input) throws IOException {
            return ReservationRequestProto.PARSER.parseFrom(input);
        }
        
        public static ReservationRequestProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ReservationRequestProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ReservationRequestProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ReservationRequestProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationRequestProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ReservationRequestProto parseFrom(final CodedInputStream input) throws IOException {
            return ReservationRequestProto.PARSER.parseFrom(input);
        }
        
        public static ReservationRequestProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ReservationRequestProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ReservationRequestProto.PARSER = new AbstractParser<ReservationRequestProto>() {
                @Override
                public ReservationRequestProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ReservationRequestProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ReservationRequestProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ReservationRequestProtoOrBuilder
        {
            private int bitField0_;
            private ResourceProto capability_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> capabilityBuilder_;
            private int numContainers_;
            private int concurrency_;
            private long duration_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationRequestProto.class, Builder.class);
            }
            
            private Builder() {
                this.capability_ = ResourceProto.getDefaultInstance();
                this.numContainers_ = 1;
                this.concurrency_ = 1;
                this.duration_ = -1L;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.capability_ = ResourceProto.getDefaultInstance();
                this.numContainers_ = 1;
                this.concurrency_ = 1;
                this.duration_ = -1L;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ReservationRequestProto.alwaysUseFieldBuilders) {
                    this.getCapabilityFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.numContainers_ = 1;
                this.bitField0_ &= 0xFFFFFFFD;
                this.concurrency_ = 1;
                this.bitField0_ &= 0xFFFFFFFB;
                this.duration_ = -1L;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationRequestProto_descriptor;
            }
            
            @Override
            public ReservationRequestProto getDefaultInstanceForType() {
                return ReservationRequestProto.getDefaultInstance();
            }
            
            @Override
            public ReservationRequestProto build() {
                final ReservationRequestProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ReservationRequestProto buildPartial() {
                final ReservationRequestProto result = new ReservationRequestProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.capabilityBuilder_ == null) {
                    result.capability_ = this.capability_;
                }
                else {
                    result.capability_ = this.capabilityBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.numContainers_ = this.numContainers_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.concurrency_ = this.concurrency_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.duration_ = this.duration_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ReservationRequestProto) {
                    return this.mergeFrom((ReservationRequestProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ReservationRequestProto other) {
                if (other == ReservationRequestProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasCapability()) {
                    this.mergeCapability(other.getCapability());
                }
                if (other.hasNumContainers()) {
                    this.setNumContainers(other.getNumContainers());
                }
                if (other.hasConcurrency()) {
                    this.setConcurrency(other.getConcurrency());
                }
                if (other.hasDuration()) {
                    this.setDuration(other.getDuration());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ReservationRequestProto parsedMessage = null;
                try {
                    parsedMessage = ReservationRequestProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ReservationRequestProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasCapability() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ResourceProto getCapability() {
                if (this.capabilityBuilder_ == null) {
                    return this.capability_;
                }
                return this.capabilityBuilder_.getMessage();
            }
            
            public Builder setCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.capability_ = value;
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setCapability(final ResourceProto.Builder builderForValue) {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.capability_ != ResourceProto.getDefaultInstance()) {
                        this.capability_ = ResourceProto.newBuilder(this.capability_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.capability_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearCapability() {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ResourceProto.Builder getCapabilityBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getCapabilityFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getCapabilityOrBuilder() {
                if (this.capabilityBuilder_ != null) {
                    return this.capabilityBuilder_.getMessageOrBuilder();
                }
                return this.capability_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getCapabilityFieldBuilder() {
                if (this.capabilityBuilder_ == null) {
                    this.capabilityBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.capability_, this.getParentForChildren(), this.isClean());
                    this.capability_ = null;
                }
                return this.capabilityBuilder_;
            }
            
            @Override
            public boolean hasNumContainers() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public int getNumContainers() {
                return this.numContainers_;
            }
            
            public Builder setNumContainers(final int value) {
                this.bitField0_ |= 0x2;
                this.numContainers_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearNumContainers() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.numContainers_ = 1;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasConcurrency() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public int getConcurrency() {
                return this.concurrency_;
            }
            
            public Builder setConcurrency(final int value) {
                this.bitField0_ |= 0x4;
                this.concurrency_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearConcurrency() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.concurrency_ = 1;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasDuration() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public long getDuration() {
                return this.duration_;
            }
            
            public Builder setDuration(final long value) {
                this.bitField0_ |= 0x8;
                this.duration_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearDuration() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.duration_ = -1L;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ReservationRequestsProto extends GeneratedMessage implements ReservationRequestsProtoOrBuilder
    {
        private static final ReservationRequestsProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ReservationRequestsProto> PARSER;
        private int bitField0_;
        public static final int RESERVATION_RESOURCES_FIELD_NUMBER = 1;
        private List<ReservationRequestProto> reservationResources_;
        public static final int INTERPRETER_FIELD_NUMBER = 2;
        private ReservationRequestInterpreterProto interpreter_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ReservationRequestsProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ReservationRequestsProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ReservationRequestsProto getDefaultInstance() {
            return ReservationRequestsProto.defaultInstance;
        }
        
        @Override
        public ReservationRequestsProto getDefaultInstanceForType() {
            return ReservationRequestsProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ReservationRequestsProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            if ((mutable_bitField0_ & 0x1) != 0x1) {
                                this.reservationResources_ = new ArrayList<ReservationRequestProto>();
                                mutable_bitField0_ |= 0x1;
                            }
                            this.reservationResources_.add(input.readMessage(ReservationRequestProto.PARSER, extensionRegistry));
                            continue;
                        }
                        case 16: {
                            final int rawValue = input.readEnum();
                            final ReservationRequestInterpreterProto value = ReservationRequestInterpreterProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x1;
                            this.interpreter_ = value;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x1) == 0x1) {
                    this.reservationResources_ = Collections.unmodifiableList((List<? extends ReservationRequestProto>)this.reservationResources_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationRequestsProto.class, Builder.class);
        }
        
        @Override
        public Parser<ReservationRequestsProto> getParserForType() {
            return ReservationRequestsProto.PARSER;
        }
        
        @Override
        public List<ReservationRequestProto> getReservationResourcesList() {
            return this.reservationResources_;
        }
        
        @Override
        public List<? extends ReservationRequestProtoOrBuilder> getReservationResourcesOrBuilderList() {
            return this.reservationResources_;
        }
        
        @Override
        public int getReservationResourcesCount() {
            return this.reservationResources_.size();
        }
        
        @Override
        public ReservationRequestProto getReservationResources(final int index) {
            return this.reservationResources_.get(index);
        }
        
        @Override
        public ReservationRequestProtoOrBuilder getReservationResourcesOrBuilder(final int index) {
            return this.reservationResources_.get(index);
        }
        
        @Override
        public boolean hasInterpreter() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ReservationRequestInterpreterProto getInterpreter() {
            return this.interpreter_;
        }
        
        private void initFields() {
            this.reservationResources_ = Collections.emptyList();
            this.interpreter_ = ReservationRequestInterpreterProto.R_ALL;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            for (int i = 0; i < this.reservationResources_.size(); ++i) {
                output.writeMessage(1, this.reservationResources_.get(i));
            }
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeEnum(2, this.interpreter_.getNumber());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            for (int i = 0; i < this.reservationResources_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(1, this.reservationResources_.get(i));
            }
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeEnumSize(2, this.interpreter_.getNumber());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ReservationRequestsProto)) {
                return super.equals(obj);
            }
            final ReservationRequestsProto other = (ReservationRequestsProto)obj;
            boolean result = true;
            result = (result && this.getReservationResourcesList().equals(other.getReservationResourcesList()));
            result = (result && this.hasInterpreter() == other.hasInterpreter());
            if (this.hasInterpreter()) {
                result = (result && this.getInterpreter() == other.getInterpreter());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.getReservationResourcesCount() > 0) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getReservationResourcesList().hashCode();
            }
            if (this.hasInterpreter()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getInterpreter());
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ReservationRequestsProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ReservationRequestsProto.PARSER.parseFrom(data);
        }
        
        public static ReservationRequestsProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationRequestsProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationRequestsProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ReservationRequestsProto.PARSER.parseFrom(data);
        }
        
        public static ReservationRequestsProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationRequestsProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationRequestsProto parseFrom(final InputStream input) throws IOException {
            return ReservationRequestsProto.PARSER.parseFrom(input);
        }
        
        public static ReservationRequestsProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationRequestsProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ReservationRequestsProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ReservationRequestsProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ReservationRequestsProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationRequestsProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ReservationRequestsProto parseFrom(final CodedInputStream input) throws IOException {
            return ReservationRequestsProto.PARSER.parseFrom(input);
        }
        
        public static ReservationRequestsProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationRequestsProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ReservationRequestsProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ReservationRequestsProto.PARSER = new AbstractParser<ReservationRequestsProto>() {
                @Override
                public ReservationRequestsProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ReservationRequestsProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ReservationRequestsProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ReservationRequestsProtoOrBuilder
        {
            private int bitField0_;
            private List<ReservationRequestProto> reservationResources_;
            private RepeatedFieldBuilder<ReservationRequestProto, ReservationRequestProto.Builder, ReservationRequestProtoOrBuilder> reservationResourcesBuilder_;
            private ReservationRequestInterpreterProto interpreter_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationRequestsProto.class, Builder.class);
            }
            
            private Builder() {
                this.reservationResources_ = Collections.emptyList();
                this.interpreter_ = ReservationRequestInterpreterProto.R_ALL;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.reservationResources_ = Collections.emptyList();
                this.interpreter_ = ReservationRequestInterpreterProto.R_ALL;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ReservationRequestsProto.alwaysUseFieldBuilders) {
                    this.getReservationResourcesFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.reservationResourcesBuilder_ == null) {
                    this.reservationResources_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                }
                else {
                    this.reservationResourcesBuilder_.clear();
                }
                this.interpreter_ = ReservationRequestInterpreterProto.R_ALL;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationRequestsProto_descriptor;
            }
            
            @Override
            public ReservationRequestsProto getDefaultInstanceForType() {
                return ReservationRequestsProto.getDefaultInstance();
            }
            
            @Override
            public ReservationRequestsProto build() {
                final ReservationRequestsProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ReservationRequestsProto buildPartial() {
                final ReservationRequestsProto result = new ReservationRequestsProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if (this.reservationResourcesBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        this.reservationResources_ = Collections.unmodifiableList((List<? extends ReservationRequestProto>)this.reservationResources_);
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.reservationResources_ = this.reservationResources_;
                }
                else {
                    result.reservationResources_ = this.reservationResourcesBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x1;
                }
                result.interpreter_ = this.interpreter_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ReservationRequestsProto) {
                    return this.mergeFrom((ReservationRequestsProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ReservationRequestsProto other) {
                if (other == ReservationRequestsProto.getDefaultInstance()) {
                    return this;
                }
                if (this.reservationResourcesBuilder_ == null) {
                    if (!other.reservationResources_.isEmpty()) {
                        if (this.reservationResources_.isEmpty()) {
                            this.reservationResources_ = other.reservationResources_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        }
                        else {
                            this.ensureReservationResourcesIsMutable();
                            this.reservationResources_.addAll(other.reservationResources_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.reservationResources_.isEmpty()) {
                    if (this.reservationResourcesBuilder_.isEmpty()) {
                        this.reservationResourcesBuilder_.dispose();
                        this.reservationResourcesBuilder_ = null;
                        this.reservationResources_ = other.reservationResources_;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.reservationResourcesBuilder_ = (ReservationRequestsProto.alwaysUseFieldBuilders ? this.getReservationResourcesFieldBuilder() : null);
                    }
                    else {
                        this.reservationResourcesBuilder_.addAllMessages(other.reservationResources_);
                    }
                }
                if (other.hasInterpreter()) {
                    this.setInterpreter(other.getInterpreter());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ReservationRequestsProto parsedMessage = null;
                try {
                    parsedMessage = ReservationRequestsProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ReservationRequestsProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            private void ensureReservationResourcesIsMutable() {
                if ((this.bitField0_ & 0x1) != 0x1) {
                    this.reservationResources_ = new ArrayList<ReservationRequestProto>(this.reservationResources_);
                    this.bitField0_ |= 0x1;
                }
            }
            
            @Override
            public List<ReservationRequestProto> getReservationResourcesList() {
                if (this.reservationResourcesBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends ReservationRequestProto>)this.reservationResources_);
                }
                return this.reservationResourcesBuilder_.getMessageList();
            }
            
            @Override
            public int getReservationResourcesCount() {
                if (this.reservationResourcesBuilder_ == null) {
                    return this.reservationResources_.size();
                }
                return this.reservationResourcesBuilder_.getCount();
            }
            
            @Override
            public ReservationRequestProto getReservationResources(final int index) {
                if (this.reservationResourcesBuilder_ == null) {
                    return this.reservationResources_.get(index);
                }
                return this.reservationResourcesBuilder_.getMessage(index);
            }
            
            public Builder setReservationResources(final int index, final ReservationRequestProto value) {
                if (this.reservationResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureReservationResourcesIsMutable();
                    this.reservationResources_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setReservationResources(final int index, final ReservationRequestProto.Builder builderForValue) {
                if (this.reservationResourcesBuilder_ == null) {
                    this.ensureReservationResourcesIsMutable();
                    this.reservationResources_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addReservationResources(final ReservationRequestProto value) {
                if (this.reservationResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureReservationResourcesIsMutable();
                    this.reservationResources_.add(value);
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addReservationResources(final int index, final ReservationRequestProto value) {
                if (this.reservationResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureReservationResourcesIsMutable();
                    this.reservationResources_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addReservationResources(final ReservationRequestProto.Builder builderForValue) {
                if (this.reservationResourcesBuilder_ == null) {
                    this.ensureReservationResourcesIsMutable();
                    this.reservationResources_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addReservationResources(final int index, final ReservationRequestProto.Builder builderForValue) {
                if (this.reservationResourcesBuilder_ == null) {
                    this.ensureReservationResourcesIsMutable();
                    this.reservationResources_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllReservationResources(final Iterable<? extends ReservationRequestProto> values) {
                if (this.reservationResourcesBuilder_ == null) {
                    this.ensureReservationResourcesIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.reservationResources_);
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearReservationResources() {
                if (this.reservationResourcesBuilder_ == null) {
                    this.reservationResources_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeReservationResources(final int index) {
                if (this.reservationResourcesBuilder_ == null) {
                    this.ensureReservationResourcesIsMutable();
                    this.reservationResources_.remove(index);
                    this.onChanged();
                }
                else {
                    this.reservationResourcesBuilder_.remove(index);
                }
                return this;
            }
            
            public ReservationRequestProto.Builder getReservationResourcesBuilder(final int index) {
                return this.getReservationResourcesFieldBuilder().getBuilder(index);
            }
            
            @Override
            public ReservationRequestProtoOrBuilder getReservationResourcesOrBuilder(final int index) {
                if (this.reservationResourcesBuilder_ == null) {
                    return this.reservationResources_.get(index);
                }
                return this.reservationResourcesBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends ReservationRequestProtoOrBuilder> getReservationResourcesOrBuilderList() {
                if (this.reservationResourcesBuilder_ != null) {
                    return this.reservationResourcesBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends ReservationRequestProtoOrBuilder>)this.reservationResources_);
            }
            
            public ReservationRequestProto.Builder addReservationResourcesBuilder() {
                return this.getReservationResourcesFieldBuilder().addBuilder(ReservationRequestProto.getDefaultInstance());
            }
            
            public ReservationRequestProto.Builder addReservationResourcesBuilder(final int index) {
                return this.getReservationResourcesFieldBuilder().addBuilder(index, ReservationRequestProto.getDefaultInstance());
            }
            
            public List<ReservationRequestProto.Builder> getReservationResourcesBuilderList() {
                return this.getReservationResourcesFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<ReservationRequestProto, ReservationRequestProto.Builder, ReservationRequestProtoOrBuilder> getReservationResourcesFieldBuilder() {
                if (this.reservationResourcesBuilder_ == null) {
                    this.reservationResourcesBuilder_ = new RepeatedFieldBuilder<ReservationRequestProto, ReservationRequestProto.Builder, ReservationRequestProtoOrBuilder>(this.reservationResources_, (this.bitField0_ & 0x1) == 0x1, this.getParentForChildren(), this.isClean());
                    this.reservationResources_ = null;
                }
                return this.reservationResourcesBuilder_;
            }
            
            @Override
            public boolean hasInterpreter() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ReservationRequestInterpreterProto getInterpreter() {
                return this.interpreter_;
            }
            
            public Builder setInterpreter(final ReservationRequestInterpreterProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.interpreter_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearInterpreter() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.interpreter_ = ReservationRequestInterpreterProto.R_ALL;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ReservationDefinitionProto extends GeneratedMessage implements ReservationDefinitionProtoOrBuilder
    {
        private static final ReservationDefinitionProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ReservationDefinitionProto> PARSER;
        private int bitField0_;
        public static final int RESERVATION_REQUESTS_FIELD_NUMBER = 1;
        private ReservationRequestsProto reservationRequests_;
        public static final int ARRIVAL_FIELD_NUMBER = 2;
        private long arrival_;
        public static final int DEADLINE_FIELD_NUMBER = 3;
        private long deadline_;
        public static final int RESERVATION_NAME_FIELD_NUMBER = 4;
        private Object reservationName_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ReservationDefinitionProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ReservationDefinitionProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ReservationDefinitionProto getDefaultInstance() {
            return ReservationDefinitionProto.defaultInstance;
        }
        
        @Override
        public ReservationDefinitionProto getDefaultInstanceForType() {
            return ReservationDefinitionProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ReservationDefinitionProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ReservationRequestsProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.reservationRequests_.toBuilder();
                            }
                            this.reservationRequests_ = input.readMessage(ReservationRequestsProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.reservationRequests_);
                                this.reservationRequests_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            this.bitField0_ |= 0x2;
                            this.arrival_ = input.readInt64();
                            continue;
                        }
                        case 24: {
                            this.bitField0_ |= 0x4;
                            this.deadline_ = input.readInt64();
                            continue;
                        }
                        case 34: {
                            this.bitField0_ |= 0x8;
                            this.reservationName_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationDefinitionProto.class, Builder.class);
        }
        
        @Override
        public Parser<ReservationDefinitionProto> getParserForType() {
            return ReservationDefinitionProto.PARSER;
        }
        
        @Override
        public boolean hasReservationRequests() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ReservationRequestsProto getReservationRequests() {
            return this.reservationRequests_;
        }
        
        @Override
        public ReservationRequestsProtoOrBuilder getReservationRequestsOrBuilder() {
            return this.reservationRequests_;
        }
        
        @Override
        public boolean hasArrival() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public long getArrival() {
            return this.arrival_;
        }
        
        @Override
        public boolean hasDeadline() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public long getDeadline() {
            return this.deadline_;
        }
        
        @Override
        public boolean hasReservationName() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public String getReservationName() {
            final Object ref = this.reservationName_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.reservationName_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getReservationNameBytes() {
            final Object ref = this.reservationName_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.reservationName_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.reservationRequests_ = ReservationRequestsProto.getDefaultInstance();
            this.arrival_ = 0L;
            this.deadline_ = 0L;
            this.reservationName_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.reservationRequests_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeInt64(2, this.arrival_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeInt64(3, this.deadline_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeBytes(4, this.getReservationNameBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.reservationRequests_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeInt64Size(2, this.arrival_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeInt64Size(3, this.deadline_);
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeBytesSize(4, this.getReservationNameBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ReservationDefinitionProto)) {
                return super.equals(obj);
            }
            final ReservationDefinitionProto other = (ReservationDefinitionProto)obj;
            boolean result = true;
            result = (result && this.hasReservationRequests() == other.hasReservationRequests());
            if (this.hasReservationRequests()) {
                result = (result && this.getReservationRequests().equals(other.getReservationRequests()));
            }
            result = (result && this.hasArrival() == other.hasArrival());
            if (this.hasArrival()) {
                result = (result && this.getArrival() == other.getArrival());
            }
            result = (result && this.hasDeadline() == other.hasDeadline());
            if (this.hasDeadline()) {
                result = (result && this.getDeadline() == other.getDeadline());
            }
            result = (result && this.hasReservationName() == other.hasReservationName());
            if (this.hasReservationName()) {
                result = (result && this.getReservationName().equals(other.getReservationName()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasReservationRequests()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getReservationRequests().hashCode();
            }
            if (this.hasArrival()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + AbstractMessage.hashLong(this.getArrival());
            }
            if (this.hasDeadline()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + AbstractMessage.hashLong(this.getDeadline());
            }
            if (this.hasReservationName()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getReservationName().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ReservationDefinitionProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ReservationDefinitionProto.PARSER.parseFrom(data);
        }
        
        public static ReservationDefinitionProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationDefinitionProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationDefinitionProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ReservationDefinitionProto.PARSER.parseFrom(data);
        }
        
        public static ReservationDefinitionProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ReservationDefinitionProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ReservationDefinitionProto parseFrom(final InputStream input) throws IOException {
            return ReservationDefinitionProto.PARSER.parseFrom(input);
        }
        
        public static ReservationDefinitionProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationDefinitionProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ReservationDefinitionProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ReservationDefinitionProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ReservationDefinitionProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationDefinitionProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ReservationDefinitionProto parseFrom(final CodedInputStream input) throws IOException {
            return ReservationDefinitionProto.PARSER.parseFrom(input);
        }
        
        public static ReservationDefinitionProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ReservationDefinitionProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ReservationDefinitionProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ReservationDefinitionProto.PARSER = new AbstractParser<ReservationDefinitionProto>() {
                @Override
                public ReservationDefinitionProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ReservationDefinitionProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ReservationDefinitionProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ReservationDefinitionProtoOrBuilder
        {
            private int bitField0_;
            private ReservationRequestsProto reservationRequests_;
            private SingleFieldBuilder<ReservationRequestsProto, ReservationRequestsProto.Builder, ReservationRequestsProtoOrBuilder> reservationRequestsBuilder_;
            private long arrival_;
            private long deadline_;
            private Object reservationName_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ReservationDefinitionProto.class, Builder.class);
            }
            
            private Builder() {
                this.reservationRequests_ = ReservationRequestsProto.getDefaultInstance();
                this.reservationName_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.reservationRequests_ = ReservationRequestsProto.getDefaultInstance();
                this.reservationName_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ReservationDefinitionProto.alwaysUseFieldBuilders) {
                    this.getReservationRequestsFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.reservationRequestsBuilder_ == null) {
                    this.reservationRequests_ = ReservationRequestsProto.getDefaultInstance();
                }
                else {
                    this.reservationRequestsBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.arrival_ = 0L;
                this.bitField0_ &= 0xFFFFFFFD;
                this.deadline_ = 0L;
                this.bitField0_ &= 0xFFFFFFFB;
                this.reservationName_ = "";
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ReservationDefinitionProto_descriptor;
            }
            
            @Override
            public ReservationDefinitionProto getDefaultInstanceForType() {
                return ReservationDefinitionProto.getDefaultInstance();
            }
            
            @Override
            public ReservationDefinitionProto build() {
                final ReservationDefinitionProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ReservationDefinitionProto buildPartial() {
                final ReservationDefinitionProto result = new ReservationDefinitionProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.reservationRequestsBuilder_ == null) {
                    result.reservationRequests_ = this.reservationRequests_;
                }
                else {
                    result.reservationRequests_ = this.reservationRequestsBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.arrival_ = this.arrival_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.deadline_ = this.deadline_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.reservationName_ = this.reservationName_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ReservationDefinitionProto) {
                    return this.mergeFrom((ReservationDefinitionProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ReservationDefinitionProto other) {
                if (other == ReservationDefinitionProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasReservationRequests()) {
                    this.mergeReservationRequests(other.getReservationRequests());
                }
                if (other.hasArrival()) {
                    this.setArrival(other.getArrival());
                }
                if (other.hasDeadline()) {
                    this.setDeadline(other.getDeadline());
                }
                if (other.hasReservationName()) {
                    this.bitField0_ |= 0x8;
                    this.reservationName_ = other.reservationName_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ReservationDefinitionProto parsedMessage = null;
                try {
                    parsedMessage = ReservationDefinitionProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ReservationDefinitionProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasReservationRequests() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ReservationRequestsProto getReservationRequests() {
                if (this.reservationRequestsBuilder_ == null) {
                    return this.reservationRequests_;
                }
                return this.reservationRequestsBuilder_.getMessage();
            }
            
            public Builder setReservationRequests(final ReservationRequestsProto value) {
                if (this.reservationRequestsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.reservationRequests_ = value;
                    this.onChanged();
                }
                else {
                    this.reservationRequestsBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setReservationRequests(final ReservationRequestsProto.Builder builderForValue) {
                if (this.reservationRequestsBuilder_ == null) {
                    this.reservationRequests_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.reservationRequestsBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeReservationRequests(final ReservationRequestsProto value) {
                if (this.reservationRequestsBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.reservationRequests_ != ReservationRequestsProto.getDefaultInstance()) {
                        this.reservationRequests_ = ReservationRequestsProto.newBuilder(this.reservationRequests_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.reservationRequests_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.reservationRequestsBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearReservationRequests() {
                if (this.reservationRequestsBuilder_ == null) {
                    this.reservationRequests_ = ReservationRequestsProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.reservationRequestsBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ReservationRequestsProto.Builder getReservationRequestsBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getReservationRequestsFieldBuilder().getBuilder();
            }
            
            @Override
            public ReservationRequestsProtoOrBuilder getReservationRequestsOrBuilder() {
                if (this.reservationRequestsBuilder_ != null) {
                    return this.reservationRequestsBuilder_.getMessageOrBuilder();
                }
                return this.reservationRequests_;
            }
            
            private SingleFieldBuilder<ReservationRequestsProto, ReservationRequestsProto.Builder, ReservationRequestsProtoOrBuilder> getReservationRequestsFieldBuilder() {
                if (this.reservationRequestsBuilder_ == null) {
                    this.reservationRequestsBuilder_ = new SingleFieldBuilder<ReservationRequestsProto, ReservationRequestsProto.Builder, ReservationRequestsProtoOrBuilder>(this.reservationRequests_, this.getParentForChildren(), this.isClean());
                    this.reservationRequests_ = null;
                }
                return this.reservationRequestsBuilder_;
            }
            
            @Override
            public boolean hasArrival() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public long getArrival() {
                return this.arrival_;
            }
            
            public Builder setArrival(final long value) {
                this.bitField0_ |= 0x2;
                this.arrival_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearArrival() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.arrival_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasDeadline() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public long getDeadline() {
                return this.deadline_;
            }
            
            public Builder setDeadline(final long value) {
                this.bitField0_ |= 0x4;
                this.deadline_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearDeadline() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.deadline_ = 0L;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasReservationName() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public String getReservationName() {
                final Object ref = this.reservationName_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.reservationName_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getReservationNameBytes() {
                final Object ref = this.reservationName_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.reservationName_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setReservationName(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.reservationName_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearReservationName() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.reservationName_ = ReservationDefinitionProto.getDefaultInstance().getReservationName();
                this.onChanged();
                return this;
            }
            
            public Builder setReservationNameBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x8;
                this.reservationName_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ContainerLaunchContextProto extends GeneratedMessage implements ContainerLaunchContextProtoOrBuilder
    {
        private static final ContainerLaunchContextProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerLaunchContextProto> PARSER;
        private int bitField0_;
        public static final int LOCALRESOURCES_FIELD_NUMBER = 1;
        private List<StringLocalResourceMapProto> localResources_;
        public static final int TOKENS_FIELD_NUMBER = 2;
        private ByteString tokens_;
        public static final int SERVICE_DATA_FIELD_NUMBER = 3;
        private List<StringBytesMapProto> serviceData_;
        public static final int ENVIRONMENT_FIELD_NUMBER = 4;
        private List<StringStringMapProto> environment_;
        public static final int COMMAND_FIELD_NUMBER = 5;
        private LazyStringList command_;
        public static final int APPLICATION_ACLS_FIELD_NUMBER = 6;
        private List<ApplicationACLMapProto> applicationACLs_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerLaunchContextProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerLaunchContextProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerLaunchContextProto getDefaultInstance() {
            return ContainerLaunchContextProto.defaultInstance;
        }
        
        @Override
        public ContainerLaunchContextProto getDefaultInstanceForType() {
            return ContainerLaunchContextProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerLaunchContextProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            if ((mutable_bitField0_ & 0x1) != 0x1) {
                                this.localResources_ = new ArrayList<StringLocalResourceMapProto>();
                                mutable_bitField0_ |= 0x1;
                            }
                            this.localResources_.add(input.readMessage(StringLocalResourceMapProto.PARSER, extensionRegistry));
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x1;
                            this.tokens_ = input.readBytes();
                            continue;
                        }
                        case 26: {
                            if ((mutable_bitField0_ & 0x4) != 0x4) {
                                this.serviceData_ = new ArrayList<StringBytesMapProto>();
                                mutable_bitField0_ |= 0x4;
                            }
                            this.serviceData_.add(input.readMessage(StringBytesMapProto.PARSER, extensionRegistry));
                            continue;
                        }
                        case 34: {
                            if ((mutable_bitField0_ & 0x8) != 0x8) {
                                this.environment_ = new ArrayList<StringStringMapProto>();
                                mutable_bitField0_ |= 0x8;
                            }
                            this.environment_.add(input.readMessage(StringStringMapProto.PARSER, extensionRegistry));
                            continue;
                        }
                        case 42: {
                            if ((mutable_bitField0_ & 0x10) != 0x10) {
                                this.command_ = new LazyStringArrayList();
                                mutable_bitField0_ |= 0x10;
                            }
                            this.command_.add(input.readBytes());
                            continue;
                        }
                        case 50: {
                            if ((mutable_bitField0_ & 0x20) != 0x20) {
                                this.applicationACLs_ = new ArrayList<ApplicationACLMapProto>();
                                mutable_bitField0_ |= 0x20;
                            }
                            this.applicationACLs_.add(input.readMessage(ApplicationACLMapProto.PARSER, extensionRegistry));
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                if ((mutable_bitField0_ & 0x1) == 0x1) {
                    this.localResources_ = Collections.unmodifiableList((List<? extends StringLocalResourceMapProto>)this.localResources_);
                }
                if ((mutable_bitField0_ & 0x4) == 0x4) {
                    this.serviceData_ = Collections.unmodifiableList((List<? extends StringBytesMapProto>)this.serviceData_);
                }
                if ((mutable_bitField0_ & 0x8) == 0x8) {
                    this.environment_ = Collections.unmodifiableList((List<? extends StringStringMapProto>)this.environment_);
                }
                if ((mutable_bitField0_ & 0x10) == 0x10) {
                    this.command_ = new UnmodifiableLazyStringList(this.command_);
                }
                if ((mutable_bitField0_ & 0x20) == 0x20) {
                    this.applicationACLs_ = Collections.unmodifiableList((List<? extends ApplicationACLMapProto>)this.applicationACLs_);
                }
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerLaunchContextProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerLaunchContextProto> getParserForType() {
            return ContainerLaunchContextProto.PARSER;
        }
        
        @Override
        public List<StringLocalResourceMapProto> getLocalResourcesList() {
            return this.localResources_;
        }
        
        @Override
        public List<? extends StringLocalResourceMapProtoOrBuilder> getLocalResourcesOrBuilderList() {
            return this.localResources_;
        }
        
        @Override
        public int getLocalResourcesCount() {
            return this.localResources_.size();
        }
        
        @Override
        public StringLocalResourceMapProto getLocalResources(final int index) {
            return this.localResources_.get(index);
        }
        
        @Override
        public StringLocalResourceMapProtoOrBuilder getLocalResourcesOrBuilder(final int index) {
            return this.localResources_.get(index);
        }
        
        @Override
        public boolean hasTokens() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ByteString getTokens() {
            return this.tokens_;
        }
        
        @Override
        public List<StringBytesMapProto> getServiceDataList() {
            return this.serviceData_;
        }
        
        @Override
        public List<? extends StringBytesMapProtoOrBuilder> getServiceDataOrBuilderList() {
            return this.serviceData_;
        }
        
        @Override
        public int getServiceDataCount() {
            return this.serviceData_.size();
        }
        
        @Override
        public StringBytesMapProto getServiceData(final int index) {
            return this.serviceData_.get(index);
        }
        
        @Override
        public StringBytesMapProtoOrBuilder getServiceDataOrBuilder(final int index) {
            return this.serviceData_.get(index);
        }
        
        @Override
        public List<StringStringMapProto> getEnvironmentList() {
            return this.environment_;
        }
        
        @Override
        public List<? extends StringStringMapProtoOrBuilder> getEnvironmentOrBuilderList() {
            return this.environment_;
        }
        
        @Override
        public int getEnvironmentCount() {
            return this.environment_.size();
        }
        
        @Override
        public StringStringMapProto getEnvironment(final int index) {
            return this.environment_.get(index);
        }
        
        @Override
        public StringStringMapProtoOrBuilder getEnvironmentOrBuilder(final int index) {
            return this.environment_.get(index);
        }
        
        @Override
        public List<String> getCommandList() {
            return this.command_;
        }
        
        @Override
        public int getCommandCount() {
            return this.command_.size();
        }
        
        @Override
        public String getCommand(final int index) {
            return this.command_.get(index);
        }
        
        @Override
        public ByteString getCommandBytes(final int index) {
            return this.command_.getByteString(index);
        }
        
        @Override
        public List<ApplicationACLMapProto> getApplicationACLsList() {
            return this.applicationACLs_;
        }
        
        @Override
        public List<? extends ApplicationACLMapProtoOrBuilder> getApplicationACLsOrBuilderList() {
            return this.applicationACLs_;
        }
        
        @Override
        public int getApplicationACLsCount() {
            return this.applicationACLs_.size();
        }
        
        @Override
        public ApplicationACLMapProto getApplicationACLs(final int index) {
            return this.applicationACLs_.get(index);
        }
        
        @Override
        public ApplicationACLMapProtoOrBuilder getApplicationACLsOrBuilder(final int index) {
            return this.applicationACLs_.get(index);
        }
        
        private void initFields() {
            this.localResources_ = Collections.emptyList();
            this.tokens_ = ByteString.EMPTY;
            this.serviceData_ = Collections.emptyList();
            this.environment_ = Collections.emptyList();
            this.command_ = LazyStringArrayList.EMPTY;
            this.applicationACLs_ = Collections.emptyList();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            for (int i = 0; i < this.localResources_.size(); ++i) {
                output.writeMessage(1, this.localResources_.get(i));
            }
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(2, this.tokens_);
            }
            for (int i = 0; i < this.serviceData_.size(); ++i) {
                output.writeMessage(3, this.serviceData_.get(i));
            }
            for (int i = 0; i < this.environment_.size(); ++i) {
                output.writeMessage(4, this.environment_.get(i));
            }
            for (int i = 0; i < this.command_.size(); ++i) {
                output.writeBytes(5, this.command_.getByteString(i));
            }
            for (int i = 0; i < this.applicationACLs_.size(); ++i) {
                output.writeMessage(6, this.applicationACLs_.get(i));
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            for (int i = 0; i < this.localResources_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(1, this.localResources_.get(i));
            }
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(2, this.tokens_);
            }
            for (int i = 0; i < this.serviceData_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(3, this.serviceData_.get(i));
            }
            for (int i = 0; i < this.environment_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(4, this.environment_.get(i));
            }
            int dataSize = 0;
            for (int j = 0; j < this.command_.size(); ++j) {
                dataSize += CodedOutputStream.computeBytesSizeNoTag(this.command_.getByteString(j));
            }
            size += dataSize;
            size += 1 * this.getCommandList().size();
            for (int i = 0; i < this.applicationACLs_.size(); ++i) {
                size += CodedOutputStream.computeMessageSize(6, this.applicationACLs_.get(i));
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerLaunchContextProto)) {
                return super.equals(obj);
            }
            final ContainerLaunchContextProto other = (ContainerLaunchContextProto)obj;
            boolean result = true;
            result = (result && this.getLocalResourcesList().equals(other.getLocalResourcesList()));
            result = (result && this.hasTokens() == other.hasTokens());
            if (this.hasTokens()) {
                result = (result && this.getTokens().equals(other.getTokens()));
            }
            result = (result && this.getServiceDataList().equals(other.getServiceDataList()));
            result = (result && this.getEnvironmentList().equals(other.getEnvironmentList()));
            result = (result && this.getCommandList().equals(other.getCommandList()));
            result = (result && this.getApplicationACLsList().equals(other.getApplicationACLsList()));
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.getLocalResourcesCount() > 0) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getLocalResourcesList().hashCode();
            }
            if (this.hasTokens()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getTokens().hashCode();
            }
            if (this.getServiceDataCount() > 0) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getServiceDataList().hashCode();
            }
            if (this.getEnvironmentCount() > 0) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getEnvironmentList().hashCode();
            }
            if (this.getCommandCount() > 0) {
                hash = 37 * hash + 5;
                hash = 53 * hash + this.getCommandList().hashCode();
            }
            if (this.getApplicationACLsCount() > 0) {
                hash = 37 * hash + 6;
                hash = 53 * hash + this.getApplicationACLsList().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerLaunchContextProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerLaunchContextProto.PARSER.parseFrom(data);
        }
        
        public static ContainerLaunchContextProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerLaunchContextProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerLaunchContextProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerLaunchContextProto.PARSER.parseFrom(data);
        }
        
        public static ContainerLaunchContextProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerLaunchContextProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerLaunchContextProto parseFrom(final InputStream input) throws IOException {
            return ContainerLaunchContextProto.PARSER.parseFrom(input);
        }
        
        public static ContainerLaunchContextProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerLaunchContextProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerLaunchContextProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerLaunchContextProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerLaunchContextProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerLaunchContextProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerLaunchContextProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerLaunchContextProto.PARSER.parseFrom(input);
        }
        
        public static ContainerLaunchContextProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerLaunchContextProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerLaunchContextProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerLaunchContextProto.PARSER = new AbstractParser<ContainerLaunchContextProto>() {
                @Override
                public ContainerLaunchContextProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerLaunchContextProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerLaunchContextProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerLaunchContextProtoOrBuilder
        {
            private int bitField0_;
            private List<StringLocalResourceMapProto> localResources_;
            private RepeatedFieldBuilder<StringLocalResourceMapProto, StringLocalResourceMapProto.Builder, StringLocalResourceMapProtoOrBuilder> localResourcesBuilder_;
            private ByteString tokens_;
            private List<StringBytesMapProto> serviceData_;
            private RepeatedFieldBuilder<StringBytesMapProto, StringBytesMapProto.Builder, StringBytesMapProtoOrBuilder> serviceDataBuilder_;
            private List<StringStringMapProto> environment_;
            private RepeatedFieldBuilder<StringStringMapProto, StringStringMapProto.Builder, StringStringMapProtoOrBuilder> environmentBuilder_;
            private LazyStringList command_;
            private List<ApplicationACLMapProto> applicationACLs_;
            private RepeatedFieldBuilder<ApplicationACLMapProto, ApplicationACLMapProto.Builder, ApplicationACLMapProtoOrBuilder> applicationACLsBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerLaunchContextProto.class, Builder.class);
            }
            
            private Builder() {
                this.localResources_ = Collections.emptyList();
                this.tokens_ = ByteString.EMPTY;
                this.serviceData_ = Collections.emptyList();
                this.environment_ = Collections.emptyList();
                this.command_ = LazyStringArrayList.EMPTY;
                this.applicationACLs_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.localResources_ = Collections.emptyList();
                this.tokens_ = ByteString.EMPTY;
                this.serviceData_ = Collections.emptyList();
                this.environment_ = Collections.emptyList();
                this.command_ = LazyStringArrayList.EMPTY;
                this.applicationACLs_ = Collections.emptyList();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerLaunchContextProto.alwaysUseFieldBuilders) {
                    this.getLocalResourcesFieldBuilder();
                    this.getServiceDataFieldBuilder();
                    this.getEnvironmentFieldBuilder();
                    this.getApplicationACLsFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.localResourcesBuilder_ == null) {
                    this.localResources_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                }
                else {
                    this.localResourcesBuilder_.clear();
                }
                this.tokens_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.serviceDataBuilder_ == null) {
                    this.serviceData_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                }
                else {
                    this.serviceDataBuilder_.clear();
                }
                if (this.environmentBuilder_ == null) {
                    this.environment_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFF7;
                }
                else {
                    this.environmentBuilder_.clear();
                }
                this.command_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFEF;
                if (this.applicationACLsBuilder_ == null) {
                    this.applicationACLs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFDF;
                }
                else {
                    this.applicationACLsBuilder_.clear();
                }
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerLaunchContextProto_descriptor;
            }
            
            @Override
            public ContainerLaunchContextProto getDefaultInstanceForType() {
                return ContainerLaunchContextProto.getDefaultInstance();
            }
            
            @Override
            public ContainerLaunchContextProto build() {
                final ContainerLaunchContextProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerLaunchContextProto buildPartial() {
                final ContainerLaunchContextProto result = new ContainerLaunchContextProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if (this.localResourcesBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1) {
                        this.localResources_ = Collections.unmodifiableList((List<? extends StringLocalResourceMapProto>)this.localResources_);
                        this.bitField0_ &= 0xFFFFFFFE;
                    }
                    result.localResources_ = this.localResources_;
                }
                else {
                    result.localResources_ = this.localResourcesBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x1;
                }
                result.tokens_ = this.tokens_;
                if (this.serviceDataBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 0x4) {
                        this.serviceData_ = Collections.unmodifiableList((List<? extends StringBytesMapProto>)this.serviceData_);
                        this.bitField0_ &= 0xFFFFFFFB;
                    }
                    result.serviceData_ = this.serviceData_;
                }
                else {
                    result.serviceData_ = this.serviceDataBuilder_.build();
                }
                if (this.environmentBuilder_ == null) {
                    if ((this.bitField0_ & 0x8) == 0x8) {
                        this.environment_ = Collections.unmodifiableList((List<? extends StringStringMapProto>)this.environment_);
                        this.bitField0_ &= 0xFFFFFFF7;
                    }
                    result.environment_ = this.environment_;
                }
                else {
                    result.environment_ = this.environmentBuilder_.build();
                }
                if ((this.bitField0_ & 0x10) == 0x10) {
                    this.command_ = new UnmodifiableLazyStringList(this.command_);
                    this.bitField0_ &= 0xFFFFFFEF;
                }
                result.command_ = this.command_;
                if (this.applicationACLsBuilder_ == null) {
                    if ((this.bitField0_ & 0x20) == 0x20) {
                        this.applicationACLs_ = Collections.unmodifiableList((List<? extends ApplicationACLMapProto>)this.applicationACLs_);
                        this.bitField0_ &= 0xFFFFFFDF;
                    }
                    result.applicationACLs_ = this.applicationACLs_;
                }
                else {
                    result.applicationACLs_ = this.applicationACLsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerLaunchContextProto) {
                    return this.mergeFrom((ContainerLaunchContextProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerLaunchContextProto other) {
                if (other == ContainerLaunchContextProto.getDefaultInstance()) {
                    return this;
                }
                if (this.localResourcesBuilder_ == null) {
                    if (!other.localResources_.isEmpty()) {
                        if (this.localResources_.isEmpty()) {
                            this.localResources_ = other.localResources_;
                            this.bitField0_ &= 0xFFFFFFFE;
                        }
                        else {
                            this.ensureLocalResourcesIsMutable();
                            this.localResources_.addAll(other.localResources_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.localResources_.isEmpty()) {
                    if (this.localResourcesBuilder_.isEmpty()) {
                        this.localResourcesBuilder_.dispose();
                        this.localResourcesBuilder_ = null;
                        this.localResources_ = other.localResources_;
                        this.bitField0_ &= 0xFFFFFFFE;
                        this.localResourcesBuilder_ = (ContainerLaunchContextProto.alwaysUseFieldBuilders ? this.getLocalResourcesFieldBuilder() : null);
                    }
                    else {
                        this.localResourcesBuilder_.addAllMessages(other.localResources_);
                    }
                }
                if (other.hasTokens()) {
                    this.setTokens(other.getTokens());
                }
                if (this.serviceDataBuilder_ == null) {
                    if (!other.serviceData_.isEmpty()) {
                        if (this.serviceData_.isEmpty()) {
                            this.serviceData_ = other.serviceData_;
                            this.bitField0_ &= 0xFFFFFFFB;
                        }
                        else {
                            this.ensureServiceDataIsMutable();
                            this.serviceData_.addAll(other.serviceData_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.serviceData_.isEmpty()) {
                    if (this.serviceDataBuilder_.isEmpty()) {
                        this.serviceDataBuilder_.dispose();
                        this.serviceDataBuilder_ = null;
                        this.serviceData_ = other.serviceData_;
                        this.bitField0_ &= 0xFFFFFFFB;
                        this.serviceDataBuilder_ = (ContainerLaunchContextProto.alwaysUseFieldBuilders ? this.getServiceDataFieldBuilder() : null);
                    }
                    else {
                        this.serviceDataBuilder_.addAllMessages(other.serviceData_);
                    }
                }
                if (this.environmentBuilder_ == null) {
                    if (!other.environment_.isEmpty()) {
                        if (this.environment_.isEmpty()) {
                            this.environment_ = other.environment_;
                            this.bitField0_ &= 0xFFFFFFF7;
                        }
                        else {
                            this.ensureEnvironmentIsMutable();
                            this.environment_.addAll(other.environment_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.environment_.isEmpty()) {
                    if (this.environmentBuilder_.isEmpty()) {
                        this.environmentBuilder_.dispose();
                        this.environmentBuilder_ = null;
                        this.environment_ = other.environment_;
                        this.bitField0_ &= 0xFFFFFFF7;
                        this.environmentBuilder_ = (ContainerLaunchContextProto.alwaysUseFieldBuilders ? this.getEnvironmentFieldBuilder() : null);
                    }
                    else {
                        this.environmentBuilder_.addAllMessages(other.environment_);
                    }
                }
                if (!other.command_.isEmpty()) {
                    if (this.command_.isEmpty()) {
                        this.command_ = other.command_;
                        this.bitField0_ &= 0xFFFFFFEF;
                    }
                    else {
                        this.ensureCommandIsMutable();
                        this.command_.addAll(other.command_);
                    }
                    this.onChanged();
                }
                if (this.applicationACLsBuilder_ == null) {
                    if (!other.applicationACLs_.isEmpty()) {
                        if (this.applicationACLs_.isEmpty()) {
                            this.applicationACLs_ = other.applicationACLs_;
                            this.bitField0_ &= 0xFFFFFFDF;
                        }
                        else {
                            this.ensureApplicationACLsIsMutable();
                            this.applicationACLs_.addAll(other.applicationACLs_);
                        }
                        this.onChanged();
                    }
                }
                else if (!other.applicationACLs_.isEmpty()) {
                    if (this.applicationACLsBuilder_.isEmpty()) {
                        this.applicationACLsBuilder_.dispose();
                        this.applicationACLsBuilder_ = null;
                        this.applicationACLs_ = other.applicationACLs_;
                        this.bitField0_ &= 0xFFFFFFDF;
                        this.applicationACLsBuilder_ = (ContainerLaunchContextProto.alwaysUseFieldBuilders ? this.getApplicationACLsFieldBuilder() : null);
                    }
                    else {
                        this.applicationACLsBuilder_.addAllMessages(other.applicationACLs_);
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerLaunchContextProto parsedMessage = null;
                try {
                    parsedMessage = ContainerLaunchContextProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerLaunchContextProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            private void ensureLocalResourcesIsMutable() {
                if ((this.bitField0_ & 0x1) != 0x1) {
                    this.localResources_ = new ArrayList<StringLocalResourceMapProto>(this.localResources_);
                    this.bitField0_ |= 0x1;
                }
            }
            
            @Override
            public List<StringLocalResourceMapProto> getLocalResourcesList() {
                if (this.localResourcesBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends StringLocalResourceMapProto>)this.localResources_);
                }
                return this.localResourcesBuilder_.getMessageList();
            }
            
            @Override
            public int getLocalResourcesCount() {
                if (this.localResourcesBuilder_ == null) {
                    return this.localResources_.size();
                }
                return this.localResourcesBuilder_.getCount();
            }
            
            @Override
            public StringLocalResourceMapProto getLocalResources(final int index) {
                if (this.localResourcesBuilder_ == null) {
                    return this.localResources_.get(index);
                }
                return this.localResourcesBuilder_.getMessage(index);
            }
            
            public Builder setLocalResources(final int index, final StringLocalResourceMapProto value) {
                if (this.localResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureLocalResourcesIsMutable();
                    this.localResources_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setLocalResources(final int index, final StringLocalResourceMapProto.Builder builderForValue) {
                if (this.localResourcesBuilder_ == null) {
                    this.ensureLocalResourcesIsMutable();
                    this.localResources_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addLocalResources(final StringLocalResourceMapProto value) {
                if (this.localResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureLocalResourcesIsMutable();
                    this.localResources_.add(value);
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addLocalResources(final int index, final StringLocalResourceMapProto value) {
                if (this.localResourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureLocalResourcesIsMutable();
                    this.localResources_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addLocalResources(final StringLocalResourceMapProto.Builder builderForValue) {
                if (this.localResourcesBuilder_ == null) {
                    this.ensureLocalResourcesIsMutable();
                    this.localResources_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addLocalResources(final int index, final StringLocalResourceMapProto.Builder builderForValue) {
                if (this.localResourcesBuilder_ == null) {
                    this.ensureLocalResourcesIsMutable();
                    this.localResources_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllLocalResources(final Iterable<? extends StringLocalResourceMapProto> values) {
                if (this.localResourcesBuilder_ == null) {
                    this.ensureLocalResourcesIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.localResources_);
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearLocalResources() {
                if (this.localResourcesBuilder_ == null) {
                    this.localResources_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFE;
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeLocalResources(final int index) {
                if (this.localResourcesBuilder_ == null) {
                    this.ensureLocalResourcesIsMutable();
                    this.localResources_.remove(index);
                    this.onChanged();
                }
                else {
                    this.localResourcesBuilder_.remove(index);
                }
                return this;
            }
            
            public StringLocalResourceMapProto.Builder getLocalResourcesBuilder(final int index) {
                return this.getLocalResourcesFieldBuilder().getBuilder(index);
            }
            
            @Override
            public StringLocalResourceMapProtoOrBuilder getLocalResourcesOrBuilder(final int index) {
                if (this.localResourcesBuilder_ == null) {
                    return this.localResources_.get(index);
                }
                return this.localResourcesBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends StringLocalResourceMapProtoOrBuilder> getLocalResourcesOrBuilderList() {
                if (this.localResourcesBuilder_ != null) {
                    return this.localResourcesBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends StringLocalResourceMapProtoOrBuilder>)this.localResources_);
            }
            
            public StringLocalResourceMapProto.Builder addLocalResourcesBuilder() {
                return this.getLocalResourcesFieldBuilder().addBuilder(StringLocalResourceMapProto.getDefaultInstance());
            }
            
            public StringLocalResourceMapProto.Builder addLocalResourcesBuilder(final int index) {
                return this.getLocalResourcesFieldBuilder().addBuilder(index, StringLocalResourceMapProto.getDefaultInstance());
            }
            
            public List<StringLocalResourceMapProto.Builder> getLocalResourcesBuilderList() {
                return this.getLocalResourcesFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<StringLocalResourceMapProto, StringLocalResourceMapProto.Builder, StringLocalResourceMapProtoOrBuilder> getLocalResourcesFieldBuilder() {
                if (this.localResourcesBuilder_ == null) {
                    this.localResourcesBuilder_ = new RepeatedFieldBuilder<StringLocalResourceMapProto, StringLocalResourceMapProto.Builder, StringLocalResourceMapProtoOrBuilder>(this.localResources_, (this.bitField0_ & 0x1) == 0x1, this.getParentForChildren(), this.isClean());
                    this.localResources_ = null;
                }
                return this.localResourcesBuilder_;
            }
            
            @Override
            public boolean hasTokens() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ByteString getTokens() {
                return this.tokens_;
            }
            
            public Builder setTokens(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.tokens_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearTokens() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.tokens_ = ContainerLaunchContextProto.getDefaultInstance().getTokens();
                this.onChanged();
                return this;
            }
            
            private void ensureServiceDataIsMutable() {
                if ((this.bitField0_ & 0x4) != 0x4) {
                    this.serviceData_ = new ArrayList<StringBytesMapProto>(this.serviceData_);
                    this.bitField0_ |= 0x4;
                }
            }
            
            @Override
            public List<StringBytesMapProto> getServiceDataList() {
                if (this.serviceDataBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends StringBytesMapProto>)this.serviceData_);
                }
                return this.serviceDataBuilder_.getMessageList();
            }
            
            @Override
            public int getServiceDataCount() {
                if (this.serviceDataBuilder_ == null) {
                    return this.serviceData_.size();
                }
                return this.serviceDataBuilder_.getCount();
            }
            
            @Override
            public StringBytesMapProto getServiceData(final int index) {
                if (this.serviceDataBuilder_ == null) {
                    return this.serviceData_.get(index);
                }
                return this.serviceDataBuilder_.getMessage(index);
            }
            
            public Builder setServiceData(final int index, final StringBytesMapProto value) {
                if (this.serviceDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureServiceDataIsMutable();
                    this.serviceData_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setServiceData(final int index, final StringBytesMapProto.Builder builderForValue) {
                if (this.serviceDataBuilder_ == null) {
                    this.ensureServiceDataIsMutable();
                    this.serviceData_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addServiceData(final StringBytesMapProto value) {
                if (this.serviceDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureServiceDataIsMutable();
                    this.serviceData_.add(value);
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addServiceData(final int index, final StringBytesMapProto value) {
                if (this.serviceDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureServiceDataIsMutable();
                    this.serviceData_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addServiceData(final StringBytesMapProto.Builder builderForValue) {
                if (this.serviceDataBuilder_ == null) {
                    this.ensureServiceDataIsMutable();
                    this.serviceData_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addServiceData(final int index, final StringBytesMapProto.Builder builderForValue) {
                if (this.serviceDataBuilder_ == null) {
                    this.ensureServiceDataIsMutable();
                    this.serviceData_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllServiceData(final Iterable<? extends StringBytesMapProto> values) {
                if (this.serviceDataBuilder_ == null) {
                    this.ensureServiceDataIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.serviceData_);
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearServiceData() {
                if (this.serviceDataBuilder_ == null) {
                    this.serviceData_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFFB;
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeServiceData(final int index) {
                if (this.serviceDataBuilder_ == null) {
                    this.ensureServiceDataIsMutable();
                    this.serviceData_.remove(index);
                    this.onChanged();
                }
                else {
                    this.serviceDataBuilder_.remove(index);
                }
                return this;
            }
            
            public StringBytesMapProto.Builder getServiceDataBuilder(final int index) {
                return this.getServiceDataFieldBuilder().getBuilder(index);
            }
            
            @Override
            public StringBytesMapProtoOrBuilder getServiceDataOrBuilder(final int index) {
                if (this.serviceDataBuilder_ == null) {
                    return this.serviceData_.get(index);
                }
                return this.serviceDataBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends StringBytesMapProtoOrBuilder> getServiceDataOrBuilderList() {
                if (this.serviceDataBuilder_ != null) {
                    return this.serviceDataBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends StringBytesMapProtoOrBuilder>)this.serviceData_);
            }
            
            public StringBytesMapProto.Builder addServiceDataBuilder() {
                return this.getServiceDataFieldBuilder().addBuilder(StringBytesMapProto.getDefaultInstance());
            }
            
            public StringBytesMapProto.Builder addServiceDataBuilder(final int index) {
                return this.getServiceDataFieldBuilder().addBuilder(index, StringBytesMapProto.getDefaultInstance());
            }
            
            public List<StringBytesMapProto.Builder> getServiceDataBuilderList() {
                return this.getServiceDataFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<StringBytesMapProto, StringBytesMapProto.Builder, StringBytesMapProtoOrBuilder> getServiceDataFieldBuilder() {
                if (this.serviceDataBuilder_ == null) {
                    this.serviceDataBuilder_ = new RepeatedFieldBuilder<StringBytesMapProto, StringBytesMapProto.Builder, StringBytesMapProtoOrBuilder>(this.serviceData_, (this.bitField0_ & 0x4) == 0x4, this.getParentForChildren(), this.isClean());
                    this.serviceData_ = null;
                }
                return this.serviceDataBuilder_;
            }
            
            private void ensureEnvironmentIsMutable() {
                if ((this.bitField0_ & 0x8) != 0x8) {
                    this.environment_ = new ArrayList<StringStringMapProto>(this.environment_);
                    this.bitField0_ |= 0x8;
                }
            }
            
            @Override
            public List<StringStringMapProto> getEnvironmentList() {
                if (this.environmentBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends StringStringMapProto>)this.environment_);
                }
                return this.environmentBuilder_.getMessageList();
            }
            
            @Override
            public int getEnvironmentCount() {
                if (this.environmentBuilder_ == null) {
                    return this.environment_.size();
                }
                return this.environmentBuilder_.getCount();
            }
            
            @Override
            public StringStringMapProto getEnvironment(final int index) {
                if (this.environmentBuilder_ == null) {
                    return this.environment_.get(index);
                }
                return this.environmentBuilder_.getMessage(index);
            }
            
            public Builder setEnvironment(final int index, final StringStringMapProto value) {
                if (this.environmentBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureEnvironmentIsMutable();
                    this.environment_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setEnvironment(final int index, final StringStringMapProto.Builder builderForValue) {
                if (this.environmentBuilder_ == null) {
                    this.ensureEnvironmentIsMutable();
                    this.environment_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addEnvironment(final StringStringMapProto value) {
                if (this.environmentBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureEnvironmentIsMutable();
                    this.environment_.add(value);
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addEnvironment(final int index, final StringStringMapProto value) {
                if (this.environmentBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureEnvironmentIsMutable();
                    this.environment_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addEnvironment(final StringStringMapProto.Builder builderForValue) {
                if (this.environmentBuilder_ == null) {
                    this.ensureEnvironmentIsMutable();
                    this.environment_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addEnvironment(final int index, final StringStringMapProto.Builder builderForValue) {
                if (this.environmentBuilder_ == null) {
                    this.ensureEnvironmentIsMutable();
                    this.environment_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllEnvironment(final Iterable<? extends StringStringMapProto> values) {
                if (this.environmentBuilder_ == null) {
                    this.ensureEnvironmentIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.environment_);
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearEnvironment() {
                if (this.environmentBuilder_ == null) {
                    this.environment_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFF7;
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeEnvironment(final int index) {
                if (this.environmentBuilder_ == null) {
                    this.ensureEnvironmentIsMutable();
                    this.environment_.remove(index);
                    this.onChanged();
                }
                else {
                    this.environmentBuilder_.remove(index);
                }
                return this;
            }
            
            public StringStringMapProto.Builder getEnvironmentBuilder(final int index) {
                return this.getEnvironmentFieldBuilder().getBuilder(index);
            }
            
            @Override
            public StringStringMapProtoOrBuilder getEnvironmentOrBuilder(final int index) {
                if (this.environmentBuilder_ == null) {
                    return this.environment_.get(index);
                }
                return this.environmentBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends StringStringMapProtoOrBuilder> getEnvironmentOrBuilderList() {
                if (this.environmentBuilder_ != null) {
                    return this.environmentBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends StringStringMapProtoOrBuilder>)this.environment_);
            }
            
            public StringStringMapProto.Builder addEnvironmentBuilder() {
                return this.getEnvironmentFieldBuilder().addBuilder(StringStringMapProto.getDefaultInstance());
            }
            
            public StringStringMapProto.Builder addEnvironmentBuilder(final int index) {
                return this.getEnvironmentFieldBuilder().addBuilder(index, StringStringMapProto.getDefaultInstance());
            }
            
            public List<StringStringMapProto.Builder> getEnvironmentBuilderList() {
                return this.getEnvironmentFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<StringStringMapProto, StringStringMapProto.Builder, StringStringMapProtoOrBuilder> getEnvironmentFieldBuilder() {
                if (this.environmentBuilder_ == null) {
                    this.environmentBuilder_ = new RepeatedFieldBuilder<StringStringMapProto, StringStringMapProto.Builder, StringStringMapProtoOrBuilder>(this.environment_, (this.bitField0_ & 0x8) == 0x8, this.getParentForChildren(), this.isClean());
                    this.environment_ = null;
                }
                return this.environmentBuilder_;
            }
            
            private void ensureCommandIsMutable() {
                if ((this.bitField0_ & 0x10) != 0x10) {
                    this.command_ = new LazyStringArrayList(this.command_);
                    this.bitField0_ |= 0x10;
                }
            }
            
            @Override
            public List<String> getCommandList() {
                return Collections.unmodifiableList((List<? extends String>)this.command_);
            }
            
            @Override
            public int getCommandCount() {
                return this.command_.size();
            }
            
            @Override
            public String getCommand(final int index) {
                return this.command_.get(index);
            }
            
            @Override
            public ByteString getCommandBytes(final int index) {
                return this.command_.getByteString(index);
            }
            
            public Builder setCommand(final int index, final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureCommandIsMutable();
                this.command_.set(index, value);
                this.onChanged();
                return this;
            }
            
            public Builder addCommand(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureCommandIsMutable();
                this.command_.add(value);
                this.onChanged();
                return this;
            }
            
            public Builder addAllCommand(final Iterable<String> values) {
                this.ensureCommandIsMutable();
                AbstractMessageLite.Builder.addAll(values, this.command_);
                this.onChanged();
                return this;
            }
            
            public Builder clearCommand() {
                this.command_ = LazyStringArrayList.EMPTY;
                this.bitField0_ &= 0xFFFFFFEF;
                this.onChanged();
                return this;
            }
            
            public Builder addCommandBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.ensureCommandIsMutable();
                this.command_.add(value);
                this.onChanged();
                return this;
            }
            
            private void ensureApplicationACLsIsMutable() {
                if ((this.bitField0_ & 0x20) != 0x20) {
                    this.applicationACLs_ = new ArrayList<ApplicationACLMapProto>(this.applicationACLs_);
                    this.bitField0_ |= 0x20;
                }
            }
            
            @Override
            public List<ApplicationACLMapProto> getApplicationACLsList() {
                if (this.applicationACLsBuilder_ == null) {
                    return Collections.unmodifiableList((List<? extends ApplicationACLMapProto>)this.applicationACLs_);
                }
                return this.applicationACLsBuilder_.getMessageList();
            }
            
            @Override
            public int getApplicationACLsCount() {
                if (this.applicationACLsBuilder_ == null) {
                    return this.applicationACLs_.size();
                }
                return this.applicationACLsBuilder_.getCount();
            }
            
            @Override
            public ApplicationACLMapProto getApplicationACLs(final int index) {
                if (this.applicationACLsBuilder_ == null) {
                    return this.applicationACLs_.get(index);
                }
                return this.applicationACLsBuilder_.getMessage(index);
            }
            
            public Builder setApplicationACLs(final int index, final ApplicationACLMapProto value) {
                if (this.applicationACLsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureApplicationACLsIsMutable();
                    this.applicationACLs_.set(index, value);
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.setMessage(index, value);
                }
                return this;
            }
            
            public Builder setApplicationACLs(final int index, final ApplicationACLMapProto.Builder builderForValue) {
                if (this.applicationACLsBuilder_ == null) {
                    this.ensureApplicationACLsIsMutable();
                    this.applicationACLs_.set(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addApplicationACLs(final ApplicationACLMapProto value) {
                if (this.applicationACLsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureApplicationACLsIsMutable();
                    this.applicationACLs_.add(value);
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.addMessage(value);
                }
                return this;
            }
            
            public Builder addApplicationACLs(final int index, final ApplicationACLMapProto value) {
                if (this.applicationACLsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.ensureApplicationACLsIsMutable();
                    this.applicationACLs_.add(index, value);
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.addMessage(index, value);
                }
                return this;
            }
            
            public Builder addApplicationACLs(final ApplicationACLMapProto.Builder builderForValue) {
                if (this.applicationACLsBuilder_ == null) {
                    this.ensureApplicationACLsIsMutable();
                    this.applicationACLs_.add(builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            
            public Builder addApplicationACLs(final int index, final ApplicationACLMapProto.Builder builderForValue) {
                if (this.applicationACLsBuilder_ == null) {
                    this.ensureApplicationACLsIsMutable();
                    this.applicationACLs_.add(index, builderForValue.build());
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            
            public Builder addAllApplicationACLs(final Iterable<? extends ApplicationACLMapProto> values) {
                if (this.applicationACLsBuilder_ == null) {
                    this.ensureApplicationACLsIsMutable();
                    AbstractMessageLite.Builder.addAll(values, this.applicationACLs_);
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.addAllMessages(values);
                }
                return this;
            }
            
            public Builder clearApplicationACLs() {
                if (this.applicationACLsBuilder_ == null) {
                    this.applicationACLs_ = Collections.emptyList();
                    this.bitField0_ &= 0xFFFFFFDF;
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.clear();
                }
                return this;
            }
            
            public Builder removeApplicationACLs(final int index) {
                if (this.applicationACLsBuilder_ == null) {
                    this.ensureApplicationACLsIsMutable();
                    this.applicationACLs_.remove(index);
                    this.onChanged();
                }
                else {
                    this.applicationACLsBuilder_.remove(index);
                }
                return this;
            }
            
            public ApplicationACLMapProto.Builder getApplicationACLsBuilder(final int index) {
                return this.getApplicationACLsFieldBuilder().getBuilder(index);
            }
            
            @Override
            public ApplicationACLMapProtoOrBuilder getApplicationACLsOrBuilder(final int index) {
                if (this.applicationACLsBuilder_ == null) {
                    return this.applicationACLs_.get(index);
                }
                return this.applicationACLsBuilder_.getMessageOrBuilder(index);
            }
            
            @Override
            public List<? extends ApplicationACLMapProtoOrBuilder> getApplicationACLsOrBuilderList() {
                if (this.applicationACLsBuilder_ != null) {
                    return this.applicationACLsBuilder_.getMessageOrBuilderList();
                }
                return Collections.unmodifiableList((List<? extends ApplicationACLMapProtoOrBuilder>)this.applicationACLs_);
            }
            
            public ApplicationACLMapProto.Builder addApplicationACLsBuilder() {
                return this.getApplicationACLsFieldBuilder().addBuilder(ApplicationACLMapProto.getDefaultInstance());
            }
            
            public ApplicationACLMapProto.Builder addApplicationACLsBuilder(final int index) {
                return this.getApplicationACLsFieldBuilder().addBuilder(index, ApplicationACLMapProto.getDefaultInstance());
            }
            
            public List<ApplicationACLMapProto.Builder> getApplicationACLsBuilderList() {
                return this.getApplicationACLsFieldBuilder().getBuilderList();
            }
            
            private RepeatedFieldBuilder<ApplicationACLMapProto, ApplicationACLMapProto.Builder, ApplicationACLMapProtoOrBuilder> getApplicationACLsFieldBuilder() {
                if (this.applicationACLsBuilder_ == null) {
                    this.applicationACLsBuilder_ = new RepeatedFieldBuilder<ApplicationACLMapProto, ApplicationACLMapProto.Builder, ApplicationACLMapProtoOrBuilder>(this.applicationACLs_, (this.bitField0_ & 0x20) == 0x20, this.getParentForChildren(), this.isClean());
                    this.applicationACLs_ = null;
                }
                return this.applicationACLsBuilder_;
            }
        }
    }
    
    public static final class ContainerStatusProto extends GeneratedMessage implements ContainerStatusProtoOrBuilder
    {
        private static final ContainerStatusProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerStatusProto> PARSER;
        private int bitField0_;
        public static final int CONTAINER_ID_FIELD_NUMBER = 1;
        private ContainerIdProto containerId_;
        public static final int STATE_FIELD_NUMBER = 2;
        private ContainerStateProto state_;
        public static final int DIAGNOSTICS_FIELD_NUMBER = 3;
        private Object diagnostics_;
        public static final int EXIT_STATUS_FIELD_NUMBER = 4;
        private int exitStatus_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerStatusProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerStatusProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerStatusProto getDefaultInstance() {
            return ContainerStatusProto.defaultInstance;
        }
        
        @Override
        public ContainerStatusProto getDefaultInstanceForType() {
            return ContainerStatusProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerStatusProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ContainerIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.containerId_.toBuilder();
                            }
                            this.containerId_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.containerId_);
                                this.containerId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 16: {
                            final int rawValue = input.readEnum();
                            final ContainerStateProto value = ContainerStateProto.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                                continue;
                            }
                            this.bitField0_ |= 0x2;
                            this.state_ = value;
                            continue;
                        }
                        case 26: {
                            this.bitField0_ |= 0x4;
                            this.diagnostics_ = input.readBytes();
                            continue;
                        }
                        case 32: {
                            this.bitField0_ |= 0x8;
                            this.exitStatus_ = input.readInt32();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerStatusProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerStatusProto> getParserForType() {
            return ContainerStatusProto.PARSER;
        }
        
        @Override
        public boolean hasContainerId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ContainerIdProto getContainerId() {
            return this.containerId_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
            return this.containerId_;
        }
        
        @Override
        public boolean hasState() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ContainerStateProto getState() {
            return this.state_;
        }
        
        @Override
        public boolean hasDiagnostics() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public String getDiagnostics() {
            final Object ref = this.diagnostics_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.diagnostics_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getDiagnosticsBytes() {
            final Object ref = this.diagnostics_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.diagnostics_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasExitStatus() {
            return (this.bitField0_ & 0x8) == 0x8;
        }
        
        @Override
        public int getExitStatus() {
            return this.exitStatus_;
        }
        
        private void initFields() {
            this.containerId_ = ContainerIdProto.getDefaultInstance();
            this.state_ = ContainerStateProto.C_NEW;
            this.diagnostics_ = "N/A";
            this.exitStatus_ = -1000;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeEnum(2, this.state_.getNumber());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeBytes(3, this.getDiagnosticsBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                output.writeInt32(4, this.exitStatus_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeEnumSize(2, this.state_.getNumber());
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeBytesSize(3, this.getDiagnosticsBytes());
            }
            if ((this.bitField0_ & 0x8) == 0x8) {
                size += CodedOutputStream.computeInt32Size(4, this.exitStatus_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerStatusProto)) {
                return super.equals(obj);
            }
            final ContainerStatusProto other = (ContainerStatusProto)obj;
            boolean result = true;
            result = (result && this.hasContainerId() == other.hasContainerId());
            if (this.hasContainerId()) {
                result = (result && this.getContainerId().equals(other.getContainerId()));
            }
            result = (result && this.hasState() == other.hasState());
            if (this.hasState()) {
                result = (result && this.getState() == other.getState());
            }
            result = (result && this.hasDiagnostics() == other.hasDiagnostics());
            if (this.hasDiagnostics()) {
                result = (result && this.getDiagnostics().equals(other.getDiagnostics()));
            }
            result = (result && this.hasExitStatus() == other.hasExitStatus());
            if (this.hasExitStatus()) {
                result = (result && this.getExitStatus() == other.getExitStatus());
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasContainerId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getContainerId().hashCode();
            }
            if (this.hasState()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + AbstractMessage.hashEnum(this.getState());
            }
            if (this.hasDiagnostics()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getDiagnostics().hashCode();
            }
            if (this.hasExitStatus()) {
                hash = 37 * hash + 4;
                hash = 53 * hash + this.getExitStatus();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerStatusProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerStatusProto.PARSER.parseFrom(data);
        }
        
        public static ContainerStatusProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerStatusProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerStatusProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerStatusProto.PARSER.parseFrom(data);
        }
        
        public static ContainerStatusProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerStatusProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerStatusProto parseFrom(final InputStream input) throws IOException {
            return ContainerStatusProto.PARSER.parseFrom(input);
        }
        
        public static ContainerStatusProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerStatusProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerStatusProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerStatusProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerStatusProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerStatusProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerStatusProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerStatusProto.PARSER.parseFrom(input);
        }
        
        public static ContainerStatusProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerStatusProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerStatusProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerStatusProto.PARSER = new AbstractParser<ContainerStatusProto>() {
                @Override
                public ContainerStatusProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerStatusProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerStatusProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerStatusProtoOrBuilder
        {
            private int bitField0_;
            private ContainerIdProto containerId_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> containerIdBuilder_;
            private ContainerStateProto state_;
            private Object diagnostics_;
            private int exitStatus_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerStatusProto.class, Builder.class);
            }
            
            private Builder() {
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.state_ = ContainerStateProto.C_NEW;
                this.diagnostics_ = "N/A";
                this.exitStatus_ = -1000;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.state_ = ContainerStateProto.C_NEW;
                this.diagnostics_ = "N/A";
                this.exitStatus_ = -1000;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerStatusProto.alwaysUseFieldBuilders) {
                    this.getContainerIdFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                this.state_ = ContainerStateProto.C_NEW;
                this.bitField0_ &= 0xFFFFFFFD;
                this.diagnostics_ = "N/A";
                this.bitField0_ &= 0xFFFFFFFB;
                this.exitStatus_ = -1000;
                this.bitField0_ &= 0xFFFFFFF7;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerStatusProto_descriptor;
            }
            
            @Override
            public ContainerStatusProto getDefaultInstanceForType() {
                return ContainerStatusProto.getDefaultInstance();
            }
            
            @Override
            public ContainerStatusProto build() {
                final ContainerStatusProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerStatusProto buildPartial() {
                final ContainerStatusProto result = new ContainerStatusProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.containerIdBuilder_ == null) {
                    result.containerId_ = this.containerId_;
                }
                else {
                    result.containerId_ = this.containerIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.state_ = this.state_;
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                result.diagnostics_ = this.diagnostics_;
                if ((from_bitField0_ & 0x8) == 0x8) {
                    to_bitField0_ |= 0x8;
                }
                result.exitStatus_ = this.exitStatus_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerStatusProto) {
                    return this.mergeFrom((ContainerStatusProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerStatusProto other) {
                if (other == ContainerStatusProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasContainerId()) {
                    this.mergeContainerId(other.getContainerId());
                }
                if (other.hasState()) {
                    this.setState(other.getState());
                }
                if (other.hasDiagnostics()) {
                    this.bitField0_ |= 0x4;
                    this.diagnostics_ = other.diagnostics_;
                    this.onChanged();
                }
                if (other.hasExitStatus()) {
                    this.setExitStatus(other.getExitStatus());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerStatusProto parsedMessage = null;
                try {
                    parsedMessage = ContainerStatusProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerStatusProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasContainerId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ContainerIdProto getContainerId() {
                if (this.containerIdBuilder_ == null) {
                    return this.containerId_;
                }
                return this.containerIdBuilder_.getMessage();
            }
            
            public Builder setContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.containerId_ = value;
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setContainerId(final ContainerIdProto.Builder builderForValue) {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.containerId_ != ContainerIdProto.getDefaultInstance()) {
                        this.containerId_ = ContainerIdProto.newBuilder(this.containerId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.containerId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearContainerId() {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ContainerIdProto.Builder getContainerIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getContainerIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
                if (this.containerIdBuilder_ != null) {
                    return this.containerIdBuilder_.getMessageOrBuilder();
                }
                return this.containerId_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getContainerIdFieldBuilder() {
                if (this.containerIdBuilder_ == null) {
                    this.containerIdBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.containerId_, this.getParentForChildren(), this.isClean());
                    this.containerId_ = null;
                }
                return this.containerIdBuilder_;
            }
            
            @Override
            public boolean hasState() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ContainerStateProto getState() {
                return this.state_;
            }
            
            public Builder setState(final ContainerStateProto value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.state_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearState() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.state_ = ContainerStateProto.C_NEW;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasDiagnostics() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public String getDiagnostics() {
                final Object ref = this.diagnostics_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.diagnostics_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getDiagnosticsBytes() {
                final Object ref = this.diagnostics_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.diagnostics_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setDiagnostics(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.diagnostics_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearDiagnostics() {
                this.bitField0_ &= 0xFFFFFFFB;
                this.diagnostics_ = ContainerStatusProto.getDefaultInstance().getDiagnostics();
                this.onChanged();
                return this;
            }
            
            public Builder setDiagnosticsBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x4;
                this.diagnostics_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasExitStatus() {
                return (this.bitField0_ & 0x8) == 0x8;
            }
            
            @Override
            public int getExitStatus() {
                return this.exitStatus_;
            }
            
            public Builder setExitStatus(final int value) {
                this.bitField0_ |= 0x8;
                this.exitStatus_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearExitStatus() {
                this.bitField0_ &= 0xFFFFFFF7;
                this.exitStatus_ = -1000;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class ContainerResourceIncreaseRequestProto extends GeneratedMessage implements ContainerResourceIncreaseRequestProtoOrBuilder
    {
        private static final ContainerResourceIncreaseRequestProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerResourceIncreaseRequestProto> PARSER;
        private int bitField0_;
        public static final int CONTAINER_ID_FIELD_NUMBER = 1;
        private ContainerIdProto containerId_;
        public static final int CAPABILITY_FIELD_NUMBER = 2;
        private ResourceProto capability_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerResourceIncreaseRequestProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerResourceIncreaseRequestProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerResourceIncreaseRequestProto getDefaultInstance() {
            return ContainerResourceIncreaseRequestProto.defaultInstance;
        }
        
        @Override
        public ContainerResourceIncreaseRequestProto getDefaultInstanceForType() {
            return ContainerResourceIncreaseRequestProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerResourceIncreaseRequestProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ContainerIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.containerId_.toBuilder();
                            }
                            this.containerId_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.containerId_);
                                this.containerId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            ResourceProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.capability_.toBuilder();
                            }
                            this.capability_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.capability_);
                                this.capability_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerResourceIncreaseRequestProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerResourceIncreaseRequestProto> getParserForType() {
            return ContainerResourceIncreaseRequestProto.PARSER;
        }
        
        @Override
        public boolean hasContainerId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ContainerIdProto getContainerId() {
            return this.containerId_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
            return this.containerId_;
        }
        
        @Override
        public boolean hasCapability() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ResourceProto getCapability() {
            return this.capability_;
        }
        
        @Override
        public ResourceProtoOrBuilder getCapabilityOrBuilder() {
            return this.capability_;
        }
        
        private void initFields() {
            this.containerId_ = ContainerIdProto.getDefaultInstance();
            this.capability_ = ResourceProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.capability_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.capability_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerResourceIncreaseRequestProto)) {
                return super.equals(obj);
            }
            final ContainerResourceIncreaseRequestProto other = (ContainerResourceIncreaseRequestProto)obj;
            boolean result = true;
            result = (result && this.hasContainerId() == other.hasContainerId());
            if (this.hasContainerId()) {
                result = (result && this.getContainerId().equals(other.getContainerId()));
            }
            result = (result && this.hasCapability() == other.hasCapability());
            if (this.hasCapability()) {
                result = (result && this.getCapability().equals(other.getCapability()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasContainerId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getContainerId().hashCode();
            }
            if (this.hasCapability()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getCapability().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(data);
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(data);
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final InputStream input) throws IOException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(input);
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseRequestProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerResourceIncreaseRequestProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(input);
        }
        
        public static ContainerResourceIncreaseRequestProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceIncreaseRequestProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerResourceIncreaseRequestProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerResourceIncreaseRequestProto.PARSER = new AbstractParser<ContainerResourceIncreaseRequestProto>() {
                @Override
                public ContainerResourceIncreaseRequestProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerResourceIncreaseRequestProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerResourceIncreaseRequestProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerResourceIncreaseRequestProtoOrBuilder
        {
            private int bitField0_;
            private ContainerIdProto containerId_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> containerIdBuilder_;
            private ResourceProto capability_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> capabilityBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerResourceIncreaseRequestProto.class, Builder.class);
            }
            
            private Builder() {
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerResourceIncreaseRequestProto.alwaysUseFieldBuilders) {
                    this.getContainerIdFieldBuilder();
                    this.getCapabilityFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseRequestProto_descriptor;
            }
            
            @Override
            public ContainerResourceIncreaseRequestProto getDefaultInstanceForType() {
                return ContainerResourceIncreaseRequestProto.getDefaultInstance();
            }
            
            @Override
            public ContainerResourceIncreaseRequestProto build() {
                final ContainerResourceIncreaseRequestProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerResourceIncreaseRequestProto buildPartial() {
                final ContainerResourceIncreaseRequestProto result = new ContainerResourceIncreaseRequestProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.containerIdBuilder_ == null) {
                    result.containerId_ = this.containerId_;
                }
                else {
                    result.containerId_ = this.containerIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.capabilityBuilder_ == null) {
                    result.capability_ = this.capability_;
                }
                else {
                    result.capability_ = this.capabilityBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerResourceIncreaseRequestProto) {
                    return this.mergeFrom((ContainerResourceIncreaseRequestProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerResourceIncreaseRequestProto other) {
                if (other == ContainerResourceIncreaseRequestProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasContainerId()) {
                    this.mergeContainerId(other.getContainerId());
                }
                if (other.hasCapability()) {
                    this.mergeCapability(other.getCapability());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerResourceIncreaseRequestProto parsedMessage = null;
                try {
                    parsedMessage = ContainerResourceIncreaseRequestProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerResourceIncreaseRequestProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasContainerId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ContainerIdProto getContainerId() {
                if (this.containerIdBuilder_ == null) {
                    return this.containerId_;
                }
                return this.containerIdBuilder_.getMessage();
            }
            
            public Builder setContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.containerId_ = value;
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setContainerId(final ContainerIdProto.Builder builderForValue) {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.containerId_ != ContainerIdProto.getDefaultInstance()) {
                        this.containerId_ = ContainerIdProto.newBuilder(this.containerId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.containerId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearContainerId() {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ContainerIdProto.Builder getContainerIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getContainerIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
                if (this.containerIdBuilder_ != null) {
                    return this.containerIdBuilder_.getMessageOrBuilder();
                }
                return this.containerId_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getContainerIdFieldBuilder() {
                if (this.containerIdBuilder_ == null) {
                    this.containerIdBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.containerId_, this.getParentForChildren(), this.isClean());
                    this.containerId_ = null;
                }
                return this.containerIdBuilder_;
            }
            
            @Override
            public boolean hasCapability() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ResourceProto getCapability() {
                if (this.capabilityBuilder_ == null) {
                    return this.capability_;
                }
                return this.capabilityBuilder_.getMessage();
            }
            
            public Builder setCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.capability_ = value;
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setCapability(final ResourceProto.Builder builderForValue) {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.capability_ != ResourceProto.getDefaultInstance()) {
                        this.capability_ = ResourceProto.newBuilder(this.capability_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.capability_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearCapability() {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public ResourceProto.Builder getCapabilityBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getCapabilityFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getCapabilityOrBuilder() {
                if (this.capabilityBuilder_ != null) {
                    return this.capabilityBuilder_.getMessageOrBuilder();
                }
                return this.capability_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getCapabilityFieldBuilder() {
                if (this.capabilityBuilder_ == null) {
                    this.capabilityBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.capability_, this.getParentForChildren(), this.isClean());
                    this.capability_ = null;
                }
                return this.capabilityBuilder_;
            }
        }
    }
    
    public static final class ContainerResourceIncreaseProto extends GeneratedMessage implements ContainerResourceIncreaseProtoOrBuilder
    {
        private static final ContainerResourceIncreaseProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerResourceIncreaseProto> PARSER;
        private int bitField0_;
        public static final int CONTAINER_ID_FIELD_NUMBER = 1;
        private ContainerIdProto containerId_;
        public static final int CAPABILITY_FIELD_NUMBER = 2;
        private ResourceProto capability_;
        public static final int CONTAINER_TOKEN_FIELD_NUMBER = 3;
        private SecurityProtos.TokenProto containerToken_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerResourceIncreaseProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerResourceIncreaseProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerResourceIncreaseProto getDefaultInstance() {
            return ContainerResourceIncreaseProto.defaultInstance;
        }
        
        @Override
        public ContainerResourceIncreaseProto getDefaultInstanceForType() {
            return ContainerResourceIncreaseProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerResourceIncreaseProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ContainerIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.containerId_.toBuilder();
                            }
                            this.containerId_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.containerId_);
                                this.containerId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            ResourceProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.capability_.toBuilder();
                            }
                            this.capability_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.capability_);
                                this.capability_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                        case 26: {
                            SecurityProtos.TokenProto.Builder subBuilder3 = null;
                            if ((this.bitField0_ & 0x4) == 0x4) {
                                subBuilder3 = this.containerToken_.toBuilder();
                            }
                            this.containerToken_ = input.readMessage(SecurityProtos.TokenProto.PARSER, extensionRegistry);
                            if (subBuilder3 != null) {
                                subBuilder3.mergeFrom(this.containerToken_);
                                this.containerToken_ = subBuilder3.buildPartial();
                            }
                            this.bitField0_ |= 0x4;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerResourceIncreaseProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerResourceIncreaseProto> getParserForType() {
            return ContainerResourceIncreaseProto.PARSER;
        }
        
        @Override
        public boolean hasContainerId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ContainerIdProto getContainerId() {
            return this.containerId_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
            return this.containerId_;
        }
        
        @Override
        public boolean hasCapability() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ResourceProto getCapability() {
            return this.capability_;
        }
        
        @Override
        public ResourceProtoOrBuilder getCapabilityOrBuilder() {
            return this.capability_;
        }
        
        @Override
        public boolean hasContainerToken() {
            return (this.bitField0_ & 0x4) == 0x4;
        }
        
        @Override
        public SecurityProtos.TokenProto getContainerToken() {
            return this.containerToken_;
        }
        
        @Override
        public SecurityProtos.TokenProtoOrBuilder getContainerTokenOrBuilder() {
            return this.containerToken_;
        }
        
        private void initFields() {
            this.containerId_ = ContainerIdProto.getDefaultInstance();
            this.capability_ = ResourceProto.getDefaultInstance();
            this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            if (this.hasContainerToken() && !this.getContainerToken().isInitialized()) {
                this.memoizedIsInitialized = 0;
                return false;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.capability_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                output.writeMessage(3, this.containerToken_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.capability_);
            }
            if ((this.bitField0_ & 0x4) == 0x4) {
                size += CodedOutputStream.computeMessageSize(3, this.containerToken_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerResourceIncreaseProto)) {
                return super.equals(obj);
            }
            final ContainerResourceIncreaseProto other = (ContainerResourceIncreaseProto)obj;
            boolean result = true;
            result = (result && this.hasContainerId() == other.hasContainerId());
            if (this.hasContainerId()) {
                result = (result && this.getContainerId().equals(other.getContainerId()));
            }
            result = (result && this.hasCapability() == other.hasCapability());
            if (this.hasCapability()) {
                result = (result && this.getCapability().equals(other.getCapability()));
            }
            result = (result && this.hasContainerToken() == other.hasContainerToken());
            if (this.hasContainerToken()) {
                result = (result && this.getContainerToken().equals(other.getContainerToken()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasContainerId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getContainerId().hashCode();
            }
            if (this.hasCapability()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getCapability().hashCode();
            }
            if (this.hasContainerToken()) {
                hash = 37 * hash + 3;
                hash = 53 * hash + this.getContainerToken().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(data);
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(data);
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final InputStream input) throws IOException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(input);
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerResourceIncreaseProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerResourceIncreaseProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceIncreaseProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(input);
        }
        
        public static ContainerResourceIncreaseProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceIncreaseProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerResourceIncreaseProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerResourceIncreaseProto.PARSER = new AbstractParser<ContainerResourceIncreaseProto>() {
                @Override
                public ContainerResourceIncreaseProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerResourceIncreaseProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerResourceIncreaseProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerResourceIncreaseProtoOrBuilder
        {
            private int bitField0_;
            private ContainerIdProto containerId_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> containerIdBuilder_;
            private ResourceProto capability_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> capabilityBuilder_;
            private SecurityProtos.TokenProto containerToken_;
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> containerTokenBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerResourceIncreaseProto.class, Builder.class);
            }
            
            private Builder() {
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerResourceIncreaseProto.alwaysUseFieldBuilders) {
                    this.getContainerIdFieldBuilder();
                    this.getCapabilityFieldBuilder();
                    this.getContainerTokenFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                if (this.containerTokenBuilder_ == null) {
                    this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                }
                else {
                    this.containerTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceIncreaseProto_descriptor;
            }
            
            @Override
            public ContainerResourceIncreaseProto getDefaultInstanceForType() {
                return ContainerResourceIncreaseProto.getDefaultInstance();
            }
            
            @Override
            public ContainerResourceIncreaseProto build() {
                final ContainerResourceIncreaseProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerResourceIncreaseProto buildPartial() {
                final ContainerResourceIncreaseProto result = new ContainerResourceIncreaseProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.containerIdBuilder_ == null) {
                    result.containerId_ = this.containerId_;
                }
                else {
                    result.containerId_ = this.containerIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.capabilityBuilder_ == null) {
                    result.capability_ = this.capability_;
                }
                else {
                    result.capability_ = this.capabilityBuilder_.build();
                }
                if ((from_bitField0_ & 0x4) == 0x4) {
                    to_bitField0_ |= 0x4;
                }
                if (this.containerTokenBuilder_ == null) {
                    result.containerToken_ = this.containerToken_;
                }
                else {
                    result.containerToken_ = this.containerTokenBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerResourceIncreaseProto) {
                    return this.mergeFrom((ContainerResourceIncreaseProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerResourceIncreaseProto other) {
                if (other == ContainerResourceIncreaseProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasContainerId()) {
                    this.mergeContainerId(other.getContainerId());
                }
                if (other.hasCapability()) {
                    this.mergeCapability(other.getCapability());
                }
                if (other.hasContainerToken()) {
                    this.mergeContainerToken(other.getContainerToken());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return !this.hasContainerToken() || this.getContainerToken().isInitialized();
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerResourceIncreaseProto parsedMessage = null;
                try {
                    parsedMessage = ContainerResourceIncreaseProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerResourceIncreaseProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasContainerId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ContainerIdProto getContainerId() {
                if (this.containerIdBuilder_ == null) {
                    return this.containerId_;
                }
                return this.containerIdBuilder_.getMessage();
            }
            
            public Builder setContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.containerId_ = value;
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setContainerId(final ContainerIdProto.Builder builderForValue) {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.containerId_ != ContainerIdProto.getDefaultInstance()) {
                        this.containerId_ = ContainerIdProto.newBuilder(this.containerId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.containerId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearContainerId() {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ContainerIdProto.Builder getContainerIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getContainerIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
                if (this.containerIdBuilder_ != null) {
                    return this.containerIdBuilder_.getMessageOrBuilder();
                }
                return this.containerId_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getContainerIdFieldBuilder() {
                if (this.containerIdBuilder_ == null) {
                    this.containerIdBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.containerId_, this.getParentForChildren(), this.isClean());
                    this.containerId_ = null;
                }
                return this.containerIdBuilder_;
            }
            
            @Override
            public boolean hasCapability() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ResourceProto getCapability() {
                if (this.capabilityBuilder_ == null) {
                    return this.capability_;
                }
                return this.capabilityBuilder_.getMessage();
            }
            
            public Builder setCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.capability_ = value;
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setCapability(final ResourceProto.Builder builderForValue) {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.capability_ != ResourceProto.getDefaultInstance()) {
                        this.capability_ = ResourceProto.newBuilder(this.capability_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.capability_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearCapability() {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public ResourceProto.Builder getCapabilityBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getCapabilityFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getCapabilityOrBuilder() {
                if (this.capabilityBuilder_ != null) {
                    return this.capabilityBuilder_.getMessageOrBuilder();
                }
                return this.capability_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getCapabilityFieldBuilder() {
                if (this.capabilityBuilder_ == null) {
                    this.capabilityBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.capability_, this.getParentForChildren(), this.isClean());
                    this.capability_ = null;
                }
                return this.capabilityBuilder_;
            }
            
            @Override
            public boolean hasContainerToken() {
                return (this.bitField0_ & 0x4) == 0x4;
            }
            
            @Override
            public SecurityProtos.TokenProto getContainerToken() {
                if (this.containerTokenBuilder_ == null) {
                    return this.containerToken_;
                }
                return this.containerTokenBuilder_.getMessage();
            }
            
            public Builder setContainerToken(final SecurityProtos.TokenProto value) {
                if (this.containerTokenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.containerToken_ = value;
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder setContainerToken(final SecurityProtos.TokenProto.Builder builderForValue) {
                if (this.containerTokenBuilder_ == null) {
                    this.containerToken_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder mergeContainerToken(final SecurityProtos.TokenProto value) {
                if (this.containerTokenBuilder_ == null) {
                    if ((this.bitField0_ & 0x4) == 0x4 && this.containerToken_ != SecurityProtos.TokenProto.getDefaultInstance()) {
                        this.containerToken_ = SecurityProtos.TokenProto.newBuilder(this.containerToken_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.containerToken_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x4;
                return this;
            }
            
            public Builder clearContainerToken() {
                if (this.containerTokenBuilder_ == null) {
                    this.containerToken_ = SecurityProtos.TokenProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.containerTokenBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFB;
                return this;
            }
            
            public SecurityProtos.TokenProto.Builder getContainerTokenBuilder() {
                this.bitField0_ |= 0x4;
                this.onChanged();
                return this.getContainerTokenFieldBuilder().getBuilder();
            }
            
            @Override
            public SecurityProtos.TokenProtoOrBuilder getContainerTokenOrBuilder() {
                if (this.containerTokenBuilder_ != null) {
                    return this.containerTokenBuilder_.getMessageOrBuilder();
                }
                return this.containerToken_;
            }
            
            private SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder> getContainerTokenFieldBuilder() {
                if (this.containerTokenBuilder_ == null) {
                    this.containerTokenBuilder_ = new SingleFieldBuilder<SecurityProtos.TokenProto, SecurityProtos.TokenProto.Builder, SecurityProtos.TokenProtoOrBuilder>(this.containerToken_, this.getParentForChildren(), this.isClean());
                    this.containerToken_ = null;
                }
                return this.containerTokenBuilder_;
            }
        }
    }
    
    public static final class ContainerResourceDecreaseProto extends GeneratedMessage implements ContainerResourceDecreaseProtoOrBuilder
    {
        private static final ContainerResourceDecreaseProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<ContainerResourceDecreaseProto> PARSER;
        private int bitField0_;
        public static final int CONTAINER_ID_FIELD_NUMBER = 1;
        private ContainerIdProto containerId_;
        public static final int CAPABILITY_FIELD_NUMBER = 2;
        private ResourceProto capability_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private ContainerResourceDecreaseProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private ContainerResourceDecreaseProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static ContainerResourceDecreaseProto getDefaultInstance() {
            return ContainerResourceDecreaseProto.defaultInstance;
        }
        
        @Override
        public ContainerResourceDecreaseProto getDefaultInstanceForType() {
            return ContainerResourceDecreaseProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private ContainerResourceDecreaseProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            ContainerIdProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x1) == 0x1) {
                                subBuilder = this.containerId_.toBuilder();
                            }
                            this.containerId_ = input.readMessage(ContainerIdProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.containerId_);
                                this.containerId_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x1;
                            continue;
                        }
                        case 18: {
                            ResourceProto.Builder subBuilder2 = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder2 = this.capability_.toBuilder();
                            }
                            this.capability_ = input.readMessage(ResourceProto.PARSER, extensionRegistry);
                            if (subBuilder2 != null) {
                                subBuilder2.mergeFrom(this.capability_);
                                this.capability_ = subBuilder2.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerResourceDecreaseProto.class, Builder.class);
        }
        
        @Override
        public Parser<ContainerResourceDecreaseProto> getParserForType() {
            return ContainerResourceDecreaseProto.PARSER;
        }
        
        @Override
        public boolean hasContainerId() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public ContainerIdProto getContainerId() {
            return this.containerId_;
        }
        
        @Override
        public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
            return this.containerId_;
        }
        
        @Override
        public boolean hasCapability() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ResourceProto getCapability() {
            return this.capability_;
        }
        
        @Override
        public ResourceProtoOrBuilder getCapabilityOrBuilder() {
            return this.capability_;
        }
        
        private void initFields() {
            this.containerId_ = ContainerIdProto.getDefaultInstance();
            this.capability_ = ResourceProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeMessage(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.capability_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeMessageSize(1, this.containerId_);
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.capability_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof ContainerResourceDecreaseProto)) {
                return super.equals(obj);
            }
            final ContainerResourceDecreaseProto other = (ContainerResourceDecreaseProto)obj;
            boolean result = true;
            result = (result && this.hasContainerId() == other.hasContainerId());
            if (this.hasContainerId()) {
                result = (result && this.getContainerId().equals(other.getContainerId()));
            }
            result = (result && this.hasCapability() == other.hasCapability());
            if (this.hasCapability()) {
                result = (result && this.getCapability().equals(other.getCapability()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasContainerId()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getContainerId().hashCode();
            }
            if (this.hasCapability()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getCapability().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(data);
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(data);
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final InputStream input) throws IOException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(input);
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static ContainerResourceDecreaseProto parseDelimitedFrom(final InputStream input) throws IOException {
            return ContainerResourceDecreaseProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static ContainerResourceDecreaseProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceDecreaseProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final CodedInputStream input) throws IOException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(input);
        }
        
        public static ContainerResourceDecreaseProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return ContainerResourceDecreaseProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final ContainerResourceDecreaseProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            ContainerResourceDecreaseProto.PARSER = new AbstractParser<ContainerResourceDecreaseProto>() {
                @Override
                public ContainerResourceDecreaseProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new ContainerResourceDecreaseProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new ContainerResourceDecreaseProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements ContainerResourceDecreaseProtoOrBuilder
        {
            private int bitField0_;
            private ContainerIdProto containerId_;
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> containerIdBuilder_;
            private ResourceProto capability_;
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> capabilityBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_fieldAccessorTable.ensureFieldAccessorsInitialized(ContainerResourceDecreaseProto.class, Builder.class);
            }
            
            private Builder() {
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.containerId_ = ContainerIdProto.getDefaultInstance();
                this.capability_ = ResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (ContainerResourceDecreaseProto.alwaysUseFieldBuilders) {
                    this.getContainerIdFieldBuilder();
                    this.getCapabilityFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_ContainerResourceDecreaseProto_descriptor;
            }
            
            @Override
            public ContainerResourceDecreaseProto getDefaultInstanceForType() {
                return ContainerResourceDecreaseProto.getDefaultInstance();
            }
            
            @Override
            public ContainerResourceDecreaseProto build() {
                final ContainerResourceDecreaseProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public ContainerResourceDecreaseProto buildPartial() {
                final ContainerResourceDecreaseProto result = new ContainerResourceDecreaseProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                if (this.containerIdBuilder_ == null) {
                    result.containerId_ = this.containerId_;
                }
                else {
                    result.containerId_ = this.containerIdBuilder_.build();
                }
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.capabilityBuilder_ == null) {
                    result.capability_ = this.capability_;
                }
                else {
                    result.capability_ = this.capabilityBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof ContainerResourceDecreaseProto) {
                    return this.mergeFrom((ContainerResourceDecreaseProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final ContainerResourceDecreaseProto other) {
                if (other == ContainerResourceDecreaseProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasContainerId()) {
                    this.mergeContainerId(other.getContainerId());
                }
                if (other.hasCapability()) {
                    this.mergeCapability(other.getCapability());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                ContainerResourceDecreaseProto parsedMessage = null;
                try {
                    parsedMessage = ContainerResourceDecreaseProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (ContainerResourceDecreaseProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasContainerId() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public ContainerIdProto getContainerId() {
                if (this.containerIdBuilder_ == null) {
                    return this.containerId_;
                }
                return this.containerIdBuilder_.getMessage();
            }
            
            public Builder setContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.containerId_ = value;
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder setContainerId(final ContainerIdProto.Builder builderForValue) {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder mergeContainerId(final ContainerIdProto value) {
                if (this.containerIdBuilder_ == null) {
                    if ((this.bitField0_ & 0x1) == 0x1 && this.containerId_ != ContainerIdProto.getDefaultInstance()) {
                        this.containerId_ = ContainerIdProto.newBuilder(this.containerId_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.containerId_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x1;
                return this;
            }
            
            public Builder clearContainerId() {
                if (this.containerIdBuilder_ == null) {
                    this.containerId_ = ContainerIdProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.containerIdBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFE;
                return this;
            }
            
            public ContainerIdProto.Builder getContainerIdBuilder() {
                this.bitField0_ |= 0x1;
                this.onChanged();
                return this.getContainerIdFieldBuilder().getBuilder();
            }
            
            @Override
            public ContainerIdProtoOrBuilder getContainerIdOrBuilder() {
                if (this.containerIdBuilder_ != null) {
                    return this.containerIdBuilder_.getMessageOrBuilder();
                }
                return this.containerId_;
            }
            
            private SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder> getContainerIdFieldBuilder() {
                if (this.containerIdBuilder_ == null) {
                    this.containerIdBuilder_ = new SingleFieldBuilder<ContainerIdProto, ContainerIdProto.Builder, ContainerIdProtoOrBuilder>(this.containerId_, this.getParentForChildren(), this.isClean());
                    this.containerId_ = null;
                }
                return this.containerIdBuilder_;
            }
            
            @Override
            public boolean hasCapability() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ResourceProto getCapability() {
                if (this.capabilityBuilder_ == null) {
                    return this.capability_;
                }
                return this.capabilityBuilder_.getMessage();
            }
            
            public Builder setCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.capability_ = value;
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setCapability(final ResourceProto.Builder builderForValue) {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeCapability(final ResourceProto value) {
                if (this.capabilityBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.capability_ != ResourceProto.getDefaultInstance()) {
                        this.capability_ = ResourceProto.newBuilder(this.capability_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.capability_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearCapability() {
                if (this.capabilityBuilder_ == null) {
                    this.capability_ = ResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.capabilityBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public ResourceProto.Builder getCapabilityBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getCapabilityFieldBuilder().getBuilder();
            }
            
            @Override
            public ResourceProtoOrBuilder getCapabilityOrBuilder() {
                if (this.capabilityBuilder_ != null) {
                    return this.capabilityBuilder_.getMessageOrBuilder();
                }
                return this.capability_;
            }
            
            private SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder> getCapabilityFieldBuilder() {
                if (this.capabilityBuilder_ == null) {
                    this.capabilityBuilder_ = new SingleFieldBuilder<ResourceProto, ResourceProto.Builder, ResourceProtoOrBuilder>(this.capability_, this.getParentForChildren(), this.isClean());
                    this.capability_ = null;
                }
                return this.capabilityBuilder_;
            }
        }
    }
    
    public static final class StringLocalResourceMapProto extends GeneratedMessage implements StringLocalResourceMapProtoOrBuilder
    {
        private static final StringLocalResourceMapProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StringLocalResourceMapProto> PARSER;
        private int bitField0_;
        public static final int KEY_FIELD_NUMBER = 1;
        private Object key_;
        public static final int VALUE_FIELD_NUMBER = 2;
        private LocalResourceProto value_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private StringLocalResourceMapProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StringLocalResourceMapProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StringLocalResourceMapProto getDefaultInstance() {
            return StringLocalResourceMapProto.defaultInstance;
        }
        
        @Override
        public StringLocalResourceMapProto getDefaultInstanceForType() {
            return StringLocalResourceMapProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StringLocalResourceMapProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.key_ = input.readBytes();
                            continue;
                        }
                        case 18: {
                            LocalResourceProto.Builder subBuilder = null;
                            if ((this.bitField0_ & 0x2) == 0x2) {
                                subBuilder = this.value_.toBuilder();
                            }
                            this.value_ = input.readMessage(LocalResourceProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(this.value_);
                                this.value_ = subBuilder.buildPartial();
                            }
                            this.bitField0_ |= 0x2;
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StringLocalResourceMapProto.class, Builder.class);
        }
        
        @Override
        public Parser<StringLocalResourceMapProto> getParserForType() {
            return StringLocalResourceMapProto.PARSER;
        }
        
        @Override
        public boolean hasKey() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getKey() {
            final Object ref = this.key_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.key_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getKeyBytes() {
            final Object ref = this.key_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.key_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasValue() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public LocalResourceProto getValue() {
            return this.value_;
        }
        
        @Override
        public LocalResourceProtoOrBuilder getValueOrBuilder() {
            return this.value_;
        }
        
        private void initFields() {
            this.key_ = "";
            this.value_ = LocalResourceProto.getDefaultInstance();
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getKeyBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeMessage(2, this.value_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getKeyBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeMessageSize(2, this.value_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof StringLocalResourceMapProto)) {
                return super.equals(obj);
            }
            final StringLocalResourceMapProto other = (StringLocalResourceMapProto)obj;
            boolean result = true;
            result = (result && this.hasKey() == other.hasKey());
            if (this.hasKey()) {
                result = (result && this.getKey().equals(other.getKey()));
            }
            result = (result && this.hasValue() == other.hasValue());
            if (this.hasValue()) {
                result = (result && this.getValue().equals(other.getValue()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasKey()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getKey().hashCode();
            }
            if (this.hasValue()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getValue().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static StringLocalResourceMapProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return StringLocalResourceMapProto.PARSER.parseFrom(data);
        }
        
        public static StringLocalResourceMapProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StringLocalResourceMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StringLocalResourceMapProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return StringLocalResourceMapProto.PARSER.parseFrom(data);
        }
        
        public static StringLocalResourceMapProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StringLocalResourceMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StringLocalResourceMapProto parseFrom(final InputStream input) throws IOException {
            return StringLocalResourceMapProto.PARSER.parseFrom(input);
        }
        
        public static StringLocalResourceMapProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringLocalResourceMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static StringLocalResourceMapProto parseDelimitedFrom(final InputStream input) throws IOException {
            return StringLocalResourceMapProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static StringLocalResourceMapProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringLocalResourceMapProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static StringLocalResourceMapProto parseFrom(final CodedInputStream input) throws IOException {
            return StringLocalResourceMapProto.PARSER.parseFrom(input);
        }
        
        public static StringLocalResourceMapProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringLocalResourceMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StringLocalResourceMapProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            StringLocalResourceMapProto.PARSER = new AbstractParser<StringLocalResourceMapProto>() {
                @Override
                public StringLocalResourceMapProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new StringLocalResourceMapProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new StringLocalResourceMapProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StringLocalResourceMapProtoOrBuilder
        {
            private int bitField0_;
            private Object key_;
            private LocalResourceProto value_;
            private SingleFieldBuilder<LocalResourceProto, LocalResourceProto.Builder, LocalResourceProtoOrBuilder> valueBuilder_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StringLocalResourceMapProto.class, Builder.class);
            }
            
            private Builder() {
                this.key_ = "";
                this.value_ = LocalResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.key_ = "";
                this.value_ = LocalResourceProto.getDefaultInstance();
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (StringLocalResourceMapProto.alwaysUseFieldBuilders) {
                    this.getValueFieldBuilder();
                }
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.key_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                if (this.valueBuilder_ == null) {
                    this.value_ = LocalResourceProto.getDefaultInstance();
                }
                else {
                    this.valueBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_StringLocalResourceMapProto_descriptor;
            }
            
            @Override
            public StringLocalResourceMapProto getDefaultInstanceForType() {
                return StringLocalResourceMapProto.getDefaultInstance();
            }
            
            @Override
            public StringLocalResourceMapProto build() {
                final StringLocalResourceMapProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public StringLocalResourceMapProto buildPartial() {
                final StringLocalResourceMapProto result = new StringLocalResourceMapProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.key_ = this.key_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                if (this.valueBuilder_ == null) {
                    result.value_ = this.value_;
                }
                else {
                    result.value_ = this.valueBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof StringLocalResourceMapProto) {
                    return this.mergeFrom((StringLocalResourceMapProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final StringLocalResourceMapProto other) {
                if (other == StringLocalResourceMapProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasKey()) {
                    this.bitField0_ |= 0x1;
                    this.key_ = other.key_;
                    this.onChanged();
                }
                if (other.hasValue()) {
                    this.mergeValue(other.getValue());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                StringLocalResourceMapProto parsedMessage = null;
                try {
                    parsedMessage = StringLocalResourceMapProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (StringLocalResourceMapProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasKey() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getKey() {
                final Object ref = this.key_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.key_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getKeyBytes() {
                final Object ref = this.key_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.key_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setKey(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.key_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearKey() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.key_ = StringLocalResourceMapProto.getDefaultInstance().getKey();
                this.onChanged();
                return this;
            }
            
            public Builder setKeyBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.key_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasValue() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public LocalResourceProto getValue() {
                if (this.valueBuilder_ == null) {
                    return this.value_;
                }
                return this.valueBuilder_.getMessage();
            }
            
            public Builder setValue(final LocalResourceProto value) {
                if (this.valueBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    this.value_ = value;
                    this.onChanged();
                }
                else {
                    this.valueBuilder_.setMessage(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder setValue(final LocalResourceProto.Builder builderForValue) {
                if (this.valueBuilder_ == null) {
                    this.value_ = builderForValue.build();
                    this.onChanged();
                }
                else {
                    this.valueBuilder_.setMessage(builderForValue.build());
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder mergeValue(final LocalResourceProto value) {
                if (this.valueBuilder_ == null) {
                    if ((this.bitField0_ & 0x2) == 0x2 && this.value_ != LocalResourceProto.getDefaultInstance()) {
                        this.value_ = LocalResourceProto.newBuilder(this.value_).mergeFrom(value).buildPartial();
                    }
                    else {
                        this.value_ = value;
                    }
                    this.onChanged();
                }
                else {
                    this.valueBuilder_.mergeFrom(value);
                }
                this.bitField0_ |= 0x2;
                return this;
            }
            
            public Builder clearValue() {
                if (this.valueBuilder_ == null) {
                    this.value_ = LocalResourceProto.getDefaultInstance();
                    this.onChanged();
                }
                else {
                    this.valueBuilder_.clear();
                }
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            public LocalResourceProto.Builder getValueBuilder() {
                this.bitField0_ |= 0x2;
                this.onChanged();
                return this.getValueFieldBuilder().getBuilder();
            }
            
            @Override
            public LocalResourceProtoOrBuilder getValueOrBuilder() {
                if (this.valueBuilder_ != null) {
                    return this.valueBuilder_.getMessageOrBuilder();
                }
                return this.value_;
            }
            
            private SingleFieldBuilder<LocalResourceProto, LocalResourceProto.Builder, LocalResourceProtoOrBuilder> getValueFieldBuilder() {
                if (this.valueBuilder_ == null) {
                    this.valueBuilder_ = new SingleFieldBuilder<LocalResourceProto, LocalResourceProto.Builder, LocalResourceProtoOrBuilder>(this.value_, this.getParentForChildren(), this.isClean());
                    this.value_ = null;
                }
                return this.valueBuilder_;
            }
        }
    }
    
    public static final class StringStringMapProto extends GeneratedMessage implements StringStringMapProtoOrBuilder
    {
        private static final StringStringMapProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StringStringMapProto> PARSER;
        private int bitField0_;
        public static final int KEY_FIELD_NUMBER = 1;
        private Object key_;
        public static final int VALUE_FIELD_NUMBER = 2;
        private Object value_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private StringStringMapProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StringStringMapProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StringStringMapProto getDefaultInstance() {
            return StringStringMapProto.defaultInstance;
        }
        
        @Override
        public StringStringMapProto getDefaultInstanceForType() {
            return StringStringMapProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StringStringMapProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.key_ = input.readBytes();
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.value_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StringStringMapProto.class, Builder.class);
        }
        
        @Override
        public Parser<StringStringMapProto> getParserForType() {
            return StringStringMapProto.PARSER;
        }
        
        @Override
        public boolean hasKey() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getKey() {
            final Object ref = this.key_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.key_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getKeyBytes() {
            final Object ref = this.key_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.key_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasValue() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public String getValue() {
            final Object ref = this.value_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.value_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getValueBytes() {
            final Object ref = this.value_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.value_ = b);
            }
            return (ByteString)ref;
        }
        
        private void initFields() {
            this.key_ = "";
            this.value_ = "";
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getKeyBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.getValueBytes());
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getKeyBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.getValueBytes());
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof StringStringMapProto)) {
                return super.equals(obj);
            }
            final StringStringMapProto other = (StringStringMapProto)obj;
            boolean result = true;
            result = (result && this.hasKey() == other.hasKey());
            if (this.hasKey()) {
                result = (result && this.getKey().equals(other.getKey()));
            }
            result = (result && this.hasValue() == other.hasValue());
            if (this.hasValue()) {
                result = (result && this.getValue().equals(other.getValue()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasKey()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getKey().hashCode();
            }
            if (this.hasValue()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getValue().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static StringStringMapProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return StringStringMapProto.PARSER.parseFrom(data);
        }
        
        public static StringStringMapProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StringStringMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StringStringMapProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return StringStringMapProto.PARSER.parseFrom(data);
        }
        
        public static StringStringMapProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StringStringMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StringStringMapProto parseFrom(final InputStream input) throws IOException {
            return StringStringMapProto.PARSER.parseFrom(input);
        }
        
        public static StringStringMapProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringStringMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static StringStringMapProto parseDelimitedFrom(final InputStream input) throws IOException {
            return StringStringMapProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static StringStringMapProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringStringMapProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static StringStringMapProto parseFrom(final CodedInputStream input) throws IOException {
            return StringStringMapProto.PARSER.parseFrom(input);
        }
        
        public static StringStringMapProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringStringMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StringStringMapProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            StringStringMapProto.PARSER = new AbstractParser<StringStringMapProto>() {
                @Override
                public StringStringMapProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new StringStringMapProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new StringStringMapProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StringStringMapProtoOrBuilder
        {
            private int bitField0_;
            private Object key_;
            private Object value_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StringStringMapProto.class, Builder.class);
            }
            
            private Builder() {
                this.key_ = "";
                this.value_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.key_ = "";
                this.value_ = "";
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (StringStringMapProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.key_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.value_ = "";
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_StringStringMapProto_descriptor;
            }
            
            @Override
            public StringStringMapProto getDefaultInstanceForType() {
                return StringStringMapProto.getDefaultInstance();
            }
            
            @Override
            public StringStringMapProto build() {
                final StringStringMapProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public StringStringMapProto buildPartial() {
                final StringStringMapProto result = new StringStringMapProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.key_ = this.key_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.value_ = this.value_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof StringStringMapProto) {
                    return this.mergeFrom((StringStringMapProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final StringStringMapProto other) {
                if (other == StringStringMapProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasKey()) {
                    this.bitField0_ |= 0x1;
                    this.key_ = other.key_;
                    this.onChanged();
                }
                if (other.hasValue()) {
                    this.bitField0_ |= 0x2;
                    this.value_ = other.value_;
                    this.onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                StringStringMapProto parsedMessage = null;
                try {
                    parsedMessage = StringStringMapProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (StringStringMapProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasKey() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getKey() {
                final Object ref = this.key_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.key_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getKeyBytes() {
                final Object ref = this.key_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.key_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setKey(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.key_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearKey() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.key_ = StringStringMapProto.getDefaultInstance().getKey();
                this.onChanged();
                return this;
            }
            
            public Builder setKeyBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.key_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasValue() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public String getValue() {
                final Object ref = this.value_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.value_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getValueBytes() {
                final Object ref = this.value_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.value_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setValue(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.value_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearValue() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.value_ = StringStringMapProto.getDefaultInstance().getValue();
                this.onChanged();
                return this;
            }
            
            public Builder setValueBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.value_ = value;
                this.onChanged();
                return this;
            }
        }
    }
    
    public static final class StringBytesMapProto extends GeneratedMessage implements StringBytesMapProtoOrBuilder
    {
        private static final StringBytesMapProto defaultInstance;
        private final UnknownFieldSet unknownFields;
        public static Parser<StringBytesMapProto> PARSER;
        private int bitField0_;
        public static final int KEY_FIELD_NUMBER = 1;
        private Object key_;
        public static final int VALUE_FIELD_NUMBER = 2;
        private ByteString value_;
        private byte memoizedIsInitialized;
        private int memoizedSerializedSize;
        private static final long serialVersionUID = 0L;
        private int memoizedHashCode;
        
        private StringBytesMapProto(final GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = builder.getUnknownFields();
        }
        
        private StringBytesMapProto(final boolean noInit) {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.unknownFields = UnknownFieldSet.getDefaultInstance();
        }
        
        public static StringBytesMapProto getDefaultInstance() {
            return StringBytesMapProto.defaultInstance;
        }
        
        @Override
        public StringBytesMapProto getDefaultInstanceForType() {
            return StringBytesMapProto.defaultInstance;
        }
        
        @Override
        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }
        
        private StringBytesMapProto(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            this.memoizedIsInitialized = -1;
            this.memoizedSerializedSize = -1;
            this.memoizedHashCode = 0;
            this.initFields();
            final int mutable_bitField0_ = 0;
            final UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    final int tag = input.readTag();
                    switch (tag) {
                        case 0: {
                            done = true;
                            continue;
                        }
                        default: {
                            if (!this.parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                                continue;
                            }
                            continue;
                        }
                        case 10: {
                            this.bitField0_ |= 0x1;
                            this.key_ = input.readBytes();
                            continue;
                        }
                        case 18: {
                            this.bitField0_ |= 0x2;
                            this.value_ = input.readBytes();
                            continue;
                        }
                    }
                }
            }
            catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            }
            catch (IOException e2) {
                throw new InvalidProtocolBufferException(e2.getMessage()).setUnfinishedMessage(this);
            }
            finally {
                this.unknownFields = unknownFields.build();
                this.makeExtensionsImmutable();
            }
        }
        
        public static final Descriptors.Descriptor getDescriptor() {
            return YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_descriptor;
        }
        
        @Override
        protected FieldAccessorTable internalGetFieldAccessorTable() {
            return YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StringBytesMapProto.class, Builder.class);
        }
        
        @Override
        public Parser<StringBytesMapProto> getParserForType() {
            return StringBytesMapProto.PARSER;
        }
        
        @Override
        public boolean hasKey() {
            return (this.bitField0_ & 0x1) == 0x1;
        }
        
        @Override
        public String getKey() {
            final Object ref = this.key_;
            if (ref instanceof String) {
                return (String)ref;
            }
            final ByteString bs = (ByteString)ref;
            final String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
                this.key_ = s;
            }
            return s;
        }
        
        @Override
        public ByteString getKeyBytes() {
            final Object ref = this.key_;
            if (ref instanceof String) {
                final ByteString b = ByteString.copyFromUtf8((String)ref);
                return (ByteString)(this.key_ = b);
            }
            return (ByteString)ref;
        }
        
        @Override
        public boolean hasValue() {
            return (this.bitField0_ & 0x2) == 0x2;
        }
        
        @Override
        public ByteString getValue() {
            return this.value_;
        }
        
        private void initFields() {
            this.key_ = "";
            this.value_ = ByteString.EMPTY;
        }
        
        @Override
        public final boolean isInitialized() {
            final byte isInitialized = this.memoizedIsInitialized;
            if (isInitialized != -1) {
                return isInitialized == 1;
            }
            this.memoizedIsInitialized = 1;
            return true;
        }
        
        @Override
        public void writeTo(final CodedOutputStream output) throws IOException {
            this.getSerializedSize();
            if ((this.bitField0_ & 0x1) == 0x1) {
                output.writeBytes(1, this.getKeyBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                output.writeBytes(2, this.value_);
            }
            this.getUnknownFields().writeTo(output);
        }
        
        @Override
        public int getSerializedSize() {
            int size = this.memoizedSerializedSize;
            if (size != -1) {
                return size;
            }
            size = 0;
            if ((this.bitField0_ & 0x1) == 0x1) {
                size += CodedOutputStream.computeBytesSize(1, this.getKeyBytes());
            }
            if ((this.bitField0_ & 0x2) == 0x2) {
                size += CodedOutputStream.computeBytesSize(2, this.value_);
            }
            size += this.getUnknownFields().getSerializedSize();
            return this.memoizedSerializedSize = size;
        }
        
        @Override
        protected Object writeReplace() throws ObjectStreamException {
            return super.writeReplace();
        }
        
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof StringBytesMapProto)) {
                return super.equals(obj);
            }
            final StringBytesMapProto other = (StringBytesMapProto)obj;
            boolean result = true;
            result = (result && this.hasKey() == other.hasKey());
            if (this.hasKey()) {
                result = (result && this.getKey().equals(other.getKey()));
            }
            result = (result && this.hasValue() == other.hasValue());
            if (this.hasValue()) {
                result = (result && this.getValue().equals(other.getValue()));
            }
            result = (result && this.getUnknownFields().equals(other.getUnknownFields()));
            return result;
        }
        
        @Override
        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int hash = 41;
            hash = 19 * hash + this.getDescriptorForType().hashCode();
            if (this.hasKey()) {
                hash = 37 * hash + 1;
                hash = 53 * hash + this.getKey().hashCode();
            }
            if (this.hasValue()) {
                hash = 37 * hash + 2;
                hash = 53 * hash + this.getValue().hashCode();
            }
            hash = 29 * hash + this.getUnknownFields().hashCode();
            return this.memoizedHashCode = hash;
        }
        
        public static StringBytesMapProto parseFrom(final ByteString data) throws InvalidProtocolBufferException {
            return StringBytesMapProto.PARSER.parseFrom(data);
        }
        
        public static StringBytesMapProto parseFrom(final ByteString data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StringBytesMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StringBytesMapProto parseFrom(final byte[] data) throws InvalidProtocolBufferException {
            return StringBytesMapProto.PARSER.parseFrom(data);
        }
        
        public static StringBytesMapProto parseFrom(final byte[] data, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
            return StringBytesMapProto.PARSER.parseFrom(data, extensionRegistry);
        }
        
        public static StringBytesMapProto parseFrom(final InputStream input) throws IOException {
            return StringBytesMapProto.PARSER.parseFrom(input);
        }
        
        public static StringBytesMapProto parseFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringBytesMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static StringBytesMapProto parseDelimitedFrom(final InputStream input) throws IOException {
            return StringBytesMapProto.PARSER.parseDelimitedFrom(input);
        }
        
        public static StringBytesMapProto parseDelimitedFrom(final InputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringBytesMapProto.PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        
        public static StringBytesMapProto parseFrom(final CodedInputStream input) throws IOException {
            return StringBytesMapProto.PARSER.parseFrom(input);
        }
        
        public static StringBytesMapProto parseFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
            return StringBytesMapProto.PARSER.parseFrom(input, extensionRegistry);
        }
        
        public static Builder newBuilder() {
            return create();
        }
        
        @Override
        public Builder newBuilderForType() {
            return newBuilder();
        }
        
        public static Builder newBuilder(final StringBytesMapProto prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        
        @Override
        public Builder toBuilder() {
            return newBuilder(this);
        }
        
        @Override
        protected Builder newBuilderForType(final BuilderParent parent) {
            final Builder builder = new Builder(parent);
            return builder;
        }
        
        static {
            StringBytesMapProto.PARSER = new AbstractParser<StringBytesMapProto>() {
                @Override
                public StringBytesMapProto parsePartialFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
                    return new StringBytesMapProto(input, extensionRegistry);
                }
            };
            (defaultInstance = new StringBytesMapProto(true)).initFields();
        }
        
        public static final class Builder extends GeneratedMessage.Builder<Builder> implements StringBytesMapProtoOrBuilder
        {
            private int bitField0_;
            private Object key_;
            private ByteString value_;
            
            public static final Descriptors.Descriptor getDescriptor() {
                return YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_descriptor;
            }
            
            @Override
            protected FieldAccessorTable internalGetFieldAccessorTable() {
                return YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_fieldAccessorTable.ensureFieldAccessorsInitialized(StringBytesMapProto.class, Builder.class);
            }
            
            private Builder() {
                this.key_ = "";
                this.value_ = ByteString.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private Builder(final BuilderParent parent) {
                super(parent);
                this.key_ = "";
                this.value_ = ByteString.EMPTY;
                this.maybeForceBuilderInitialization();
            }
            
            private void maybeForceBuilderInitialization() {
                if (StringBytesMapProto.alwaysUseFieldBuilders) {}
            }
            
            private static Builder create() {
                return new Builder();
            }
            
            @Override
            public Builder clear() {
                super.clear();
                this.key_ = "";
                this.bitField0_ &= 0xFFFFFFFE;
                this.value_ = ByteString.EMPTY;
                this.bitField0_ &= 0xFFFFFFFD;
                return this;
            }
            
            @Override
            public Builder clone() {
                return create().mergeFrom(this.buildPartial());
            }
            
            @Override
            public Descriptors.Descriptor getDescriptorForType() {
                return YarnProtos.internal_static_hadoop_yarn_StringBytesMapProto_descriptor;
            }
            
            @Override
            public StringBytesMapProto getDefaultInstanceForType() {
                return StringBytesMapProto.getDefaultInstance();
            }
            
            @Override
            public StringBytesMapProto build() {
                final StringBytesMapProto result = this.buildPartial();
                if (!result.isInitialized()) {
                    throw AbstractMessage.Builder.newUninitializedMessageException(result);
                }
                return result;
            }
            
            @Override
            public StringBytesMapProto buildPartial() {
                final StringBytesMapProto result = new StringBytesMapProto((GeneratedMessage.Builder)this);
                final int from_bitField0_ = this.bitField0_;
                int to_bitField0_ = 0;
                if ((from_bitField0_ & 0x1) == 0x1) {
                    to_bitField0_ |= 0x1;
                }
                result.key_ = this.key_;
                if ((from_bitField0_ & 0x2) == 0x2) {
                    to_bitField0_ |= 0x2;
                }
                result.value_ = this.value_;
                result.bitField0_ = to_bitField0_;
                this.onBuilt();
                return result;
            }
            
            @Override
            public Builder mergeFrom(final Message other) {
                if (other instanceof StringBytesMapProto) {
                    return this.mergeFrom((StringBytesMapProto)other);
                }
                super.mergeFrom(other);
                return this;
            }
            
            public Builder mergeFrom(final StringBytesMapProto other) {
                if (other == StringBytesMapProto.getDefaultInstance()) {
                    return this;
                }
                if (other.hasKey()) {
                    this.bitField0_ |= 0x1;
                    this.key_ = other.key_;
                    this.onChanged();
                }
                if (other.hasValue()) {
                    this.setValue(other.getValue());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }
            
            @Override
            public final boolean isInitialized() {
                return true;
            }
            
            @Override
            public Builder mergeFrom(final CodedInputStream input, final ExtensionRegistryLite extensionRegistry) throws IOException {
                StringBytesMapProto parsedMessage = null;
                try {
                    parsedMessage = StringBytesMapProto.PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (InvalidProtocolBufferException e) {
                    parsedMessage = (StringBytesMapProto)e.getUnfinishedMessage();
                    throw e;
                }
                finally {
                    if (parsedMessage != null) {
                        this.mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            
            @Override
            public boolean hasKey() {
                return (this.bitField0_ & 0x1) == 0x1;
            }
            
            @Override
            public String getKey() {
                final Object ref = this.key_;
                if (!(ref instanceof String)) {
                    final String s = ((ByteString)ref).toStringUtf8();
                    return (String)(this.key_ = s);
                }
                return (String)ref;
            }
            
            @Override
            public ByteString getKeyBytes() {
                final Object ref = this.key_;
                if (ref instanceof String) {
                    final ByteString b = ByteString.copyFromUtf8((String)ref);
                    return (ByteString)(this.key_ = b);
                }
                return (ByteString)ref;
            }
            
            public Builder setKey(final String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.key_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearKey() {
                this.bitField0_ &= 0xFFFFFFFE;
                this.key_ = StringBytesMapProto.getDefaultInstance().getKey();
                this.onChanged();
                return this;
            }
            
            public Builder setKeyBytes(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x1;
                this.key_ = value;
                this.onChanged();
                return this;
            }
            
            @Override
            public boolean hasValue() {
                return (this.bitField0_ & 0x2) == 0x2;
            }
            
            @Override
            public ByteString getValue() {
                return this.value_;
            }
            
            public Builder setValue(final ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                this.bitField0_ |= 0x2;
                this.value_ = value;
                this.onChanged();
                return this;
            }
            
            public Builder clearValue() {
                this.bitField0_ &= 0xFFFFFFFD;
                this.value_ = StringBytesMapProto.getDefaultInstance().getValue();
                this.onChanged();
                return this;
            }
        }
    }
    
    public interface StringBytesMapProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasKey();
        
        String getKey();
        
        ByteString getKeyBytes();
        
        boolean hasValue();
        
        ByteString getValue();
    }
    
    public interface StringStringMapProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasKey();
        
        String getKey();
        
        ByteString getKeyBytes();
        
        boolean hasValue();
        
        String getValue();
        
        ByteString getValueBytes();
    }
    
    public interface URLProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasScheme();
        
        String getScheme();
        
        ByteString getSchemeBytes();
        
        boolean hasHost();
        
        String getHost();
        
        ByteString getHostBytes();
        
        boolean hasPort();
        
        int getPort();
        
        boolean hasFile();
        
        String getFile();
        
        ByteString getFileBytes();
        
        boolean hasUserInfo();
        
        String getUserInfo();
        
        ByteString getUserInfoBytes();
    }
    
    public interface LocalResourceProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasResource();
        
        URLProto getResource();
        
        URLProtoOrBuilder getResourceOrBuilder();
        
        boolean hasSize();
        
        long getSize();
        
        boolean hasTimestamp();
        
        long getTimestamp();
        
        boolean hasType();
        
        LocalResourceTypeProto getType();
        
        boolean hasVisibility();
        
        LocalResourceVisibilityProto getVisibility();
        
        boolean hasPattern();
        
        String getPattern();
        
        ByteString getPatternBytes();
    }
    
    public interface StringLocalResourceMapProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasKey();
        
        String getKey();
        
        ByteString getKeyBytes();
        
        boolean hasValue();
        
        LocalResourceProto getValue();
        
        LocalResourceProtoOrBuilder getValueOrBuilder();
    }
    
    public interface ApplicationIdProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        int getId();
        
        boolean hasClusterTimestamp();
        
        long getClusterTimestamp();
    }
    
    public interface ApplicationAttemptIdProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasApplicationId();
        
        ApplicationIdProto getApplicationId();
        
        ApplicationIdProtoOrBuilder getApplicationIdOrBuilder();
        
        boolean hasAttemptId();
        
        int getAttemptId();
    }
    
    public interface ContainerIdProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasAppId();
        
        ApplicationIdProto getAppId();
        
        ApplicationIdProtoOrBuilder getAppIdOrBuilder();
        
        boolean hasAppAttemptId();
        
        ApplicationAttemptIdProto getAppAttemptId();
        
        ApplicationAttemptIdProtoOrBuilder getAppAttemptIdOrBuilder();
        
        boolean hasId();
        
        long getId();
    }
    
    public interface ResourceProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasMemory();
        
        int getMemory();
        
        boolean hasVirtualCores();
        
        int getVirtualCores();
    }
    
    public interface ContainerResourceDecreaseProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasContainerId();
        
        ContainerIdProto getContainerId();
        
        ContainerIdProtoOrBuilder getContainerIdOrBuilder();
        
        boolean hasCapability();
        
        ResourceProto getCapability();
        
        ResourceProtoOrBuilder getCapabilityOrBuilder();
    }
    
    public interface ContainerResourceIncreaseProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasContainerId();
        
        ContainerIdProto getContainerId();
        
        ContainerIdProtoOrBuilder getContainerIdOrBuilder();
        
        boolean hasCapability();
        
        ResourceProto getCapability();
        
        ResourceProtoOrBuilder getCapabilityOrBuilder();
        
        boolean hasContainerToken();
        
        SecurityProtos.TokenProto getContainerToken();
        
        SecurityProtos.TokenProtoOrBuilder getContainerTokenOrBuilder();
    }
    
    public interface ContainerResourceIncreaseRequestProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasContainerId();
        
        ContainerIdProto getContainerId();
        
        ContainerIdProtoOrBuilder getContainerIdOrBuilder();
        
        boolean hasCapability();
        
        ResourceProto getCapability();
        
        ResourceProtoOrBuilder getCapabilityOrBuilder();
    }
    
    public interface ContainerStatusProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasContainerId();
        
        ContainerIdProto getContainerId();
        
        ContainerIdProtoOrBuilder getContainerIdOrBuilder();
        
        boolean hasState();
        
        ContainerStateProto getState();
        
        boolean hasDiagnostics();
        
        String getDiagnostics();
        
        ByteString getDiagnosticsBytes();
        
        boolean hasExitStatus();
        
        int getExitStatus();
    }
    
    public interface ApplicationACLMapProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasAccessType();
        
        ApplicationAccessTypeProto getAccessType();
        
        boolean hasAcl();
        
        String getAcl();
        
        ByteString getAclBytes();
    }
    
    public interface ContainerLaunchContextProtoOrBuilder extends MessageOrBuilder
    {
        List<StringLocalResourceMapProto> getLocalResourcesList();
        
        StringLocalResourceMapProto getLocalResources(final int p0);
        
        int getLocalResourcesCount();
        
        List<? extends StringLocalResourceMapProtoOrBuilder> getLocalResourcesOrBuilderList();
        
        StringLocalResourceMapProtoOrBuilder getLocalResourcesOrBuilder(final int p0);
        
        boolean hasTokens();
        
        ByteString getTokens();
        
        List<StringBytesMapProto> getServiceDataList();
        
        StringBytesMapProto getServiceData(final int p0);
        
        int getServiceDataCount();
        
        List<? extends StringBytesMapProtoOrBuilder> getServiceDataOrBuilderList();
        
        StringBytesMapProtoOrBuilder getServiceDataOrBuilder(final int p0);
        
        List<StringStringMapProto> getEnvironmentList();
        
        StringStringMapProto getEnvironment(final int p0);
        
        int getEnvironmentCount();
        
        List<? extends StringStringMapProtoOrBuilder> getEnvironmentOrBuilderList();
        
        StringStringMapProtoOrBuilder getEnvironmentOrBuilder(final int p0);
        
        List<String> getCommandList();
        
        int getCommandCount();
        
        String getCommand(final int p0);
        
        ByteString getCommandBytes(final int p0);
        
        List<ApplicationACLMapProto> getApplicationACLsList();
        
        ApplicationACLMapProto getApplicationACLs(final int p0);
        
        int getApplicationACLsCount();
        
        List<? extends ApplicationACLMapProtoOrBuilder> getApplicationACLsOrBuilderList();
        
        ApplicationACLMapProtoOrBuilder getApplicationACLsOrBuilder(final int p0);
    }
    
    public interface ReservationRequestProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasCapability();
        
        ResourceProto getCapability();
        
        ResourceProtoOrBuilder getCapabilityOrBuilder();
        
        boolean hasNumContainers();
        
        int getNumContainers();
        
        boolean hasConcurrency();
        
        int getConcurrency();
        
        boolean hasDuration();
        
        long getDuration();
    }
    
    public interface ReservationRequestsProtoOrBuilder extends MessageOrBuilder
    {
        List<ReservationRequestProto> getReservationResourcesList();
        
        ReservationRequestProto getReservationResources(final int p0);
        
        int getReservationResourcesCount();
        
        List<? extends ReservationRequestProtoOrBuilder> getReservationResourcesOrBuilderList();
        
        ReservationRequestProtoOrBuilder getReservationResourcesOrBuilder(final int p0);
        
        boolean hasInterpreter();
        
        ReservationRequestInterpreterProto getInterpreter();
    }
    
    public interface ReservationDefinitionProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasReservationRequests();
        
        ReservationRequestsProto getReservationRequests();
        
        ReservationRequestsProtoOrBuilder getReservationRequestsOrBuilder();
        
        boolean hasArrival();
        
        long getArrival();
        
        boolean hasDeadline();
        
        long getDeadline();
        
        boolean hasReservationName();
        
        String getReservationName();
        
        ByteString getReservationNameBytes();
    }
    
    public interface ReservationIdProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        long getId();
        
        boolean hasClusterTimestamp();
        
        long getClusterTimestamp();
    }
    
    public interface QueueUserACLInfoProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasQueueName();
        
        String getQueueName();
        
        ByteString getQueueNameBytes();
        
        List<QueueACLProto> getUserAclsList();
        
        int getUserAclsCount();
        
        QueueACLProto getUserAcls(final int p0);
    }
    
    public interface QueueInfoProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasQueueName();
        
        String getQueueName();
        
        ByteString getQueueNameBytes();
        
        boolean hasCapacity();
        
        float getCapacity();
        
        boolean hasMaximumCapacity();
        
        float getMaximumCapacity();
        
        boolean hasCurrentCapacity();
        
        float getCurrentCapacity();
        
        boolean hasState();
        
        QueueStateProto getState();
        
        List<QueueInfoProto> getChildQueuesList();
        
        QueueInfoProto getChildQueues(final int p0);
        
        int getChildQueuesCount();
        
        List<? extends QueueInfoProtoOrBuilder> getChildQueuesOrBuilderList();
        
        QueueInfoProtoOrBuilder getChildQueuesOrBuilder(final int p0);
        
        List<ApplicationReportProto> getApplicationsList();
        
        ApplicationReportProto getApplications(final int p0);
        
        int getApplicationsCount();
        
        List<? extends ApplicationReportProtoOrBuilder> getApplicationsOrBuilderList();
        
        ApplicationReportProtoOrBuilder getApplicationsOrBuilder(final int p0);
        
        List<String> getAccessibleNodeLabelsList();
        
        int getAccessibleNodeLabelsCount();
        
        String getAccessibleNodeLabels(final int p0);
        
        ByteString getAccessibleNodeLabelsBytes(final int p0);
        
        boolean hasDefaultNodeLabelExpression();
        
        String getDefaultNodeLabelExpression();
        
        ByteString getDefaultNodeLabelExpressionBytes();
    }
    
    public interface ApplicationResourceUsageReportProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasNumUsedContainers();
        
        int getNumUsedContainers();
        
        boolean hasNumReservedContainers();
        
        int getNumReservedContainers();
        
        boolean hasUsedResources();
        
        ResourceProto getUsedResources();
        
        ResourceProtoOrBuilder getUsedResourcesOrBuilder();
        
        boolean hasReservedResources();
        
        ResourceProto getReservedResources();
        
        ResourceProtoOrBuilder getReservedResourcesOrBuilder();
        
        boolean hasNeededResources();
        
        ResourceProto getNeededResources();
        
        ResourceProtoOrBuilder getNeededResourcesOrBuilder();
        
        boolean hasMemorySeconds();
        
        long getMemorySeconds();
        
        boolean hasVcoreSeconds();
        
        long getVcoreSeconds();
    }
    
    public interface ApplicationReportProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasApplicationId();
        
        ApplicationIdProto getApplicationId();
        
        ApplicationIdProtoOrBuilder getApplicationIdOrBuilder();
        
        boolean hasUser();
        
        String getUser();
        
        ByteString getUserBytes();
        
        boolean hasQueue();
        
        String getQueue();
        
        ByteString getQueueBytes();
        
        boolean hasName();
        
        String getName();
        
        ByteString getNameBytes();
        
        boolean hasHost();
        
        String getHost();
        
        ByteString getHostBytes();
        
        boolean hasRpcPort();
        
        int getRpcPort();
        
        boolean hasClientToAmToken();
        
        SecurityProtos.TokenProto getClientToAmToken();
        
        SecurityProtos.TokenProtoOrBuilder getClientToAmTokenOrBuilder();
        
        boolean hasYarnApplicationState();
        
        YarnApplicationStateProto getYarnApplicationState();
        
        boolean hasTrackingUrl();
        
        String getTrackingUrl();
        
        ByteString getTrackingUrlBytes();
        
        boolean hasDiagnostics();
        
        String getDiagnostics();
        
        ByteString getDiagnosticsBytes();
        
        boolean hasStartTime();
        
        long getStartTime();
        
        boolean hasFinishTime();
        
        long getFinishTime();
        
        boolean hasFinalApplicationStatus();
        
        FinalApplicationStatusProto getFinalApplicationStatus();
        
        boolean hasAppResourceUsage();
        
        ApplicationResourceUsageReportProto getAppResourceUsage();
        
        ApplicationResourceUsageReportProtoOrBuilder getAppResourceUsageOrBuilder();
        
        boolean hasOriginalTrackingUrl();
        
        String getOriginalTrackingUrl();
        
        ByteString getOriginalTrackingUrlBytes();
        
        boolean hasCurrentApplicationAttemptId();
        
        ApplicationAttemptIdProto getCurrentApplicationAttemptId();
        
        ApplicationAttemptIdProtoOrBuilder getCurrentApplicationAttemptIdOrBuilder();
        
        boolean hasProgress();
        
        float getProgress();
        
        boolean hasApplicationType();
        
        String getApplicationType();
        
        ByteString getApplicationTypeBytes();
        
        boolean hasAmRmToken();
        
        SecurityProtos.TokenProto getAmRmToken();
        
        SecurityProtos.TokenProtoOrBuilder getAmRmTokenOrBuilder();
        
        List<String> getApplicationTagsList();
        
        int getApplicationTagsCount();
        
        String getApplicationTags(final int p0);
        
        ByteString getApplicationTagsBytes(final int p0);
    }
    
    public interface YarnClusterMetricsProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasNumNodeManagers();
        
        int getNumNodeManagers();
    }
    
    public interface LogAggregationContextProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasIncludePattern();
        
        String getIncludePattern();
        
        ByteString getIncludePatternBytes();
        
        boolean hasExcludePattern();
        
        String getExcludePattern();
        
        ByteString getExcludePatternBytes();
    }
    
    public interface PriorityProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasPriority();
        
        int getPriority();
    }
    
    public interface ResourceRequestProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasPriority();
        
        PriorityProto getPriority();
        
        PriorityProtoOrBuilder getPriorityOrBuilder();
        
        boolean hasResourceName();
        
        String getResourceName();
        
        ByteString getResourceNameBytes();
        
        boolean hasCapability();
        
        ResourceProto getCapability();
        
        ResourceProtoOrBuilder getCapabilityOrBuilder();
        
        boolean hasNumContainers();
        
        int getNumContainers();
        
        boolean hasRelaxLocality();
        
        boolean getRelaxLocality();
        
        boolean hasNodeLabelExpression();
        
        String getNodeLabelExpression();
        
        ByteString getNodeLabelExpressionBytes();
    }
    
    public interface ApplicationSubmissionContextProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasApplicationId();
        
        ApplicationIdProto getApplicationId();
        
        ApplicationIdProtoOrBuilder getApplicationIdOrBuilder();
        
        boolean hasApplicationName();
        
        String getApplicationName();
        
        ByteString getApplicationNameBytes();
        
        boolean hasQueue();
        
        String getQueue();
        
        ByteString getQueueBytes();
        
        boolean hasPriority();
        
        PriorityProto getPriority();
        
        PriorityProtoOrBuilder getPriorityOrBuilder();
        
        boolean hasAmContainerSpec();
        
        ContainerLaunchContextProto getAmContainerSpec();
        
        ContainerLaunchContextProtoOrBuilder getAmContainerSpecOrBuilder();
        
        boolean hasCancelTokensWhenComplete();
        
        boolean getCancelTokensWhenComplete();
        
        boolean hasUnmanagedAm();
        
        boolean getUnmanagedAm();
        
        boolean hasMaxAppAttempts();
        
        int getMaxAppAttempts();
        
        boolean hasResource();
        
        ResourceProto getResource();
        
        ResourceProtoOrBuilder getResourceOrBuilder();
        
        boolean hasApplicationType();
        
        String getApplicationType();
        
        ByteString getApplicationTypeBytes();
        
        boolean hasKeepContainersAcrossApplicationAttempts();
        
        boolean getKeepContainersAcrossApplicationAttempts();
        
        List<String> getApplicationTagsList();
        
        int getApplicationTagsCount();
        
        String getApplicationTags(final int p0);
        
        ByteString getApplicationTagsBytes(final int p0);
        
        boolean hasAttemptFailuresValidityInterval();
        
        long getAttemptFailuresValidityInterval();
        
        boolean hasLogAggregationContext();
        
        LogAggregationContextProto getLogAggregationContext();
        
        LogAggregationContextProtoOrBuilder getLogAggregationContextOrBuilder();
        
        boolean hasReservationId();
        
        ReservationIdProto getReservationId();
        
        ReservationIdProtoOrBuilder getReservationIdOrBuilder();
        
        boolean hasNodeLabelExpression();
        
        String getNodeLabelExpression();
        
        ByteString getNodeLabelExpressionBytes();
        
        boolean hasAmContainerResourceRequest();
        
        ResourceRequestProto getAmContainerResourceRequest();
        
        ResourceRequestProtoOrBuilder getAmContainerResourceRequestOrBuilder();
    }
    
    public interface ResourceBlacklistRequestProtoOrBuilder extends MessageOrBuilder
    {
        List<String> getBlacklistAdditionsList();
        
        int getBlacklistAdditionsCount();
        
        String getBlacklistAdditions(final int p0);
        
        ByteString getBlacklistAdditionsBytes(final int p0);
        
        List<String> getBlacklistRemovalsList();
        
        int getBlacklistRemovalsCount();
        
        String getBlacklistRemovals(final int p0);
        
        ByteString getBlacklistRemovalsBytes(final int p0);
    }
    
    public interface PreemptionResourceRequestProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasResource();
        
        ResourceRequestProto getResource();
        
        ResourceRequestProtoOrBuilder getResourceOrBuilder();
    }
    
    public interface PreemptionContainerProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        ContainerIdProto getId();
        
        ContainerIdProtoOrBuilder getIdOrBuilder();
    }
    
    public interface PreemptionContractProtoOrBuilder extends MessageOrBuilder
    {
        List<PreemptionResourceRequestProto> getResourceList();
        
        PreemptionResourceRequestProto getResource(final int p0);
        
        int getResourceCount();
        
        List<? extends PreemptionResourceRequestProtoOrBuilder> getResourceOrBuilderList();
        
        PreemptionResourceRequestProtoOrBuilder getResourceOrBuilder(final int p0);
        
        List<PreemptionContainerProto> getContainerList();
        
        PreemptionContainerProto getContainer(final int p0);
        
        int getContainerCount();
        
        List<? extends PreemptionContainerProtoOrBuilder> getContainerOrBuilderList();
        
        PreemptionContainerProtoOrBuilder getContainerOrBuilder(final int p0);
    }
    
    public interface StrictPreemptionContractProtoOrBuilder extends MessageOrBuilder
    {
        List<PreemptionContainerProto> getContainerList();
        
        PreemptionContainerProto getContainer(final int p0);
        
        int getContainerCount();
        
        List<? extends PreemptionContainerProtoOrBuilder> getContainerOrBuilderList();
        
        PreemptionContainerProtoOrBuilder getContainerOrBuilder(final int p0);
    }
    
    public interface PreemptionMessageProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasStrictContract();
        
        StrictPreemptionContractProto getStrictContract();
        
        StrictPreemptionContractProtoOrBuilder getStrictContractOrBuilder();
        
        boolean hasContract();
        
        PreemptionContractProto getContract();
        
        PreemptionContractProtoOrBuilder getContractOrBuilder();
    }
    
    public interface NodeIdProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasHost();
        
        String getHost();
        
        ByteString getHostBytes();
        
        boolean hasPort();
        
        int getPort();
    }
    
    public interface NodeIdToLabelsProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasNodeId();
        
        NodeIdProto getNodeId();
        
        NodeIdProtoOrBuilder getNodeIdOrBuilder();
        
        List<String> getNodeLabelsList();
        
        int getNodeLabelsCount();
        
        String getNodeLabels(final int p0);
        
        ByteString getNodeLabelsBytes(final int p0);
    }
    
    public interface NodeReportProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasNodeId();
        
        NodeIdProto getNodeId();
        
        NodeIdProtoOrBuilder getNodeIdOrBuilder();
        
        boolean hasHttpAddress();
        
        String getHttpAddress();
        
        ByteString getHttpAddressBytes();
        
        boolean hasRackName();
        
        String getRackName();
        
        ByteString getRackNameBytes();
        
        boolean hasUsed();
        
        ResourceProto getUsed();
        
        ResourceProtoOrBuilder getUsedOrBuilder();
        
        boolean hasCapability();
        
        ResourceProto getCapability();
        
        ResourceProtoOrBuilder getCapabilityOrBuilder();
        
        boolean hasNumContainers();
        
        int getNumContainers();
        
        boolean hasNodeState();
        
        NodeStateProto getNodeState();
        
        boolean hasHealthReport();
        
        String getHealthReport();
        
        ByteString getHealthReportBytes();
        
        boolean hasLastHealthReportTime();
        
        long getLastHealthReportTime();
        
        List<String> getNodeLabelsList();
        
        int getNodeLabelsCount();
        
        String getNodeLabels(final int p0);
        
        ByteString getNodeLabelsBytes(final int p0);
    }
    
    public interface ApplicationAttemptReportProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasApplicationAttemptId();
        
        ApplicationAttemptIdProto getApplicationAttemptId();
        
        ApplicationAttemptIdProtoOrBuilder getApplicationAttemptIdOrBuilder();
        
        boolean hasHost();
        
        String getHost();
        
        ByteString getHostBytes();
        
        boolean hasRpcPort();
        
        int getRpcPort();
        
        boolean hasTrackingUrl();
        
        String getTrackingUrl();
        
        ByteString getTrackingUrlBytes();
        
        boolean hasDiagnostics();
        
        String getDiagnostics();
        
        ByteString getDiagnosticsBytes();
        
        boolean hasYarnApplicationAttemptState();
        
        YarnApplicationAttemptStateProto getYarnApplicationAttemptState();
        
        boolean hasAmContainerId();
        
        ContainerIdProto getAmContainerId();
        
        ContainerIdProtoOrBuilder getAmContainerIdOrBuilder();
        
        boolean hasOriginalTrackingUrl();
        
        String getOriginalTrackingUrl();
        
        ByteString getOriginalTrackingUrlBytes();
    }
    
    public interface ContainerReportProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasContainerId();
        
        ContainerIdProto getContainerId();
        
        ContainerIdProtoOrBuilder getContainerIdOrBuilder();
        
        boolean hasResource();
        
        ResourceProto getResource();
        
        ResourceProtoOrBuilder getResourceOrBuilder();
        
        boolean hasNodeId();
        
        NodeIdProto getNodeId();
        
        NodeIdProtoOrBuilder getNodeIdOrBuilder();
        
        boolean hasPriority();
        
        PriorityProto getPriority();
        
        PriorityProtoOrBuilder getPriorityOrBuilder();
        
        boolean hasCreationTime();
        
        long getCreationTime();
        
        boolean hasFinishTime();
        
        long getFinishTime();
        
        boolean hasDiagnosticsInfo();
        
        String getDiagnosticsInfo();
        
        ByteString getDiagnosticsInfoBytes();
        
        boolean hasLogUrl();
        
        String getLogUrl();
        
        ByteString getLogUrlBytes();
        
        boolean hasContainerExitStatus();
        
        int getContainerExitStatus();
        
        boolean hasContainerState();
        
        ContainerStateProto getContainerState();
    }
    
    public interface ContainerProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasId();
        
        ContainerIdProto getId();
        
        ContainerIdProtoOrBuilder getIdOrBuilder();
        
        boolean hasNodeId();
        
        NodeIdProto getNodeId();
        
        NodeIdProtoOrBuilder getNodeIdOrBuilder();
        
        boolean hasNodeHttpAddress();
        
        String getNodeHttpAddress();
        
        ByteString getNodeHttpAddressBytes();
        
        boolean hasResource();
        
        ResourceProto getResource();
        
        ResourceProtoOrBuilder getResourceOrBuilder();
        
        boolean hasPriority();
        
        PriorityProto getPriority();
        
        PriorityProtoOrBuilder getPriorityOrBuilder();
        
        boolean hasContainerToken();
        
        SecurityProtos.TokenProto getContainerToken();
        
        SecurityProtos.TokenProtoOrBuilder getContainerTokenOrBuilder();
    }
    
    public interface ResourceOptionProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasResource();
        
        ResourceProto getResource();
        
        ResourceProtoOrBuilder getResourceOrBuilder();
        
        boolean hasOverCommitTimeout();
        
        int getOverCommitTimeout();
    }
    
    public interface NodeResourceMapProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasNodeId();
        
        NodeIdProto getNodeId();
        
        NodeIdProtoOrBuilder getNodeIdOrBuilder();
        
        boolean hasResourceOption();
        
        ResourceOptionProto getResourceOption();
        
        ResourceOptionProtoOrBuilder getResourceOptionOrBuilder();
    }
    
    public interface SerializedExceptionProtoOrBuilder extends MessageOrBuilder
    {
        boolean hasMessage();
        
        String getMessage();
        
        ByteString getMessageBytes();
        
        boolean hasTrace();
        
        String getTrace();
        
        ByteString getTraceBytes();
        
        boolean hasClassName();
        
        String getClassName();
        
        ByteString getClassNameBytes();
        
        boolean hasCause();
        
        SerializedExceptionProto getCause();
        
        SerializedExceptionProtoOrBuilder getCauseOrBuilder();
    }
}
